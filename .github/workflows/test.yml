name: Tests

on:
  push:
    branches: [main, feature-*, fix-*]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.11", "3.12", "3.13"]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"

      - name: Set up Python ${{ matrix.python-version }}
        run: uv python install ${{ matrix.python-version }}

      - name: Install dependencies
        run: uv sync --extra dev

      - name: Run linting
        run: uv run ruff check src/ tests/

      - name: Run formatting check
        run: uv run ruff format --check src/ tests/

      - name: Run tests with coverage
        run: uv run pytest

      - name: Upload coverage to Codecov
        if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.12'
        uses: codecov/codecov-action@v4
        with:
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        continue-on-error: true

      - name: Test CLI installation
        run: |
          uv run specify --help
          uv run specify check

  test-success:
    name: All tests passed
    needs: test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check test matrix
        if: needs.test.result != 'success'
        run: exit 1
