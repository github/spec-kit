{"version":3,"file":"services/connection.js","mappings":"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","sources":["webpack://spec-kit-azure-devops-extension/webpack/runtime/chunk loaded","webpack://spec-kit-azure-devops-extension/./src/services/connection.ts","webpack://spec-kit-azure-devops-extension/webpack/bootstrap","webpack://spec-kit-azure-devops-extension/webpack/runtime/define property getters","webpack://spec-kit-azure-devops-extension/webpack/runtime/hasOwnProperty shorthand","webpack://spec-kit-azure-devops-extension/webpack/runtime/make namespace object","webpack://spec-kit-azure-devops-extension/webpack/runtime/jsonp chunk loading","webpack://spec-kit-azure-devops-extension/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import * as SDK from \"azure-devops-extension-sdk\";\r\n\r\ninterface LLMConnectionConfig {\r\n    id: string;\r\n    name: string;\r\n    provider: 'openai' | 'azure-openai' | 'anthropic' | 'custom';\r\n    baseUrl: string;\r\n    model: string;\r\n    apiKey: string;\r\n    maxTokens: number;\r\n    temperature: number;\r\n    isDefault: boolean;\r\n    isActive: boolean;\r\n}\r\n\r\nclass ServiceConnectionManager {\r\n    private projectId: string = '';\r\n    private connections: LLMConnectionConfig[] = [];\r\n\r\n    constructor() {\r\n        this.initialize();\r\n    }\r\n\r\n    async initialize(): Promise<void> {\r\n        await SDK.init();\r\n        await SDK.ready();\r\n\r\n        const webContext = SDK.getWebContext();\r\n        this.projectId = webContext.project?.id || '';\r\n\r\n        await this.loadConnections();\r\n        this.setupEventHandlers();\r\n        this.renderUI();\r\n    }\r\n\r\n    async loadConnections(): Promise<void> {\r\n        try {\r\n            // In a real implementation, this would load from Azure DevOps service connections\r\n            this.connections = [\r\n                {\r\n                    id: 'openai-gpt4',\r\n                    name: 'OpenAI GPT-4',\r\n                    provider: 'openai',\r\n                    baseUrl: 'https://api.openai.com/v1',\r\n                    model: 'gpt-4',\r\n                    apiKey: '*********************',\r\n                    maxTokens: 2000,\r\n                    temperature: 0.7,\r\n                    isDefault: true,\r\n                    isActive: true\r\n                },\r\n                {\r\n                    id: 'azure-openai-gpt4',\r\n                    name: 'Azure OpenAI GPT-4',\r\n                    provider: 'azure-openai',\r\n                    baseUrl: 'https://your-resource.openai.azure.com',\r\n                    model: 'gpt-4',\r\n                    apiKey: '*********************',\r\n                    maxTokens: 2000,\r\n                    temperature: 0.7,\r\n                    isDefault: false,\r\n                    isActive: false\r\n                }\r\n            ];\r\n        } catch (error) {\r\n            console.error('Error loading connections:', error);\r\n        }\r\n    }\r\n\r\n    renderUI(): void {\r\n        const container = document.getElementById('service-connection-container');\r\n        if (!container) return;\r\n\r\n        container.innerHTML = `\r\n            <div class=\"service-connection-manager\">\r\n                <div class=\"header\">\r\n                    <h2>LLM Service Connections</h2>\r\n                    <button class=\"btn primary\" onclick=\"this.showAddConnectionDialog()\">\r\n                        + Add Connection\r\n                    </button>\r\n                </div>\r\n                \r\n                <div class=\"connections-list\">\r\n                    ${this.connections.map(conn => this.renderConnectionCard(conn)).join('')}\r\n                </div>\r\n                \r\n                <div class=\"connection-dialog\" id=\"connection-dialog\" style=\"display: none;\">\r\n                    ${this.renderConnectionDialog()}\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    renderConnectionCard(connection: LLMConnectionConfig): string {\r\n        return `\r\n            <div class=\"connection-card ${connection.isActive ? 'active' : ''} ${connection.isDefault ? 'default' : ''}\">\r\n                <div class=\"connection-header\">\r\n                    <div class=\"connection-info\">\r\n                        <h3>${connection.name}</h3>\r\n                        <span class=\"provider\">${connection.provider}</span>\r\n                        ${connection.isDefault ? '<span class=\"badge default\">Default</span>' : ''}\r\n                    </div>\r\n                    <div class=\"connection-actions\">\r\n                        <button class=\"btn-icon\" onclick=\"this.editConnection('${connection.id}')\" title=\"Edit\">\r\n                            ✏️\r\n                        </button>\r\n                        <button class=\"btn-icon\" onclick=\"this.testConnection('${connection.id}')\" title=\"Test\">\r\n                            🔍\r\n                        </button>\r\n                        <button class=\"btn-icon delete\" onclick=\"this.deleteConnection('${connection.id}')\" title=\"Delete\">\r\n                            🗑️\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"connection-details\">\r\n                    <div class=\"detail-row\">\r\n                        <span class=\"label\">Model:</span>\r\n                        <span class=\"value\">${connection.model}</span>\r\n                    </div>\r\n                    <div class=\"detail-row\">\r\n                        <span class=\"label\">Base URL:</span>\r\n                        <span class=\"value\">${connection.baseUrl}</span>\r\n                    </div>\r\n                    <div class=\"detail-row\">\r\n                        <span class=\"label\">Max Tokens:</span>\r\n                        <span class=\"value\">${connection.maxTokens}</span>\r\n                    </div>\r\n                    <div class=\"detail-row\">\r\n                        <span class=\"label\">Temperature:</span>\r\n                        <span class=\"value\">${connection.temperature}</span>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div class=\"connection-status\">\r\n                    <span class=\"status ${connection.isActive ? 'active' : 'inactive'}\">\r\n                        ${connection.isActive ? '🟢 Active' : '🔴 Inactive'}\r\n                    </span>\r\n                    <button class=\"btn secondary small\" onclick=\"this.toggleConnection('${connection.id}')\">\r\n                        ${connection.isActive ? 'Deactivate' : 'Activate'}\r\n                    </button>\r\n                    ${!connection.isDefault ? `\r\n                        <button class=\"btn secondary small\" onclick=\"this.setAsDefault('${connection.id}')\">\r\n                            Set as Default\r\n                        </button>\r\n                    ` : ''}\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    renderConnectionDialog(): string {\r\n        return `\r\n            <div class=\"dialog-content\">\r\n                <div class=\"dialog-header\">\r\n                    <h3 id=\"dialog-title\">Add LLM Connection</h3>\r\n                    <button class=\"btn-close\" onclick=\"this.hideConnectionDialog()\">×</button>\r\n                </div>\r\n                \r\n                <form id=\"connection-form\" onsubmit=\"this.saveConnection(event)\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"connection-name\">Connection Name</label>\r\n                        <input type=\"text\" id=\"connection-name\" required>\r\n                    </div>\r\n                    \r\n                    <div class=\"form-group\">\r\n                        <label for=\"connection-provider\">Provider</label>\r\n                        <select id=\"connection-provider\" onchange=\"this.onProviderChange()\">\r\n                            <option value=\"openai\">OpenAI</option>\r\n                            <option value=\"azure-openai\">Azure OpenAI</option>\r\n                            <option value=\"anthropic\">Anthropic</option>\r\n                            <option value=\"custom\">Custom</option>\r\n                        </select>\r\n                    </div>\r\n                    \r\n                    <div class=\"form-group\">\r\n                        <label for=\"connection-base-url\">Base URL</label>\r\n                        <input type=\"url\" id=\"connection-base-url\" required>\r\n                    </div>\r\n                    \r\n                    <div class=\"form-group\">\r\n                        <label for=\"connection-model\">Model</label>\r\n                        <input type=\"text\" id=\"connection-model\" required>\r\n                    </div>\r\n                    \r\n                    <div class=\"form-group\">\r\n                        <label for=\"connection-api-key\">API Key</label>\r\n                        <input type=\"password\" id=\"connection-api-key\" required>\r\n                    </div>\r\n                    \r\n                    <div class=\"form-row\">\r\n                        <div class=\"form-group\">\r\n                            <label for=\"connection-max-tokens\">Max Tokens</label>\r\n                            <input type=\"number\" id=\"connection-max-tokens\" value=\"2000\" min=\"1\" max=\"8000\">\r\n                        </div>\r\n                        \r\n                        <div class=\"form-group\">\r\n                            <label for=\"connection-temperature\">Temperature</label>\r\n                            <input type=\"number\" id=\"connection-temperature\" value=\"0.7\" min=\"0\" max=\"2\" step=\"0.1\">\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <div class=\"form-group\">\r\n                        <label>\r\n                            <input type=\"checkbox\" id=\"connection-default\"> Set as default connection\r\n                        </label>\r\n                    </div>\r\n                    \r\n                    <div class=\"dialog-actions\">\r\n                        <button type=\"button\" class=\"btn secondary\" onclick=\"this.hideConnectionDialog()\">\r\n                            Cancel\r\n                        </button>\r\n                        <button type=\"submit\" class=\"btn primary\">\r\n                            Save Connection\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    setupEventHandlers(): void {\r\n        // Add event listeners for dynamic interactions\r\n        // In a real implementation, these would be properly bound\r\n    }\r\n\r\n    showAddConnectionDialog(): void {\r\n        const dialog = document.getElementById('connection-dialog');\r\n        if (dialog) {\r\n            dialog.style.display = 'block';\r\n        }\r\n    }\r\n\r\n    hideConnectionDialog(): void {\r\n        const dialog = document.getElementById('connection-dialog');\r\n        if (dialog) {\r\n            dialog.style.display = 'none';\r\n        }\r\n    }\r\n\r\n    async testConnection(connectionId: string): Promise<void> {\r\n        const connection = this.connections.find(c => c.id === connectionId);\r\n        if (!connection) return;\r\n\r\n        try {\r\n            // Test connection by making a simple API call\r\n            console.log(`Testing connection: ${connection.name}`);\r\n            // Show success/failure feedback\r\n        } catch (error) {\r\n            console.error('Connection test failed:', error);\r\n        }\r\n    }\r\n\r\n    async toggleConnection(connectionId: string): Promise<void> {\r\n        const connection = this.connections.find(c => c.id === connectionId);\r\n        if (connection) {\r\n            connection.isActive = !connection.isActive;\r\n            this.renderUI();\r\n        }\r\n    }\r\n\r\n    async setAsDefault(connectionId: string): Promise<void> {\r\n        this.connections.forEach(c => c.isDefault = c.id === connectionId);\r\n        this.renderUI();\r\n    }\r\n\r\n    async deleteConnection(connectionId: string): Promise<void> {\r\n        if (confirm('Are you sure you want to delete this connection?')) {\r\n            this.connections = this.connections.filter(c => c.id !== connectionId);\r\n            this.renderUI();\r\n        }\r\n    }\r\n\r\n    async saveConnection(event: Event): Promise<void> {\r\n        event.preventDefault();\r\n        // Save connection logic would go here\r\n        this.hideConnectionDialog();\r\n        await this.loadConnections();\r\n        this.renderUI();\r\n    }\r\n\r\n    onProviderChange(): void {\r\n        const provider = (document.getElementById('connection-provider') as HTMLSelectElement)?.value;\r\n        const baseUrlInput = document.getElementById('connection-base-url') as HTMLInputElement;\r\n        const modelInput = document.getElementById('connection-model') as HTMLInputElement;\r\n\r\n        if (provider === 'openai') {\r\n            baseUrlInput.value = 'https://api.openai.com/v1';\r\n            modelInput.value = 'gpt-4';\r\n        } else if (provider === 'azure-openai') {\r\n            baseUrlInput.value = 'https://your-resource.openai.azure.com';\r\n            modelInput.value = 'gpt-4';\r\n        } else if (provider === 'anthropic') {\r\n            baseUrlInput.value = 'https://api.anthropic.com';\r\n            modelInput.value = 'claude-3-opus-20240229';\r\n        }\r\n    }\r\n}\r\n\r\n// Initialize when page loads\r\nSDK.ready().then(() => {\r\n    new ServiceConnectionManager();\r\n});","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t950: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkspec_kit_azure_devops_extension\"] = self[\"webpackChunkspec_kit_azure_devops_extension\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [76], () => (__webpack_require__(36)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","ServiceConnectionManager","constructor","projectId","connections","this","initialize","SDK","init","ready","webContext","getWebContext","project","id","loadConnections","setupEventHandlers","renderUI","name","provider","baseUrl","model","apiKey","maxTokens","temperature","isDefault","isActive","error","console","container","document","getElementById","innerHTML","map","conn","renderConnectionCard","join","renderConnectionDialog","connection","showAddConnectionDialog","dialog","style","display","hideConnectionDialog","testConnection","connectionId","find","c","log","toggleConnection","setAsDefault","forEach","deleteConnection","confirm","filter","saveConnection","event","preventDefault","onProviderChange","value","baseUrlInput","modelInput","then","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","Object","keys","every","key","splice","r","d","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}