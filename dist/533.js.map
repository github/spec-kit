{"version":3,"file":"533.js","mappings":"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","sources":["webpack://spec-kit-azure-devops-extension/./node_modules/azure-devops-extension-api/WorkItemTracking/WorkItemTracking.js","webpack://spec-kit-azure-devops-extension/./node_modules/azure-devops-extension-api/WorkItemTracking/WorkItemTrackingClient.js","webpack://spec-kit-azure-devops-extension/./node_modules/azure-devops-extension-api/Common/RestClientBase.js","webpack://spec-kit-azure-devops-extension/./node_modules/azure-devops-extension-api/Common/Util/Url.js","webpack://spec-kit-azure-devops-extension/./node_modules/azure-devops-extension-api/Common/Client.js","webpack://spec-kit-azure-devops-extension/./node_modules/azure-devops-extension-api/Common/Util/Serialization.js","webpack://spec-kit-azure-devops-extension/./node_modules/azure-devops-extension-api/Common/Fetch.js","webpack://spec-kit-azure-devops-extension/./node_modules/azure-devops-extension-api/Common/CommonServices.js","webpack://spec-kit-azure-devops-extension/./node_modules/azure-devops-extension-api/index.js","webpack://spec-kit-azure-devops-extension/./node_modules/whatwg-fetch/fetch.js","webpack://spec-kit-azure-devops-extension/./node_modules/azure-devops-extension-api/WorkItemTracking/WorkItemTrackingServices.js","webpack://spec-kit-azure-devops-extension/./node_modules/azure-devops-extension-api/WorkItemTracking/index.js","webpack://spec-kit-azure-devops-extension/./node_modules/azure-devops-extension-api/Common/index.js"],"sourcesContent":["/*\r\n * ---------------------------------------------------------\r\n * Copyright(C) Microsoft Corporation. All rights reserved.\r\n * ---------------------------------------------------------\r\n */\r\ndefine([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * Flag to control error policy in a batch classification nodes get request.\r\n     */\r\n    var ClassificationNodesErrorPolicy;\r\n    (function (ClassificationNodesErrorPolicy) {\r\n        ClassificationNodesErrorPolicy[ClassificationNodesErrorPolicy[\"Fail\"] = 1] = \"Fail\";\r\n        ClassificationNodesErrorPolicy[ClassificationNodesErrorPolicy[\"Omit\"] = 2] = \"Omit\";\r\n    })(ClassificationNodesErrorPolicy = exports.ClassificationNodesErrorPolicy || (exports.ClassificationNodesErrorPolicy = {}));\r\n    /**\r\n     * Specifies the additional data retrieval options for work item comments.\r\n     */\r\n    var CommentExpandOptions;\r\n    (function (CommentExpandOptions) {\r\n        CommentExpandOptions[CommentExpandOptions[\"None\"] = 0] = \"None\";\r\n        /**\r\n         * Include comment reactions.\r\n         */\r\n        CommentExpandOptions[CommentExpandOptions[\"Reactions\"] = 1] = \"Reactions\";\r\n        /**\r\n         * Include the rendered text (html) in addition to MD text.\r\n         */\r\n        CommentExpandOptions[CommentExpandOptions[\"RenderedText\"] = 8] = \"RenderedText\";\r\n        /**\r\n         * If specified, then ONLY rendered text (html) will be returned, w/o markdown. Supposed to be used internally from data provides for optimization purposes.\r\n         */\r\n        CommentExpandOptions[CommentExpandOptions[\"RenderedTextOnly\"] = 16] = \"RenderedTextOnly\";\r\n        CommentExpandOptions[CommentExpandOptions[\"All\"] = -17] = \"All\";\r\n    })(CommentExpandOptions = exports.CommentExpandOptions || (exports.CommentExpandOptions = {}));\r\n    /**\r\n     * Represents the possible types for the comment format. Should be in sync with WorkItemCommentFormat.cs\r\n     */\r\n    var CommentFormat;\r\n    (function (CommentFormat) {\r\n        CommentFormat[CommentFormat[\"Markdown\"] = 0] = \"Markdown\";\r\n        CommentFormat[CommentFormat[\"Html\"] = 1] = \"Html\";\r\n    })(CommentFormat = exports.CommentFormat || (exports.CommentFormat = {}));\r\n    /**\r\n     * Represents different reaction types for a work item comment.\r\n     */\r\n    var CommentReactionType;\r\n    (function (CommentReactionType) {\r\n        CommentReactionType[CommentReactionType[\"Like\"] = 0] = \"Like\";\r\n        CommentReactionType[CommentReactionType[\"Dislike\"] = 1] = \"Dislike\";\r\n        CommentReactionType[CommentReactionType[\"Heart\"] = 2] = \"Heart\";\r\n        CommentReactionType[CommentReactionType[\"Hooray\"] = 3] = \"Hooray\";\r\n        CommentReactionType[CommentReactionType[\"Smile\"] = 4] = \"Smile\";\r\n        CommentReactionType[CommentReactionType[\"Confused\"] = 5] = \"Confused\";\r\n    })(CommentReactionType = exports.CommentReactionType || (exports.CommentReactionType = {}));\r\n    var CommentSortOrder;\r\n    (function (CommentSortOrder) {\r\n        /**\r\n         * The results will be sorted in Ascending order.\r\n         */\r\n        CommentSortOrder[CommentSortOrder[\"Asc\"] = 1] = \"Asc\";\r\n        /**\r\n         * The results will be sorted in Descending order.\r\n         */\r\n        CommentSortOrder[CommentSortOrder[\"Desc\"] = 2] = \"Desc\";\r\n    })(CommentSortOrder = exports.CommentSortOrder || (exports.CommentSortOrder = {}));\r\n    /**\r\n     * Enum for field types.\r\n     */\r\n    var FieldType;\r\n    (function (FieldType) {\r\n        /**\r\n         * String field type.\r\n         */\r\n        FieldType[FieldType[\"String\"] = 0] = \"String\";\r\n        /**\r\n         * Integer field type.\r\n         */\r\n        FieldType[FieldType[\"Integer\"] = 1] = \"Integer\";\r\n        /**\r\n         * Datetime field type.\r\n         */\r\n        FieldType[FieldType[\"DateTime\"] = 2] = \"DateTime\";\r\n        /**\r\n         * Plain text field type.\r\n         */\r\n        FieldType[FieldType[\"PlainText\"] = 3] = \"PlainText\";\r\n        /**\r\n         * HTML (Multiline) field type.\r\n         */\r\n        FieldType[FieldType[\"Html\"] = 4] = \"Html\";\r\n        /**\r\n         * Treepath field type.\r\n         */\r\n        FieldType[FieldType[\"TreePath\"] = 5] = \"TreePath\";\r\n        /**\r\n         * History field type.\r\n         */\r\n        FieldType[FieldType[\"History\"] = 6] = \"History\";\r\n        /**\r\n         * Double field type.\r\n         */\r\n        FieldType[FieldType[\"Double\"] = 7] = \"Double\";\r\n        /**\r\n         * Guid field type.\r\n         */\r\n        FieldType[FieldType[\"Guid\"] = 8] = \"Guid\";\r\n        /**\r\n         * Boolean field type.\r\n         */\r\n        FieldType[FieldType[\"Boolean\"] = 9] = \"Boolean\";\r\n        /**\r\n         * Identity field type.\r\n         */\r\n        FieldType[FieldType[\"Identity\"] = 10] = \"Identity\";\r\n        /**\r\n         * String picklist field type. When creating a string picklist field from REST API, use \"String\" FieldType.\r\n         */\r\n        FieldType[FieldType[\"PicklistString\"] = 11] = \"PicklistString\";\r\n        /**\r\n         * Integer picklist field type. When creating a integer picklist field from REST API, use \"Integer\" FieldType.\r\n         */\r\n        FieldType[FieldType[\"PicklistInteger\"] = 12] = \"PicklistInteger\";\r\n        /**\r\n         * Double picklist field type. When creating a double picklist field from REST API, use \"Double\" FieldType.\r\n         */\r\n        FieldType[FieldType[\"PicklistDouble\"] = 13] = \"PicklistDouble\";\r\n    })(FieldType = exports.FieldType || (exports.FieldType = {}));\r\n    /**\r\n     * Enum for field usages.\r\n     */\r\n    var FieldUsage;\r\n    (function (FieldUsage) {\r\n        /**\r\n         * Empty usage.\r\n         */\r\n        FieldUsage[FieldUsage[\"None\"] = 0] = \"None\";\r\n        /**\r\n         * Work item field usage.\r\n         */\r\n        FieldUsage[FieldUsage[\"WorkItem\"] = 1] = \"WorkItem\";\r\n        /**\r\n         * Work item link field usage.\r\n         */\r\n        FieldUsage[FieldUsage[\"WorkItemLink\"] = 2] = \"WorkItemLink\";\r\n        /**\r\n         * Treenode field usage.\r\n         */\r\n        FieldUsage[FieldUsage[\"Tree\"] = 3] = \"Tree\";\r\n        /**\r\n         * Work Item Type Extension usage.\r\n         */\r\n        FieldUsage[FieldUsage[\"WorkItemTypeExtension\"] = 4] = \"WorkItemTypeExtension\";\r\n    })(FieldUsage = exports.FieldUsage || (exports.FieldUsage = {}));\r\n    /**\r\n     * Flag to expand types of fields.\r\n     */\r\n    var GetFieldsExpand;\r\n    (function (GetFieldsExpand) {\r\n        /**\r\n         * Default behavior.\r\n         */\r\n        GetFieldsExpand[GetFieldsExpand[\"None\"] = 0] = \"None\";\r\n        /**\r\n         * Adds extension fields to the response.\r\n         */\r\n        GetFieldsExpand[GetFieldsExpand[\"ExtensionFields\"] = 1] = \"ExtensionFields\";\r\n        /**\r\n         * Includes fields that have been deleted.\r\n         */\r\n        GetFieldsExpand[GetFieldsExpand[\"IncludeDeleted\"] = 2] = \"IncludeDeleted\";\r\n    })(GetFieldsExpand = exports.GetFieldsExpand || (exports.GetFieldsExpand = {}));\r\n    /**\r\n     * Format for multiline field selected by the last edit user.\r\n     */\r\n    var LargeTextCustomHtmlFormat;\r\n    (function (LargeTextCustomHtmlFormat) {\r\n        /**\r\n         * Markdown format for text content.\r\n         */\r\n        LargeTextCustomHtmlFormat[LargeTextCustomHtmlFormat[\"Markdown\"] = 0] = \"Markdown\";\r\n        /**\r\n         * HTML format for text content.\r\n         */\r\n        LargeTextCustomHtmlFormat[LargeTextCustomHtmlFormat[\"Html\"] = 1] = \"Html\";\r\n    })(LargeTextCustomHtmlFormat = exports.LargeTextCustomHtmlFormat || (exports.LargeTextCustomHtmlFormat = {}));\r\n    /**\r\n     * The link query mode which determines the behavior of the query.\r\n     */\r\n    var LinkQueryMode;\r\n    (function (LinkQueryMode) {\r\n        /**\r\n         * Returns flat list of work items.\r\n         */\r\n        LinkQueryMode[LinkQueryMode[\"WorkItems\"] = 0] = \"WorkItems\";\r\n        /**\r\n         * Returns work items where the source, target, and link criteria are all satisfied.\r\n         */\r\n        LinkQueryMode[LinkQueryMode[\"LinksOneHopMustContain\"] = 1] = \"LinksOneHopMustContain\";\r\n        /**\r\n         * Returns work items that satisfy the source and link criteria, even if no linked work item satisfies the target criteria.\r\n         */\r\n        LinkQueryMode[LinkQueryMode[\"LinksOneHopMayContain\"] = 2] = \"LinksOneHopMayContain\";\r\n        /**\r\n         * Returns work items that satisfy the source, only if no linked work item satisfies the link and target criteria.\r\n         */\r\n        LinkQueryMode[LinkQueryMode[\"LinksOneHopDoesNotContain\"] = 3] = \"LinksOneHopDoesNotContain\";\r\n        LinkQueryMode[LinkQueryMode[\"LinksRecursiveMustContain\"] = 4] = \"LinksRecursiveMustContain\";\r\n        /**\r\n         * Returns work items a hierarchy of work items that by default satisfy the source\r\n         */\r\n        LinkQueryMode[LinkQueryMode[\"LinksRecursiveMayContain\"] = 5] = \"LinksRecursiveMayContain\";\r\n        LinkQueryMode[LinkQueryMode[\"LinksRecursiveDoesNotContain\"] = 6] = \"LinksRecursiveDoesNotContain\";\r\n    })(LinkQueryMode = exports.LinkQueryMode || (exports.LinkQueryMode = {}));\r\n    var LogicalOperation;\r\n    (function (LogicalOperation) {\r\n        LogicalOperation[LogicalOperation[\"NONE\"] = 0] = \"NONE\";\r\n        LogicalOperation[LogicalOperation[\"AND\"] = 1] = \"AND\";\r\n        LogicalOperation[LogicalOperation[\"OR\"] = 2] = \"OR\";\r\n    })(LogicalOperation = exports.LogicalOperation || (exports.LogicalOperation = {}));\r\n    /**\r\n     * Enumerates the possible provisioning actions that can be triggered on process template update.\r\n     */\r\n    var ProvisioningActionType;\r\n    (function (ProvisioningActionType) {\r\n        ProvisioningActionType[ProvisioningActionType[\"Import\"] = 0] = \"Import\";\r\n        ProvisioningActionType[ProvisioningActionType[\"Validate\"] = 1] = \"Validate\";\r\n    })(ProvisioningActionType = exports.ProvisioningActionType || (exports.ProvisioningActionType = {}));\r\n    /**\r\n     * Enum to control error policy in a query batch request.\r\n     */\r\n    var QueryErrorPolicy;\r\n    (function (QueryErrorPolicy) {\r\n        QueryErrorPolicy[QueryErrorPolicy[\"Fail\"] = 1] = \"Fail\";\r\n        QueryErrorPolicy[QueryErrorPolicy[\"Omit\"] = 2] = \"Omit\";\r\n    })(QueryErrorPolicy = exports.QueryErrorPolicy || (exports.QueryErrorPolicy = {}));\r\n    /**\r\n     * Determines which set of additional query properties to display\r\n     */\r\n    var QueryExpand;\r\n    (function (QueryExpand) {\r\n        /**\r\n         * Expands Columns, Links and ChangeInfo\r\n         */\r\n        QueryExpand[QueryExpand[\"None\"] = 0] = \"None\";\r\n        /**\r\n         * Expands Columns, Links,  ChangeInfo and WIQL text\r\n         */\r\n        QueryExpand[QueryExpand[\"Wiql\"] = 1] = \"Wiql\";\r\n        /**\r\n         * Expands Columns, Links, ChangeInfo, WIQL text and clauses\r\n         */\r\n        QueryExpand[QueryExpand[\"Clauses\"] = 2] = \"Clauses\";\r\n        /**\r\n         * Expands all properties\r\n         */\r\n        QueryExpand[QueryExpand[\"All\"] = 3] = \"All\";\r\n        /**\r\n         * Displays minimal properties and the WIQL text\r\n         */\r\n        QueryExpand[QueryExpand[\"Minimal\"] = 4] = \"Minimal\";\r\n    })(QueryExpand = exports.QueryExpand || (exports.QueryExpand = {}));\r\n    var QueryOption;\r\n    (function (QueryOption) {\r\n        QueryOption[QueryOption[\"Doing\"] = 1] = \"Doing\";\r\n        QueryOption[QueryOption[\"Done\"] = 2] = \"Done\";\r\n        QueryOption[QueryOption[\"Followed\"] = 3] = \"Followed\";\r\n    })(QueryOption = exports.QueryOption || (exports.QueryOption = {}));\r\n    /**\r\n     * Determines whether a tree query matches parents or children first.\r\n     */\r\n    var QueryRecursionOption;\r\n    (function (QueryRecursionOption) {\r\n        /**\r\n         * Returns work items that satisfy the source, even if no linked work item satisfies the target and link criteria.\r\n         */\r\n        QueryRecursionOption[QueryRecursionOption[\"ParentFirst\"] = 0] = \"ParentFirst\";\r\n        /**\r\n         * Returns work items that satisfy the target criteria, even if no work item satisfies the source and link criteria.\r\n         */\r\n        QueryRecursionOption[QueryRecursionOption[\"ChildFirst\"] = 1] = \"ChildFirst\";\r\n    })(QueryRecursionOption = exports.QueryRecursionOption || (exports.QueryRecursionOption = {}));\r\n    /**\r\n     * The query result type\r\n     */\r\n    var QueryResultType;\r\n    (function (QueryResultType) {\r\n        /**\r\n         * A list of work items (for flat queries).\r\n         */\r\n        QueryResultType[QueryResultType[\"WorkItem\"] = 1] = \"WorkItem\";\r\n        /**\r\n         * A list of work item links (for OneHop and Tree queries).\r\n         */\r\n        QueryResultType[QueryResultType[\"WorkItemLink\"] = 2] = \"WorkItemLink\";\r\n    })(QueryResultType = exports.QueryResultType || (exports.QueryResultType = {}));\r\n    /**\r\n     * The type of query.\r\n     */\r\n    var QueryType;\r\n    (function (QueryType) {\r\n        /**\r\n         * Gets a flat list of work items.\r\n         */\r\n        QueryType[QueryType[\"Flat\"] = 1] = \"Flat\";\r\n        /**\r\n         * Gets a tree of work items showing their link hierarchy.\r\n         */\r\n        QueryType[QueryType[\"Tree\"] = 2] = \"Tree\";\r\n        /**\r\n         * Gets a list of work items and their direct links.\r\n         */\r\n        QueryType[QueryType[\"OneHop\"] = 3] = \"OneHop\";\r\n    })(QueryType = exports.QueryType || (exports.QueryType = {}));\r\n    /**\r\n     * The reporting revision expand level.\r\n     */\r\n    var ReportingRevisionsExpand;\r\n    (function (ReportingRevisionsExpand) {\r\n        /**\r\n         * Default behavior.\r\n         */\r\n        ReportingRevisionsExpand[ReportingRevisionsExpand[\"None\"] = 0] = \"None\";\r\n        /**\r\n         * Add fields to the response.\r\n         */\r\n        ReportingRevisionsExpand[ReportingRevisionsExpand[\"Fields\"] = 1] = \"Fields\";\r\n    })(ReportingRevisionsExpand = exports.ReportingRevisionsExpand || (exports.ReportingRevisionsExpand = {}));\r\n    /**\r\n     * Enumerates types of supported xml templates used for customization.\r\n     */\r\n    var TemplateType;\r\n    (function (TemplateType) {\r\n        TemplateType[TemplateType[\"WorkItemType\"] = 0] = \"WorkItemType\";\r\n        TemplateType[TemplateType[\"GlobalWorkflow\"] = 1] = \"GlobalWorkflow\";\r\n    })(TemplateType = exports.TemplateType || (exports.TemplateType = {}));\r\n    /**\r\n     * Types of tree node structures.\r\n     */\r\n    var TreeNodeStructureType;\r\n    (function (TreeNodeStructureType) {\r\n        /**\r\n         * Area type.\r\n         */\r\n        TreeNodeStructureType[TreeNodeStructureType[\"Area\"] = 0] = \"Area\";\r\n        /**\r\n         * Iteration type.\r\n         */\r\n        TreeNodeStructureType[TreeNodeStructureType[\"Iteration\"] = 1] = \"Iteration\";\r\n    })(TreeNodeStructureType = exports.TreeNodeStructureType || (exports.TreeNodeStructureType = {}));\r\n    /**\r\n     * Types of tree structures groups.\r\n     */\r\n    var TreeStructureGroup;\r\n    (function (TreeStructureGroup) {\r\n        TreeStructureGroup[TreeStructureGroup[\"Areas\"] = 0] = \"Areas\";\r\n        TreeStructureGroup[TreeStructureGroup[\"Iterations\"] = 1] = \"Iterations\";\r\n    })(TreeStructureGroup = exports.TreeStructureGroup || (exports.TreeStructureGroup = {}));\r\n    /**\r\n     * Enum to control error policy in a bulk get work items request.\r\n     */\r\n    var WorkItemErrorPolicy;\r\n    (function (WorkItemErrorPolicy) {\r\n        /**\r\n         * Fail work error policy.\r\n         */\r\n        WorkItemErrorPolicy[WorkItemErrorPolicy[\"Fail\"] = 1] = \"Fail\";\r\n        /**\r\n         * Omit work error policy.\r\n         */\r\n        WorkItemErrorPolicy[WorkItemErrorPolicy[\"Omit\"] = 2] = \"Omit\";\r\n    })(WorkItemErrorPolicy = exports.WorkItemErrorPolicy || (exports.WorkItemErrorPolicy = {}));\r\n    /**\r\n     * Flag to control payload properties from get work item command.\r\n     */\r\n    var WorkItemExpand;\r\n    (function (WorkItemExpand) {\r\n        /**\r\n         * Default behavior.\r\n         */\r\n        WorkItemExpand[WorkItemExpand[\"None\"] = 0] = \"None\";\r\n        /**\r\n         * Relations work item expand.\r\n         */\r\n        WorkItemExpand[WorkItemExpand[\"Relations\"] = 1] = \"Relations\";\r\n        /**\r\n         * Fields work item expand.\r\n         */\r\n        WorkItemExpand[WorkItemExpand[\"Fields\"] = 2] = \"Fields\";\r\n        /**\r\n         * Links work item expand.\r\n         */\r\n        WorkItemExpand[WorkItemExpand[\"Links\"] = 3] = \"Links\";\r\n        /**\r\n         * Expands all.\r\n         */\r\n        WorkItemExpand[WorkItemExpand[\"All\"] = 4] = \"All\";\r\n    })(WorkItemExpand = exports.WorkItemExpand || (exports.WorkItemExpand = {}));\r\n    /**\r\n     * Type of the activity\r\n     */\r\n    var WorkItemRecentActivityType;\r\n    (function (WorkItemRecentActivityType) {\r\n        WorkItemRecentActivityType[WorkItemRecentActivityType[\"Visited\"] = 0] = \"Visited\";\r\n        WorkItemRecentActivityType[WorkItemRecentActivityType[\"Edited\"] = 1] = \"Edited\";\r\n        WorkItemRecentActivityType[WorkItemRecentActivityType[\"Deleted\"] = 2] = \"Deleted\";\r\n        WorkItemRecentActivityType[WorkItemRecentActivityType[\"Restored\"] = 3] = \"Restored\";\r\n    })(WorkItemRecentActivityType = exports.WorkItemRecentActivityType || (exports.WorkItemRecentActivityType = {}));\r\n    /**\r\n     * Expand options for the work item field(s) request.\r\n     */\r\n    var WorkItemTypeFieldsExpandLevel;\r\n    (function (WorkItemTypeFieldsExpandLevel) {\r\n        /**\r\n         * Includes only basic properties of the field.\r\n         */\r\n        WorkItemTypeFieldsExpandLevel[WorkItemTypeFieldsExpandLevel[\"None\"] = 0] = \"None\";\r\n        /**\r\n         * Includes allowed values for the field.\r\n         */\r\n        WorkItemTypeFieldsExpandLevel[WorkItemTypeFieldsExpandLevel[\"AllowedValues\"] = 1] = \"AllowedValues\";\r\n        /**\r\n         * Includes dependent fields of the field.\r\n         */\r\n        WorkItemTypeFieldsExpandLevel[WorkItemTypeFieldsExpandLevel[\"DependentFields\"] = 2] = \"DependentFields\";\r\n        /**\r\n         * Includes allowed values and dependent fields of the field.\r\n         */\r\n        WorkItemTypeFieldsExpandLevel[WorkItemTypeFieldsExpandLevel[\"All\"] = 3] = \"All\";\r\n    })(WorkItemTypeFieldsExpandLevel = exports.WorkItemTypeFieldsExpandLevel || (exports.WorkItemTypeFieldsExpandLevel = {}));\r\n});\r\n","/*\r\n * ---------------------------------------------------------\r\n * Copyright(C) Microsoft Corporation. All rights reserved.\r\n * ---------------------------------------------------------\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\ndefine([\"require\", \"exports\", \"../Common/RestClientBase\"], function (require, exports, RestClientBase_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var WorkItemTrackingRestClient = /** @class */ (function (_super) {\r\n        __extends(WorkItemTrackingRestClient, _super);\r\n        function WorkItemTrackingRestClient(options) {\r\n            return _super.call(this, options) || this;\r\n        }\r\n        /**\r\n         * INTERNAL ONLY: USED BY ACCOUNT MY WORK PAGE. This returns Doing, Done, Follows and activity work items details.\r\n         *\r\n         * @param queryOption -\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getAccountMyWorkData = function (queryOption) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        '$queryOption': queryOption\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.1\",\r\n                            routeTemplate: \"_apis/work/accountMyWork\",\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Gets recent work item activities\r\n         *\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getRecentActivityData = function () {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            routeTemplate: \"_apis/work/accountMyWorkRecentActivity\"\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * INTERNAL ONLY: USED BY ACCOUNT MY WORK PAGE.\r\n         *\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getRecentMentions = function () {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.1\",\r\n                            routeTemplate: \"_apis/work/accountRecentMentions\"\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Get the list of work item tracking outbound artifact link types.\r\n         *\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getWorkArtifactLinkTypes = function () {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.1\",\r\n                            routeTemplate: \"_apis/wit/artifactLinkTypes\"\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Queries work items linked to a given list of artifact URI.\r\n         *\r\n         * @param artifactUriQuery - Defines a list of artifact URI for querying work items.\r\n         * @param project - Project ID or project name\r\n         */\r\n        WorkItemTrackingRestClient.prototype.queryWorkItemsForArtifactUris = function (artifactUriQuery, project) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.1\",\r\n                            method: \"POST\",\r\n                            routeTemplate: \"{project}/_apis/wit/artifactUriQuery\",\r\n                            routeValues: {\r\n                                project: project\r\n                            },\r\n                            body: artifactUriQuery\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Uploads an attachment.\r\n         *\r\n         * @param content - Content to upload\r\n         * @param project - Project ID or project name\r\n         * @param fileName - The name of the file\r\n         * @param uploadType - Attachment upload type: Simple or Chunked\r\n         * @param areaPath - Target project Area Path\r\n         */\r\n        WorkItemTrackingRestClient.prototype.createAttachment = function (content, project, fileName, uploadType, areaPath) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        fileName: fileName,\r\n                        uploadType: uploadType,\r\n                        areaPath: areaPath\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.3\",\r\n                            method: \"POST\",\r\n                            routeTemplate: \"{project}/_apis/wit/attachments/{id}\",\r\n                            routeValues: {\r\n                                project: project\r\n                            },\r\n                            customHeaders: {\r\n                                \"Content-Type\": \"application/octet-stream\",\r\n                            },\r\n                            queryParams: queryValues,\r\n                            body: content,\r\n                            isRawData: true\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Downloads an attachment.\r\n         *\r\n         * @param id - Attachment ID\r\n         * @param project - Project ID or project name\r\n         * @param fileName - Name of the file\r\n         * @param download - If set to \\<c\\>true\\</c\\> always download attachment\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getAttachmentContent = function (id, project, fileName, download) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        fileName: fileName,\r\n                        download: download\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.3\",\r\n                            httpResponseType: \"application/octet-stream\",\r\n                            routeTemplate: \"{project}/_apis/wit/attachments/{id}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                id: id\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Downloads an attachment.\r\n         *\r\n         * @param id - Attachment ID\r\n         * @param project - Project ID or project name\r\n         * @param fileName - Name of the file\r\n         * @param download - If set to \\<c\\>true\\</c\\> always download attachment\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getAttachmentZip = function (id, project, fileName, download) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        fileName: fileName,\r\n                        download: download\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.3\",\r\n                            httpResponseType: \"application/zip\",\r\n                            routeTemplate: \"{project}/_apis/wit/attachments/{id}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                id: id\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Gets root classification nodes or list of classification nodes for a given list of nodes ids, for a given project. In case ids parameter is supplied you will  get list of classification nodes for those ids. Otherwise you will get root classification nodes for this project.\r\n         *\r\n         * @param project - Project ID or project name\r\n         * @param ids - Comma separated integer classification nodes ids. It's not required, if you want root nodes.\r\n         * @param depth - Depth of children to fetch.\r\n         * @param errorPolicy - Flag to handle errors in getting some nodes. Possible options are Fail and Omit.\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getClassificationNodes = function (project, ids, depth, errorPolicy) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        ids: ids && ids.join(\",\"),\r\n                        '$depth': depth,\r\n                        errorPolicy: errorPolicy\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            routeTemplate: \"{project}/_apis/wit/classificationNodes\",\r\n                            routeValues: {\r\n                                project: project\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Gets root classification nodes under the project.\r\n         *\r\n         * @param project - Project ID or project name\r\n         * @param depth - Depth of children to fetch.\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getRootNodes = function (project, depth) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        '$depth': depth\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            routeTemplate: \"{project}/_apis/wit/classificationNodes\",\r\n                            routeValues: {\r\n                                project: project\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Create new or update an existing classification node.\r\n         *\r\n         * @param postedNode - Node to create or update.\r\n         * @param project - Project ID or project name\r\n         * @param structureGroup - Structure group of the classification node, area or iteration.\r\n         * @param path - Path of the classification node.\r\n         */\r\n        WorkItemTrackingRestClient.prototype.createOrUpdateClassificationNode = function (postedNode, project, structureGroup, path) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            method: \"POST\",\r\n                            routeTemplate: \"{project}/_apis/wit/classificationNodes/{structureGroup}/{*path}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                structureGroup: structureGroup,\r\n                                path: path\r\n                            },\r\n                            body: postedNode\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Delete an existing classification node.\r\n         *\r\n         * @param project - Project ID or project name\r\n         * @param structureGroup - Structure group of the classification node, area or iteration.\r\n         * @param path - Path of the classification node.\r\n         * @param reclassifyId - Id of the target classification node for reclassification.\r\n         */\r\n        WorkItemTrackingRestClient.prototype.deleteClassificationNode = function (project, structureGroup, path, reclassifyId) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        '$reclassifyId': reclassifyId\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            method: \"DELETE\",\r\n                            routeTemplate: \"{project}/_apis/wit/classificationNodes/{structureGroup}/{*path}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                structureGroup: structureGroup,\r\n                                path: path\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Gets the classification node for a given node path.\r\n         *\r\n         * @param project - Project ID or project name\r\n         * @param structureGroup - Structure group of the classification node, area or iteration.\r\n         * @param path - Path of the classification node.\r\n         * @param depth - Depth of children to fetch.\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getClassificationNode = function (project, structureGroup, path, depth) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        '$depth': depth\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            routeTemplate: \"{project}/_apis/wit/classificationNodes/{structureGroup}/{*path}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                structureGroup: structureGroup,\r\n                                path: path\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Update an existing classification node.\r\n         *\r\n         * @param postedNode - Node to create or update.\r\n         * @param project - Project ID or project name\r\n         * @param structureGroup - Structure group of the classification node, area or iteration.\r\n         * @param path - Path of the classification node.\r\n         */\r\n        WorkItemTrackingRestClient.prototype.updateClassificationNode = function (postedNode, project, structureGroup, path) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            method: \"PATCH\",\r\n                            routeTemplate: \"{project}/_apis/wit/classificationNodes/{structureGroup}/{*path}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                structureGroup: structureGroup,\r\n                                path: path\r\n                            },\r\n                            body: postedNode\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Gets a comment for a work item at the specified revision.\r\n         *\r\n         * @param id - Work item id\r\n         * @param revision - Revision for which the comment need to be fetched\r\n         * @param project - Project ID or project name\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getComment = function (id, revision, project) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            routeTemplate: \"{project}/_apis/wit/workItems/{id}/comments/{revision}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                id: id,\r\n                                revision: revision\r\n                            }\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Gets the specified number of comments for a work item from the specified revision.\r\n         *\r\n         * @param id - Work item id\r\n         * @param project - Project ID or project name\r\n         * @param fromRevision - Revision from which comments are to be fetched (default is 1)\r\n         * @param top - The number of comments to return (default is 200)\r\n         * @param order - Ascending or descending by revision id (default is ascending)\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getComments = function (id, project, fromRevision, top, order) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        fromRevision: fromRevision,\r\n                        '$top': top,\r\n                        order: order\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            routeTemplate: \"{project}/_apis/wit/workItems/{id}/comments/{revision}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                id: id\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Create a new field.\r\n         *\r\n         * @param workItemField - New field definition\r\n         * @param project - Project ID or project name\r\n         */\r\n        WorkItemTrackingRestClient.prototype.createField = function (workItemField, project) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            method: \"POST\",\r\n                            routeTemplate: \"{project}/_apis/wit/fields/{fieldNameOrRefName}\",\r\n                            routeValues: {\r\n                                project: project\r\n                            },\r\n                            body: workItemField\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Deletes the field. To undelete a filed, see \"Update Field\" API.\r\n         *\r\n         * @param fieldNameOrRefName - Field simple name or reference name\r\n         * @param project - Project ID or project name\r\n         */\r\n        WorkItemTrackingRestClient.prototype.deleteField = function (fieldNameOrRefName, project) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            method: \"DELETE\",\r\n                            routeTemplate: \"{project}/_apis/wit/fields/{fieldNameOrRefName}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                fieldNameOrRefName: fieldNameOrRefName\r\n                            }\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Gets information on a specific field.\r\n         *\r\n         * @param fieldNameOrRefName - Field simple name or reference name\r\n         * @param project - Project ID or project name\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getField = function (fieldNameOrRefName, project) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            routeTemplate: \"{project}/_apis/wit/fields/{fieldNameOrRefName}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                fieldNameOrRefName: fieldNameOrRefName\r\n                            }\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Returns information for all fields. The project ID/name parameter is optional.\r\n         *\r\n         * @param project - Project ID or project name\r\n         * @param expand - Use ExtensionFields to include extension fields, otherwise exclude them. Unless the feature flag for this parameter is enabled, extension fields are always included.\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getFields = function (project, expand) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        '$expand': expand\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            routeTemplate: \"{project}/_apis/wit/fields/{fieldNameOrRefName}\",\r\n                            routeValues: {\r\n                                project: project\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Update a field.\r\n         *\r\n         * @param payload - Payload contains desired value of the field's properties\r\n         * @param fieldNameOrRefName - Name/reference name of the field to be updated\r\n         * @param project - Project ID or project name\r\n         */\r\n        WorkItemTrackingRestClient.prototype.updateField = function (payload, fieldNameOrRefName, project) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            method: \"PATCH\",\r\n                            routeTemplate: \"{project}/_apis/wit/fields/{fieldNameOrRefName}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                fieldNameOrRefName: fieldNameOrRefName\r\n                            },\r\n                            body: payload\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Creates a query, or moves a query.\r\n         *\r\n         * @param postedQuery - The query to create.\r\n         * @param project - Project ID or project name\r\n         * @param query - The parent id or path under which the query is to be created.\r\n         * @param validateWiqlOnly - If you only want to validate your WIQL query without actually creating one, set it to true. Default is false.\r\n         */\r\n        WorkItemTrackingRestClient.prototype.createQuery = function (postedQuery, project, query, validateWiqlOnly) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        validateWiqlOnly: validateWiqlOnly\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            method: \"POST\",\r\n                            routeTemplate: \"{project}/_apis/wit/queries/{*query}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                query: query\r\n                            },\r\n                            queryParams: queryValues,\r\n                            body: postedQuery\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Delete a query or a folder. This deletes any permission change on the deleted query or folder and any of its descendants if it is a folder. It is important to note that the deleted permission changes cannot be recovered upon undeleting the query or folder.\r\n         *\r\n         * @param project - Project ID or project name\r\n         * @param query - ID or path of the query or folder to delete.\r\n         */\r\n        WorkItemTrackingRestClient.prototype.deleteQuery = function (project, query) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            method: \"DELETE\",\r\n                            routeTemplate: \"{project}/_apis/wit/queries/{*query}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                query: query\r\n                            }\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Gets the root queries and their children\r\n         *\r\n         * @param project - Project ID or project name\r\n         * @param expand - Include the query string (wiql), clauses, query result columns, and sort options in the results.\r\n         * @param depth - In the folder of queries, return child queries and folders to this depth.\r\n         * @param includeDeleted - Include deleted queries and folders\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getQueries = function (project, expand, depth, includeDeleted) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        '$expand': expand,\r\n                        '$depth': depth,\r\n                        '$includeDeleted': includeDeleted\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            routeTemplate: \"{project}/_apis/wit/queries/{*query}\",\r\n                            routeValues: {\r\n                                project: project\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Retrieves an individual query and its children\r\n         *\r\n         * @param project - Project ID or project name\r\n         * @param query - ID or path of the query.\r\n         * @param expand - Include the query string (wiql), clauses, query result columns, and sort options in the results.\r\n         * @param depth - In the folder of queries, return child queries and folders to this depth.\r\n         * @param includeDeleted - Include deleted queries and folders\r\n         * @param useIsoDateFormat - DateTime query clauses will be formatted using a ISO 8601 compliant format\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getQuery = function (project, query, expand, depth, includeDeleted, useIsoDateFormat) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        '$expand': expand,\r\n                        '$depth': depth,\r\n                        '$includeDeleted': includeDeleted,\r\n                        '$useIsoDateFormat': useIsoDateFormat\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            routeTemplate: \"{project}/_apis/wit/queries/{*query}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                query: query\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Searches all queries the user has access to in the current project\r\n         *\r\n         * @param project - Project ID or project name\r\n         * @param filter - The text to filter the queries with.\r\n         * @param top - The number of queries to return (Default is 50 and maximum is 200).\r\n         * @param expand -\r\n         * @param includeDeleted - Include deleted queries and folders\r\n         */\r\n        WorkItemTrackingRestClient.prototype.searchQueries = function (project, filter, top, expand, includeDeleted) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        '$filter': filter,\r\n                        '$top': top,\r\n                        '$expand': expand,\r\n                        '$includeDeleted': includeDeleted\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            routeTemplate: \"{project}/_apis/wit/queries/{*query}\",\r\n                            routeValues: {\r\n                                project: project\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Update a query or a folder. This allows you to update, rename and move queries and folders.\r\n         *\r\n         * @param queryUpdate - The query to update.\r\n         * @param project - Project ID or project name\r\n         * @param query - The ID or path for the query to update.\r\n         * @param undeleteDescendants - Undelete the children of this folder. It is important to note that this will not bring back the permission changes that were previously applied to the descendants.\r\n         */\r\n        WorkItemTrackingRestClient.prototype.updateQuery = function (queryUpdate, project, query, undeleteDescendants) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        '$undeleteDescendants': undeleteDescendants\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            method: \"PATCH\",\r\n                            routeTemplate: \"{project}/_apis/wit/queries/{*query}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                query: query\r\n                            },\r\n                            queryParams: queryValues,\r\n                            body: queryUpdate\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Gets a list of queries by ids (Maximum 1000)\r\n         *\r\n         * @param queryGetRequest -\r\n         * @param project - Project ID or project name\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getQueriesBatch = function (queryGetRequest, project) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.1\",\r\n                            method: \"POST\",\r\n                            routeTemplate: \"{project}/_apis/wit/queriesBatch\",\r\n                            routeValues: {\r\n                                project: project\r\n                            },\r\n                            body: queryGetRequest\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Destroys the specified work item permanently from the Recycle Bin. This action can not be undone.\r\n         *\r\n         * @param id - ID of the work item to be destroyed permanently\r\n         * @param project - Project ID or project name\r\n         */\r\n        WorkItemTrackingRestClient.prototype.destroyWorkItem = function (id, project) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            method: \"DELETE\",\r\n                            routeTemplate: \"{project}/_apis/wit/recyclebin/{id}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                id: id\r\n                            }\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Gets a deleted work item from Recycle Bin.\r\n         *\r\n         * @param id - ID of the work item to be returned\r\n         * @param project - Project ID or project name\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getDeletedWorkItem = function (id, project) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            routeTemplate: \"{project}/_apis/wit/recyclebin/{id}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                id: id\r\n                            }\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Gets the work items from the recycle bin, whose IDs have been specified in the parameters\r\n         *\r\n         * @param ids - Comma separated list of IDs of the deleted work items to be returned\r\n         * @param project - Project ID or project name\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getDeletedWorkItems = function (ids, project) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        ids: ids && ids.join(\",\")\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            routeTemplate: \"{project}/_apis/wit/recyclebin/{id}\",\r\n                            routeValues: {\r\n                                project: project\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Gets a list of the IDs and the URLs of the deleted the work items in the Recycle Bin.\r\n         *\r\n         * @param project - Project ID or project name\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getDeletedWorkItemShallowReferences = function (project) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            routeTemplate: \"{project}/_apis/wit/recyclebin/{id}\",\r\n                            routeValues: {\r\n                                project: project\r\n                            }\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Restores the deleted work item from Recycle Bin.\r\n         *\r\n         * @param payload - Paylod with instructions to update the IsDeleted flag to false\r\n         * @param id - ID of the work item to be restored\r\n         * @param project - Project ID or project name\r\n         */\r\n        WorkItemTrackingRestClient.prototype.restoreWorkItem = function (payload, id, project) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            method: \"PATCH\",\r\n                            routeTemplate: \"{project}/_apis/wit/recyclebin/{id}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                id: id\r\n                            },\r\n                            body: payload\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Returns a fully hydrated work item for the requested revision\r\n         *\r\n         * @param id -\r\n         * @param revisionNumber -\r\n         * @param project - Project ID or project name\r\n         * @param expand -\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getRevision = function (id, revisionNumber, project, expand) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        '$expand': expand\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.3\",\r\n                            routeTemplate: \"{project}/_apis/wit/workItems/{id}/revisions/{revisionNumber}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                id: id,\r\n                                revisionNumber: revisionNumber\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Returns the list of fully hydrated work item revisions, paged.\r\n         *\r\n         * @param id -\r\n         * @param project - Project ID or project name\r\n         * @param top -\r\n         * @param skip -\r\n         * @param expand -\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getRevisions = function (id, project, top, skip, expand) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        '$top': top,\r\n                        '$skip': skip,\r\n                        '$expand': expand\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.3\",\r\n                            routeTemplate: \"{project}/_apis/wit/workItems/{id}/revisions/{revisionNumber}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                id: id\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * RESTful method to send mail for selected/queried work items.\r\n         *\r\n         * @param body -\r\n         * @param project - Project ID or project name\r\n         */\r\n        WorkItemTrackingRestClient.prototype.sendMail = function (body, project) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.1\",\r\n                            method: \"POST\",\r\n                            routeTemplate: \"{project}/_apis/wit/sendMail\",\r\n                            routeValues: {\r\n                                project: project\r\n                            },\r\n                            body: body\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Creates a template\r\n         *\r\n         * @param template - Template contents\r\n         * @param project - Project ID or project name\r\n         * @param team - Team ID or team name\r\n         */\r\n        WorkItemTrackingRestClient.prototype.createTemplate = function (template, project, team) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.1\",\r\n                            method: \"POST\",\r\n                            routeTemplate: \"{project}/{team}/_apis/wit/templates\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                team: team\r\n                            },\r\n                            body: template\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Gets template\r\n         *\r\n         * @param project - Project ID or project name\r\n         * @param team - Team ID or team name\r\n         * @param workitemtypename - Optional, When specified returns templates for given Work item type.\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getTemplates = function (project, team, workitemtypename) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        workitemtypename: workitemtypename\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.1\",\r\n                            routeTemplate: \"{project}/{team}/_apis/wit/templates\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                team: team\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Deletes the template with given id\r\n         *\r\n         * @param project - Project ID or project name\r\n         * @param team - Team ID or team name\r\n         * @param templateId - Template id\r\n         */\r\n        WorkItemTrackingRestClient.prototype.deleteTemplate = function (project, team, templateId) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.1\",\r\n                            method: \"DELETE\",\r\n                            routeTemplate: \"{project}/{team}/_apis/wit/templates/{templateId}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                team: team,\r\n                                templateId: templateId\r\n                            }\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Gets the template with specified id\r\n         *\r\n         * @param project - Project ID or project name\r\n         * @param team - Team ID or team name\r\n         * @param templateId - Template Id\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getTemplate = function (project, team, templateId) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.1\",\r\n                            routeTemplate: \"{project}/{team}/_apis/wit/templates/{templateId}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                team: team,\r\n                                templateId: templateId\r\n                            }\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Replace template contents\r\n         *\r\n         * @param templateContent - Template contents to replace with\r\n         * @param project - Project ID or project name\r\n         * @param team - Team ID or team name\r\n         * @param templateId - Template id\r\n         */\r\n        WorkItemTrackingRestClient.prototype.replaceTemplate = function (templateContent, project, team, templateId) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.1\",\r\n                            method: \"PUT\",\r\n                            routeTemplate: \"{project}/{team}/_apis/wit/templates/{templateId}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                team: team,\r\n                                templateId: templateId\r\n                            },\r\n                            body: templateContent\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Returns a single update for a work item\r\n         *\r\n         * @param id -\r\n         * @param updateNumber -\r\n         * @param project - Project ID or project name\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getUpdate = function (id, updateNumber, project) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.3\",\r\n                            routeTemplate: \"{project}/_apis/wit/workItems/{id}/updates/{updateNumber}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                id: id,\r\n                                updateNumber: updateNumber\r\n                            }\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Returns the deltas between work item revisions\r\n         *\r\n         * @param id -\r\n         * @param project - Project ID or project name\r\n         * @param top -\r\n         * @param skip -\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getUpdates = function (id, project, top, skip) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        '$top': top,\r\n                        '$skip': skip\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.3\",\r\n                            routeTemplate: \"{project}/_apis/wit/workItems/{id}/updates/{updateNumber}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                id: id\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Gets the results of the query given its WIQL.\r\n         *\r\n         * @param wiql - The query containing the WIQL.\r\n         * @param project - Project ID or project name\r\n         * @param team - Team ID or team name\r\n         * @param timePrecision - Whether or not to use time precision.\r\n         * @param top - The max number of results to return.\r\n         */\r\n        WorkItemTrackingRestClient.prototype.queryByWiql = function (wiql, project, team, timePrecision, top) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        timePrecision: timePrecision,\r\n                        '$top': top\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            method: \"POST\",\r\n                            routeTemplate: \"{project}/{team}/_apis/wit/wiql\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                team: team\r\n                            },\r\n                            queryParams: queryValues,\r\n                            body: wiql\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Gets the results of the query given the query ID.\r\n         *\r\n         * @param id - The query ID.\r\n         * @param project - Project ID or project name\r\n         * @param team - Team ID or team name\r\n         * @param timePrecision - Whether or not to use time precision.\r\n         * @param top - The max number of results to return.\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getQueryResultCount = function (id, project, team, timePrecision, top) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        timePrecision: timePrecision,\r\n                        '$top': top\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            method: \"HEAD\",\r\n                            routeTemplate: \"{project}/{team}/_apis/wit/wiql/{id}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                team: team,\r\n                                id: id\r\n                            },\r\n                            queryParams: queryValues,\r\n                            returnRawResponse: true\r\n                        }).then(function (response) { return __awaiter(_this, void 0, void 0, function () {\r\n                            return __generator(this, function (_a) {\r\n                                return [2 /*return*/, Number(response.headers.get(\"X-Total-Count\"))];\r\n                            });\r\n                        }); })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Gets the results of the query given the query ID.\r\n         *\r\n         * @param id - The query ID.\r\n         * @param project - Project ID or project name\r\n         * @param team - Team ID or team name\r\n         * @param timePrecision - Whether or not to use time precision.\r\n         * @param top - The max number of results to return.\r\n         */\r\n        WorkItemTrackingRestClient.prototype.queryById = function (id, project, team, timePrecision, top) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        timePrecision: timePrecision,\r\n                        '$top': top\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            routeTemplate: \"{project}/{team}/_apis/wit/wiql/{id}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                team: team,\r\n                                id: id\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Get a work item icon given the friendly name and icon color.\r\n         *\r\n         * @param icon - The name of the icon\r\n         * @param color - The 6-digit hex color for the icon\r\n         * @param v - The version of the icon (used only for cache invalidation)\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getWorkItemIconJson = function (icon, color, v) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        color: color,\r\n                        v: v\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.1\",\r\n                            routeTemplate: \"_apis/wit/workItemIcons/{icon}\",\r\n                            routeValues: {\r\n                                icon: icon\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Get a list of all work item icons.\r\n         *\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getWorkItemIcons = function () {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.1\",\r\n                            routeTemplate: \"_apis/wit/workItemIcons/{icon}\"\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Get a work item icon given the friendly name and icon color.\r\n         *\r\n         * @param icon - The name of the icon\r\n         * @param color - The 6-digit hex color for the icon\r\n         * @param v - The version of the icon (used only for cache invalidation)\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getWorkItemIconSvg = function (icon, color, v) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        color: color,\r\n                        v: v\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.1\",\r\n                            httpResponseType: \"image/svg+xml\",\r\n                            routeTemplate: \"_apis/wit/workItemIcons/{icon}\",\r\n                            routeValues: {\r\n                                icon: icon\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Get a work item icon given the friendly name and icon color.\r\n         *\r\n         * @param icon - The name of the icon\r\n         * @param color - The 6-digit hex color for the icon\r\n         * @param v - The version of the icon (used only for cache invalidation)\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getWorkItemIconXaml = function (icon, color, v) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        color: color,\r\n                        v: v\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.1\",\r\n                            httpResponseType: \"image/xaml+xml\",\r\n                            routeTemplate: \"_apis/wit/workItemIcons/{icon}\",\r\n                            routeValues: {\r\n                                icon: icon\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Get a batch of work item links\r\n         *\r\n         * @param project - Project ID or project name\r\n         * @param linkTypes - A list of types to filter the results to specific link types. Omit this parameter to get work item links of all link types.\r\n         * @param types - A list of types to filter the results to specific work item types. Omit this parameter to get work item links of all work item types.\r\n         * @param continuationToken - Specifies the continuationToken to start the batch from. Omit this parameter to get the first batch of links.\r\n         * @param startDateTime - Date/time to use as a starting point for link changes. Only link changes that occurred after that date/time will be returned. Cannot be used in conjunction with 'watermark' parameter.\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getReportingLinksByLinkType = function (project, linkTypes, types, continuationToken, startDateTime) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        linkTypes: linkTypes && linkTypes.join(\",\"),\r\n                        types: types && types.join(\",\"),\r\n                        continuationToken: continuationToken,\r\n                        startDateTime: startDateTime\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.3\",\r\n                            routeTemplate: \"{project}/_apis/wit/reporting/workItemLinks\",\r\n                            routeValues: {\r\n                                project: project\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Gets the work item relation type definition.\r\n         *\r\n         * @param relation - The relation name\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getRelationType = function (relation) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            routeTemplate: \"_apis/wit/workItemRelationTypes/{relation}\",\r\n                            routeValues: {\r\n                                relation: relation\r\n                            }\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Gets the work item relation types.\r\n         *\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getRelationTypes = function () {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            routeTemplate: \"_apis/wit/workItemRelationTypes/{relation}\"\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Get a batch of work item revisions with the option of including deleted items\r\n         *\r\n         * @param project - Project ID or project name\r\n         * @param fields - A list of fields to return in work item revisions. Omit this parameter to get all reportable fields.\r\n         * @param types - A list of types to filter the results to specific work item types. Omit this parameter to get work item revisions of all work item types.\r\n         * @param continuationToken - Specifies the watermark to start the batch from. Omit this parameter to get the first batch of revisions.\r\n         * @param startDateTime - Date/time to use as a starting point for revisions, all revisions will occur after this date/time. Cannot be used in conjunction with 'watermark' parameter.\r\n         * @param includeIdentityRef - Return an identity reference instead of a string value for identity fields.\r\n         * @param includeDeleted - Specify if the deleted item should be returned.\r\n         * @param includeTagRef - Specify if the tag objects should be returned for System.Tags field.\r\n         * @param includeLatestOnly - Return only the latest revisions of work items, skipping all historical revisions\r\n         * @param expand - Return all the fields in work item revisions, including long text fields which are not returned by default\r\n         * @param includeDiscussionChangesOnly - Return only the those revisions of work items, where only history field was changed\r\n         * @param maxPageSize - The maximum number of results to return in this batch\r\n         */\r\n        WorkItemTrackingRestClient.prototype.readReportingRevisionsGet = function (project, fields, types, continuationToken, startDateTime, includeIdentityRef, includeDeleted, includeTagRef, includeLatestOnly, expand, includeDiscussionChangesOnly, maxPageSize) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        fields: fields && fields.join(\",\"),\r\n                        types: types && types.join(\",\"),\r\n                        continuationToken: continuationToken,\r\n                        startDateTime: startDateTime,\r\n                        includeIdentityRef: includeIdentityRef,\r\n                        includeDeleted: includeDeleted,\r\n                        includeTagRef: includeTagRef,\r\n                        includeLatestOnly: includeLatestOnly,\r\n                        '$expand': expand,\r\n                        includeDiscussionChangesOnly: includeDiscussionChangesOnly,\r\n                        '$maxPageSize': maxPageSize\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            routeTemplate: \"{project}/_apis/wit/reporting/workItemRevisions\",\r\n                            routeValues: {\r\n                                project: project\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Get a batch of work item revisions. This request may be used if your list of fields is large enough that it may run the URL over the length limit.\r\n         *\r\n         * @param filter - An object that contains request settings: field filter, type filter, identity format\r\n         * @param project - Project ID or project name\r\n         * @param continuationToken - Specifies the watermark to start the batch from. Omit this parameter to get the first batch of revisions.\r\n         * @param startDateTime - Date/time to use as a starting point for revisions, all revisions will occur after this date/time. Cannot be used in conjunction with 'watermark' parameter.\r\n         * @param expand -\r\n         */\r\n        WorkItemTrackingRestClient.prototype.readReportingRevisionsPost = function (filter, project, continuationToken, startDateTime, expand) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        continuationToken: continuationToken,\r\n                        startDateTime: startDateTime,\r\n                        '$expand': expand\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            method: \"POST\",\r\n                            routeTemplate: \"{project}/_apis/wit/reporting/workItemRevisions\",\r\n                            routeValues: {\r\n                                project: project\r\n                            },\r\n                            queryParams: queryValues,\r\n                            body: filter\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Creates a single work item.\r\n         *\r\n         * @param document - The JSON Patch document representing the work item\r\n         * @param project - Project ID or project name\r\n         * @param type - The work item type of the work item to create\r\n         * @param validateOnly - Indicate if you only want to validate the changes without saving the work item\r\n         * @param bypassRules - Do not enforce the work item type rules on this update\r\n         * @param suppressNotifications - Do not fire any notifications for this change\r\n         * @param expand - The expand parameters for work item attributes. Possible options are \\{ None, Relations, Fields, Links, All \\}.\r\n         */\r\n        WorkItemTrackingRestClient.prototype.createWorkItem = function (document, project, type, validateOnly, bypassRules, suppressNotifications, expand) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        validateOnly: validateOnly,\r\n                        bypassRules: bypassRules,\r\n                        suppressNotifications: suppressNotifications,\r\n                        '$expand': expand\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.3\",\r\n                            method: \"POST\",\r\n                            routeTemplate: \"{project}/_apis/wit/workItems/${type}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                type: type\r\n                            },\r\n                            customHeaders: {\r\n                                \"Content-Type\": \"application/json-patch+json\",\r\n                            },\r\n                            queryParams: queryValues,\r\n                            body: document\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Returns a single work item from a template.\r\n         *\r\n         * @param project - Project ID or project name\r\n         * @param type - The work item type name\r\n         * @param fields - Comma-separated list of requested fields\r\n         * @param asOf - AsOf UTC date time string\r\n         * @param expand - The expand parameters for work item attributes. Possible options are \\{ None, Relations, Fields, Links, All \\}.\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getWorkItemTemplate = function (project, type, fields, asOf, expand) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        fields: fields,\r\n                        asOf: asOf,\r\n                        '$expand': expand\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.3\",\r\n                            routeTemplate: \"{project}/_apis/wit/workItems/${type}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                type: type\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Deletes the specified work item and sends it to the Recycle Bin, so that it can be restored back, if required. Optionally, if the destroy parameter has been set to true, it destroys the work item permanently. WARNING: If the destroy parameter is set to true, work items deleted by this command will NOT go to recycle-bin and there is no way to restore/recover them after deletion. It is recommended NOT to use this parameter. If you do, please use this parameter with extreme caution.\r\n         *\r\n         * @param id - ID of the work item to be deleted\r\n         * @param project - Project ID or project name\r\n         * @param destroy - Optional parameter, if set to true, the work item is deleted permanently. Please note: the destroy action is PERMANENT and cannot be undone.\r\n         */\r\n        WorkItemTrackingRestClient.prototype.deleteWorkItem = function (id, project, destroy) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        destroy: destroy\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.3\",\r\n                            method: \"DELETE\",\r\n                            routeTemplate: \"{project}/_apis/wit/workItems/{id}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                id: id\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Returns a single work item.\r\n         *\r\n         * @param id - The work item id\r\n         * @param project - Project ID or project name\r\n         * @param fields - Comma-separated list of requested fields\r\n         * @param asOf - AsOf UTC date time string\r\n         * @param expand - The expand parameters for work item attributes. Possible options are \\{ None, Relations, Fields, Links, All \\}.\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getWorkItem = function (id, project, fields, asOf, expand) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        fields: fields && fields.join(\",\"),\r\n                        asOf: asOf,\r\n                        '$expand': expand\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.3\",\r\n                            routeTemplate: \"{project}/_apis/wit/workItems/{id}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                id: id\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Returns a list of work items (Maximum 200)\r\n         *\r\n         * @param ids - The comma-separated list of requested work item ids. (Maximum 200 ids allowed).\r\n         * @param project - Project ID or project name\r\n         * @param fields - Comma-separated list of requested fields\r\n         * @param asOf - AsOf UTC date time string\r\n         * @param expand - The expand parameters for work item attributes. Possible options are \\{ None, Relations, Fields, Links, All \\}.\r\n         * @param errorPolicy - The flag to control error policy in a bulk get work items request. Possible options are \\{Fail, Omit\\}.\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getWorkItems = function (ids, project, fields, asOf, expand, errorPolicy) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        ids: ids && ids.join(\",\"),\r\n                        fields: fields && fields.join(\",\"),\r\n                        asOf: asOf,\r\n                        '$expand': expand,\r\n                        errorPolicy: errorPolicy\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.3\",\r\n                            routeTemplate: \"{project}/_apis/wit/workItems/{id}\",\r\n                            routeValues: {\r\n                                project: project\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Updates a single work item.\r\n         *\r\n         * @param document - The JSON Patch document representing the update\r\n         * @param id - The id of the work item to update\r\n         * @param project - Project ID or project name\r\n         * @param validateOnly - Indicate if you only want to validate the changes without saving the work item\r\n         * @param bypassRules - Do not enforce the work item type rules on this update\r\n         * @param suppressNotifications - Do not fire any notifications for this change\r\n         * @param expand - The expand parameters for work item attributes. Possible options are \\{ None, Relations, Fields, Links, All \\}.\r\n         */\r\n        WorkItemTrackingRestClient.prototype.updateWorkItem = function (document, id, project, validateOnly, bypassRules, suppressNotifications, expand) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        validateOnly: validateOnly,\r\n                        bypassRules: bypassRules,\r\n                        suppressNotifications: suppressNotifications,\r\n                        '$expand': expand\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.3\",\r\n                            method: \"PATCH\",\r\n                            routeTemplate: \"{project}/_apis/wit/workItems/{id}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                id: id\r\n                            },\r\n                            customHeaders: {\r\n                                \"Content-Type\": \"application/json-patch+json\",\r\n                            },\r\n                            queryParams: queryValues,\r\n                            body: document\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Gets work items for a list of work item ids (Maximum 200)\r\n         *\r\n         * @param workItemGetRequest -\r\n         * @param project - Project ID or project name\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getWorkItemsBatch = function (workItemGetRequest, project) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.1\",\r\n                            method: \"POST\",\r\n                            routeTemplate: \"{project}/_apis/wit/workItemsBatch\",\r\n                            routeValues: {\r\n                                project: project\r\n                            },\r\n                            body: workItemGetRequest\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * INTERNAL ONLY: It will be used for My account work experience. Get the work item type state color for multiple projects\r\n         *\r\n         * @param projectNames -\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getWorkItemStateColors = function (projectNames) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.1\",\r\n                            method: \"POST\",\r\n                            routeTemplate: \"_apis/work/workitemStateColor\",\r\n                            body: projectNames\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Returns the next state on the given work item IDs.\r\n         *\r\n         * @param ids - list of work item ids\r\n         * @param action - possible actions. Currently only supports checkin\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getWorkItemNextStatesOnCheckinAction = function (ids, action) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        ids: ids && ids.join(\",\"),\r\n                        action: action\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.1\",\r\n                            routeTemplate: \"_apis/wit/workItemTransitions\",\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Get all work item type categories.\r\n         *\r\n         * @param project - Project ID or project name\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getWorkItemTypeCategories = function (project) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            routeTemplate: \"{project}/_apis/wit/workItemTypeCategories/{category}\",\r\n                            routeValues: {\r\n                                project: project\r\n                            }\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Get specific work item type category by name.\r\n         *\r\n         * @param project - Project ID or project name\r\n         * @param category - The category name\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getWorkItemTypeCategory = function (project, category) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            routeTemplate: \"{project}/_apis/wit/workItemTypeCategories/{category}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                category: category\r\n                            }\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * INTERNAL ONLY: It will be used for My account work experience. Get the wit type color for multiple projects\r\n         *\r\n         * @param projectNames -\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getWorkItemTypeColors = function (projectNames) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.1\",\r\n                            method: \"POST\",\r\n                            routeTemplate: \"_apis/work/workitemTypeColor\",\r\n                            body: projectNames\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * INTERNAL ONLY: It is used for color and icon providers. Get the wit type color for multiple projects\r\n         *\r\n         * @param projectNames -\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getWorkItemTypeColorAndIcons = function (projectNames) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.1\",\r\n                            method: \"POST\",\r\n                            routeTemplate: \"_apis/wit/workItemTypeColorAndIcon\",\r\n                            body: projectNames\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Returns a work item type definition.\r\n         *\r\n         * @param project - Project ID or project name\r\n         * @param type - Work item type name\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getWorkItemType = function (project, type) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            routeTemplate: \"{project}/_apis/wit/workItemTypes/{type}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                type: type\r\n                            }\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Returns the list of work item types\r\n         *\r\n         * @param project - Project ID or project name\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getWorkItemTypes = function (project) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.2\",\r\n                            routeTemplate: \"{project}/_apis/wit/workItemTypes/{type}\",\r\n                            routeValues: {\r\n                                project: project\r\n                            }\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Get a list of fields for a work item type with detailed references.\r\n         *\r\n         * @param project - Project ID or project name\r\n         * @param type - Work item type.\r\n         * @param expand - Expand level for the API response. Properties: to include allowedvalues, default value, isRequired etc. as a part of response; None: to skip these properties.\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getWorkItemTypeFieldsWithReferences = function (project, type, expand) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        '$expand': expand\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.3\",\r\n                            routeTemplate: \"{project}/_apis/wit/workitemtypes/{type}/fields/{field}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                type: type\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Get a field for a work item type with detailed references.\r\n         *\r\n         * @param project - Project ID or project name\r\n         * @param type - Work item type.\r\n         * @param field -\r\n         * @param expand - Expand level for the API response. Properties: to include allowedvalues, default value, isRequired etc. as a part of response; None: to skip these properties.\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getWorkItemTypeFieldWithReferences = function (project, type, field, expand) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        '$expand': expand\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.3\",\r\n                            routeTemplate: \"{project}/_apis/wit/workitemtypes/{type}/fields/{field}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                type: type,\r\n                                field: field\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Returns the state names and colors for a work item type.\r\n         *\r\n         * @param project - Project ID or project name\r\n         * @param type - The state name\r\n         */\r\n        WorkItemTrackingRestClient.prototype.getWorkItemTypeStates = function (project, type) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.1\",\r\n                            routeTemplate: \"{project}/_apis/wit/workitemtypes/{type}/states\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                type: type\r\n                            }\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Export work item type\r\n         *\r\n         * @param project - Project ID or project name\r\n         * @param type -\r\n         * @param exportGlobalLists -\r\n         */\r\n        WorkItemTrackingRestClient.prototype.exportWorkItemTypeDefinition = function (project, type, exportGlobalLists) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var queryValues;\r\n                return __generator(this, function (_a) {\r\n                    queryValues = {\r\n                        exportGlobalLists: exportGlobalLists\r\n                    };\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.1\",\r\n                            routeTemplate: \"{project}/_apis/wit/workItemTypeTemplate/{type}\",\r\n                            routeValues: {\r\n                                project: project,\r\n                                type: type\r\n                            },\r\n                            queryParams: queryValues\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Add/updates a work item type\r\n         *\r\n         * @param updateModel -\r\n         * @param project - Project ID or project name\r\n         */\r\n        WorkItemTrackingRestClient.prototype.updateWorkItemTypeDefinition = function (updateModel, project) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this.beginRequest({\r\n                            apiVersion: \"5.0-preview.1\",\r\n                            method: \"POST\",\r\n                            routeTemplate: \"{project}/_apis/wit/workItemTypeTemplate/{type}\",\r\n                            routeValues: {\r\n                                project: project\r\n                            },\r\n                            body: updateModel\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        WorkItemTrackingRestClient.RESOURCE_AREA_ID = \"5264459e-e5e0-4bd8-b118-0985e68a4ec5\";\r\n        return WorkItemTrackingRestClient;\r\n    }(RestClientBase_1.RestClientBase));\r\n    exports.WorkItemTrackingRestClient = WorkItemTrackingRestClient;\r\n});\r\n","/*\r\n * ---------------------------------------------------------\r\n * Copyright(C) Microsoft Corporation. All rights reserved.\r\n * ---------------------------------------------------------\r\n */\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\ndefine([\"require\", \"exports\", \"./Fetch\", \"./Util/Serialization\", \"./Util/Url\"], function (require, exports, Fetch_1, Serialization_1, Url_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n    * Base class that should be used (derived from) to make requests to VSS REST apis\r\n    */\r\n    var RestClientBase = /** @class */ (function () {\r\n        function RestClientBase(options) {\r\n            this._options = options || {};\r\n            if (typeof this._options.rootPath === \"string\") {\r\n                this._rootPath = Promise.resolve(this._options.rootPath);\r\n            }\r\n            else {\r\n                this._rootPath = this._options.rootPath || Promise.resolve(\"/\");\r\n            }\r\n        }\r\n        /**\r\n        * Gets the root path of the Service\r\n        *\r\n        * @returns Promise for the resolving the root path of the service.\r\n        */\r\n        RestClientBase.prototype.getRootPath = function () {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this._rootPath];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n        * Issue a request to a VSS REST endpoint.\r\n        *\r\n        * @param requestParams request options\r\n        * @returns Promise for the response\r\n        */\r\n        RestClientBase.prototype.beginRequest = function (requestParams) {\r\n            return __awaiter(this, void 0, void 0, function () {\r\n                var _this = this;\r\n                return __generator(this, function (_a) {\r\n                    return [2 /*return*/, this._rootPath.then(function (rootPath) {\r\n                            var requestUrl = rootPath + Url_1.replaceRouteValues(requestParams.routeTemplate, requestParams.routeValues || {});\r\n                            if (requestParams.queryParams) {\r\n                                var uri = new Url_1.Uri(requestUrl);\r\n                                uri.addQueryParams(requestParams.queryParams);\r\n                                requestUrl = uri.absoluteUri;\r\n                            }\r\n                            return _this._issueRequest(requestUrl, requestParams.apiVersion, requestParams);\r\n                        })];\r\n                });\r\n            });\r\n        };\r\n        /**\r\n         * Issue a request to a VSS REST endpoint at the specified location\r\n         *\r\n         * @param requestUrl Resolved URL of the request\r\n         * @param apiVersion API version\r\n         * @param requestParams Optional request parameters\r\n         */\r\n        RestClientBase.prototype._issueRequest = function (requestUrl, apiVersion, requestParams) {\r\n            var fetchOptions = {};\r\n            fetchOptions.method = requestParams.method || \"GET\";\r\n            fetchOptions.mode = \"cors\";\r\n            if (!requestParams.isRawData && requestParams.body && fetchOptions.method.toUpperCase() !== 'GET') {\r\n                fetchOptions.body = JSON.stringify(requestParams.body);\r\n            }\r\n            else {\r\n                fetchOptions.body = requestParams.body;\r\n            }\r\n            var acceptType = requestParams.httpResponseType || \"application/json\";\r\n            var acceptHeaderValue = acceptType + \";api-version=\" + apiVersion + \";excludeUrls=true;enumsAsNumbers=true;msDateFormat=true;noArrayWrap=true\";\r\n            fetchOptions.headers = Object.assign({\r\n                \"Accept\": acceptHeaderValue,\r\n                \"Content-Type\": requestParams.body && \"application/json\"\r\n            }, requestParams.customHeaders) /* lib.dom.d.ts does not have the correct type for Headers */;\r\n            var vssRequestOptions = {\r\n                authTokenProvider: this._options.authTokenProvider,\r\n                sessionId: this._options.sessionId,\r\n                command: requestParams.command || this._options.command\r\n            };\r\n            var result = Fetch_1.issueRequest(requestUrl, fetchOptions, vssRequestOptions);\r\n            return result.then(function (response) {\r\n                if (requestParams.returnRawResponse) {\r\n                    return response;\r\n                }\r\n                else if (acceptType.toLowerCase().indexOf(\"json\") >= 0) {\r\n                    // MSJSON date formats must be replaced in the raw text before JSON parsing\r\n                    return response.text().then(Serialization_1.deserializeVssJsonObject);\r\n                }\r\n                else if (acceptType.toLowerCase() === \"text/plain\") {\r\n                    return response.text();\r\n                }\r\n                else {\r\n                    return response.arrayBuffer();\r\n                }\r\n            });\r\n        };\r\n        return RestClientBase;\r\n    }());\r\n    exports.RestClientBase = RestClientBase;\r\n});\r\n","/*\r\n * ---------------------------------------------------------\r\n * Copyright(C) Microsoft Corporation. All rights reserved.\r\n * ---------------------------------------------------------\r\n */\r\ndefine([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * Key constants used by route parsing.\r\n     */\r\n    var KeyCodes;\r\n    (function (KeyCodes) {\r\n        KeyCodes[KeyCodes[\"asterisk\"] = 42] = \"asterisk\";\r\n        KeyCodes[KeyCodes[\"endCurlyBrace\"] = 125] = \"endCurlyBrace\";\r\n        KeyCodes[KeyCodes[\"startCurlyBrace\"] = 123] = \"startCurlyBrace\";\r\n    })(KeyCodes || (KeyCodes = {}));\r\n    function prepareForComparison(value, upperCase) {\r\n        return value ? (upperCase ? value.toLocaleUpperCase() : value) : \"\";\r\n    }\r\n    function stringEquals(str1, str2, ignoreCase) {\r\n        if (str1 === str2) {\r\n            return true;\r\n        }\r\n        return prepareForComparison(str1, ignoreCase).localeCompare(prepareForComparison(str2, ignoreCase)) === 0;\r\n    }\r\n    /**\r\n    * Class that represents a Uri and allows parsing/getting and setting of individual parts\r\n    */\r\n    var Uri = /** @class */ (function () {\r\n        /**\r\n        * Create a new Uri.\r\n        *\r\n        * @param uri Optional uri string to populate values with\r\n        * @param options Options for parsing the uri string\r\n        */\r\n        function Uri(uri, options) {\r\n            /**\r\n            * The uri scheme such as http or https\r\n            */\r\n            this.scheme = \"\";\r\n            /**\r\n             * If true, do not emit the \"//\" separator after the scheme:\r\n             * Set to true for schemes like mailto (e.g. mailto:foo@bar)\r\n             */\r\n            this.noSchemeSeparator = false;\r\n            /**\r\n            * The uri hostname (does not include port or scheme)\r\n            */\r\n            this.host = \"\";\r\n            /**\r\n            * The port number of the uri as supplied in the url. 0 if left out in the url (e.g. the default port for the scheme).\r\n            */\r\n            this.port = 0;\r\n            /**\r\n            * The relative path of the uri\r\n            */\r\n            this.path = \"\";\r\n            /**\r\n            * The array of query parameters in the uri\r\n            */\r\n            this.queryParameters = [];\r\n            /**\r\n            * The hash string of the uri\r\n            */\r\n            this.hashString = \"\";\r\n            if (uri) {\r\n                this._setFromUriString(uri, options);\r\n            }\r\n        }\r\n        Uri.prototype._setFromUriString = function (uriString, options) {\r\n            var uri = uriString;\r\n            // Parse out the hash string\r\n            var hashSplit = this._singleSplit(uri, \"#\");\r\n            if (hashSplit) {\r\n                uri = hashSplit.part1;\r\n                this.hashString = this._decodeUriComponent(hashSplit.part2);\r\n            }\r\n            else {\r\n                this.hashString = \"\";\r\n            }\r\n            // Parse the query parameters\r\n            var querySplit = this._singleSplit(uri, \"?\");\r\n            if (querySplit) {\r\n                uri = querySplit.part1;\r\n                this.queryString = querySplit.part2;\r\n            }\r\n            else {\r\n                this.queryParameters = [];\r\n            }\r\n            this.scheme = \"\";\r\n            this.host = \"\";\r\n            this.port = 0;\r\n            this.path = \"\";\r\n            // Parse out the scheme components of the uri\r\n            this.noSchemeSeparator = false;\r\n            var schemeSplit = this._singleSplit(uri, \":\");\r\n            if (schemeSplit) {\r\n                this.scheme = schemeSplit.part1;\r\n                uri = schemeSplit.part2;\r\n                if (uri.substr(0, 2) === \"//\") {\r\n                    uri = uri.substr(2);\r\n                    // Parse out the path part of the uri\r\n                    var pathSplit = this._singleSplit(uri, \"/\");\r\n                    if (pathSplit) {\r\n                        uri = pathSplit.part1;\r\n                        this.path = pathSplit.part2;\r\n                    }\r\n                    else {\r\n                        this.path = \"\";\r\n                    }\r\n                    // Parse out the port number\r\n                    var portSplit = this._singleSplit(uri, \":\");\r\n                    if (portSplit) {\r\n                        this.host = portSplit.part1;\r\n                        this.port = parseInt(portSplit.part2);\r\n                        if (isNaN(this.port)) {\r\n                            // Segment after : was not a port, consider it part of the path\r\n                            this.host += \":\";\r\n                            this.path = portSplit.part2 + \"/\" + this.path;\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.host = uri;\r\n                    }\r\n                }\r\n                else {\r\n                    // No host for schemes like mailto: just use path\r\n                    this.noSchemeSeparator = true;\r\n                    this.path = uri;\r\n                }\r\n            }\r\n            else {\r\n                // Relative Url was given\r\n                this.path = uri;\r\n            }\r\n            if (options && options.absoluteUriRequired && !this.scheme) {\r\n                throw new Error(\"The uri string \\\"\" + uriString + \"\\\" does not represent a valid absolute uri.\");\r\n            }\r\n        };\r\n        Uri.prototype._singleSplit = function (value, separator) {\r\n            var matchIndex = value.indexOf(separator);\r\n            if (matchIndex >= 0) {\r\n                return {\r\n                    part1: value.substr(0, matchIndex),\r\n                    part2: value.substr(matchIndex + 1)\r\n                };\r\n            }\r\n            else {\r\n                return undefined;\r\n            }\r\n        };\r\n        Uri.prototype._decodeUriComponent = function (value) {\r\n            if (value) {\r\n                // Replace \"+\" character with %20.\r\n                value = value.replace(/\\+/g, \"%20\");\r\n                value = decodeURIComponent(value);\r\n            }\r\n            return value;\r\n        };\r\n        Object.defineProperty(Uri.prototype, \"absoluteUri\", {\r\n            /**\r\n            * Get the absolute uri string for this Uri\r\n            */\r\n            get: function () {\r\n                var uri = \"\";\r\n                if (this.scheme) {\r\n                    uri = encodeURI(decodeURI(this.scheme)) + \":\";\r\n                    if (!this.noSchemeSeparator) {\r\n                        uri += \"//\";\r\n                    }\r\n                }\r\n                if (this.host) {\r\n                    uri += encodeURI(decodeURI(this.host));\r\n                    if (this.port) {\r\n                        uri += \":\" + this.port;\r\n                    }\r\n                    if (!this.noSchemeSeparator || this.path) {\r\n                        uri += \"/\";\r\n                    }\r\n                }\r\n                if (this.path) {\r\n                    var encodedPath = void 0;\r\n                    if (this.noSchemeSeparator) {\r\n                        // Only do simple encoding for schemes like mailto: or blob: where\r\n                        // we can't determine host versus path\r\n                        encodedPath = encodeURI(decodeURI(this.path));\r\n                    }\r\n                    else {\r\n                        var parts = this.path.split('/');\r\n                        encodedPath = parts.map(function (p) { return encodeURIComponent(decodeURIComponent(p)); }).join(\"/\");\r\n                    }\r\n                    if (this.host) {\r\n                        uri = combineUrlPaths(uri, encodedPath);\r\n                    }\r\n                    else {\r\n                        uri = uri + encodedPath;\r\n                    }\r\n                }\r\n                var queryString = this.queryString;\r\n                if (queryString) {\r\n                    uri += \"?\" + queryString;\r\n                }\r\n                if (this.hashString) {\r\n                    var params = this._splitStringIntoParams(this.hashString);\r\n                    var encodedString = this._getParamsAsString(params);\r\n                    uri += \"#\" + encodedString;\r\n                }\r\n                return uri;\r\n            },\r\n            /**\r\n            * Set the absolute uri string for this Uri. Replaces all existing values\r\n            */\r\n            set: function (uri) {\r\n                this._setFromUriString(uri || \"\");\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Gets the effective port number, returning the default port number if omitted for the given scheme.\r\n         */\r\n        Uri.prototype.getEffectivePort = function () {\r\n            if (this.port) {\r\n                return this.port;\r\n            }\r\n            else {\r\n                if (stringEquals(this.scheme, \"http\", true)) {\r\n                    return 80;\r\n                }\r\n                else if (stringEquals(this.scheme, \"https\", true)) {\r\n                    return 443;\r\n                }\r\n                else {\r\n                    return 0;\r\n                }\r\n            }\r\n        };\r\n        /**\r\n         * Builds an encoded key/value pair string\r\n         * like query string or hash strings\r\n         */\r\n        Uri.prototype._getParamsAsString = function (params) {\r\n            if (params && params.length) {\r\n                return params.map(function (param) {\r\n                    if (param.value !== null) {\r\n                        return encodeURIComponent(param.name) + \"=\" + encodeURIComponent(param.value);\r\n                    }\r\n                    else {\r\n                        return encodeURIComponent(param.name);\r\n                    }\r\n                }).join(\"&\");\r\n            }\r\n            else {\r\n                return \"\";\r\n            }\r\n        };\r\n        Object.defineProperty(Uri.prototype, \"queryString\", {\r\n            /**\r\n            * Get the query string for this Uri.\r\n            */\r\n            get: function () {\r\n                return this._getParamsAsString(this.queryParameters);\r\n            },\r\n            /**\r\n            * Set the query string for this Uri. Replaces existing value\r\n            */\r\n            set: function (queryString) {\r\n                this.queryParameters = this._splitStringIntoParams(queryString);\r\n            },\r\n            enumerable: true,\r\n            configurable: true\r\n        });\r\n        /**\r\n         * Coverts a key/value pair string into parameters array\r\n         * @param paramString String such as a=b&c=d\r\n         */\r\n        Uri.prototype._splitStringIntoParams = function (paramString) {\r\n            var _this = this;\r\n            var params = [];\r\n            paramString.split('&').forEach(function (pair) {\r\n                if (pair) {\r\n                    var valueSplit = _this._singleSplit(pair, \"=\");\r\n                    if (valueSplit) {\r\n                        params.push({\r\n                            name: _this._decodeUriComponent(valueSplit.part1),\r\n                            value: _this._decodeUriComponent(valueSplit.part2)\r\n                        });\r\n                    }\r\n                    else {\r\n                        params.push({\r\n                            name: _this._decodeUriComponent(pair),\r\n                            value: null\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n            return params;\r\n        };\r\n        /**\r\n        * Get the value of the query parameter with the given key\r\n        *\r\n        * @param name Query parameter name\r\n        */\r\n        Uri.prototype.getQueryParam = function (name) {\r\n            var value;\r\n            if (this.queryParameters) {\r\n                var matchingPairs = this.queryParameters.filter(function (p) { return stringEquals(p.name, name, true); });\r\n                if (matchingPairs.length > 0) {\r\n                    value = matchingPairs[0].value;\r\n                }\r\n            }\r\n            return value;\r\n        };\r\n        /**\r\n         * Adds a query string parameter to the current uri\r\n         *\r\n         * @param name The Query parameter name\r\n         * @param value The Query parameter value\r\n         * @param replaceExisting If true, replace all existing parameters with the same name\r\n         */\r\n        Uri.prototype.addQueryParam = function (name, value, replaceExisting) {\r\n            if (replaceExisting) {\r\n                this.removeQueryParam(name);\r\n            }\r\n            if (!this.queryParameters) {\r\n                this.queryParameters = [];\r\n            }\r\n            this.queryParameters.push({ name: name, value: value });\r\n        };\r\n        /**\r\n         * Adds query string parameters to the current uri\r\n         *\r\n         * @param parameters Query parameters to add\r\n         * @param replaceExisting If true, replace all existing parameters with the same name\r\n         * @param keyPrefix If specified, a value to prepend to all query parameter keys\r\n         */\r\n        Uri.prototype.addQueryParams = function (parameters, replaceExisting, keyPrefix) {\r\n            var _this = this;\r\n            var _loop_1 = function (key) {\r\n                var value = parameters[key];\r\n                if (value !== null && value !== undefined) {\r\n                    var keyWithPrefix_1 = (keyPrefix || \"\") + key;\r\n                    if (value instanceof Date) {\r\n                        this_1.addQueryParam(keyWithPrefix_1, value.toJSON(), replaceExisting);\r\n                    }\r\n                    else if (Array.isArray(value)) {\r\n                        value.forEach(function (v) { return _this.addQueryParam(keyWithPrefix_1, \"\" + v, replaceExisting); });\r\n                    }\r\n                    else if (typeof value === \"object\") {\r\n                        this_1.addQueryParams(value, replaceExisting, keyWithPrefix_1 + \".\");\r\n                    }\r\n                    else {\r\n                        this_1.addQueryParam(keyWithPrefix_1, \"\" + value, replaceExisting);\r\n                    }\r\n                }\r\n            };\r\n            var this_1 = this;\r\n            for (var key in parameters) {\r\n                _loop_1(key);\r\n            }\r\n        };\r\n        /**\r\n         * Removes a query string parameter\r\n         *\r\n         * @param name The Query parameter name\r\n         */\r\n        Uri.prototype.removeQueryParam = function (name) {\r\n            if (this.queryParameters) {\r\n                this.queryParameters = this.queryParameters.filter(function (p) { return !stringEquals(p.name, name, true); });\r\n            }\r\n        };\r\n        return Uri;\r\n    }());\r\n    exports.Uri = Uri;\r\n    /**\r\n     * Take url segments and join them with a single slash character. Takes care of path segements that start and/or end\r\n     * with a slash to ensure that the resulting URL does not have double-slashes\r\n     *\r\n     * @param paths Path segments to concatenate\r\n     */\r\n    function combineUrlPaths() {\r\n        var paths = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            paths[_i] = arguments[_i];\r\n        }\r\n        var segmentsToJoin = [];\r\n        // Trim leading and trailing slash in each segment\r\n        for (var i = 0, last = paths.length - 1; i <= last; i++) {\r\n            var path = paths[i];\r\n            if (path) {\r\n                if (path === \"/\" && (i === 0 || i === last)) {\r\n                    // For a \"/\" segment at the beginning or end of the list, insert an empty entry to force\r\n                    // a leading or trailing slash in the resulting URL\r\n                    segmentsToJoin.push(\"\");\r\n                }\r\n                else {\r\n                    if (i > 0 && path[0] === \"/\") {\r\n                        // Trim leading slash in any segment except the first one\r\n                        path = path.substr(1);\r\n                    }\r\n                    if (i < last && path[path.length - 1] === \"/\") {\r\n                        // Trim trailing slash in any segment except the last one\r\n                        path = path.substr(0, path.length - 1);\r\n                    }\r\n                    if (path) {\r\n                        segmentsToJoin.push(path);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (segmentsToJoin.length === 1 && segmentsToJoin[0] === \"\") {\r\n            return \"/\";\r\n        }\r\n        // Join segments by slash\r\n        return segmentsToJoin.join(\"/\");\r\n    }\r\n    exports.combineUrlPaths = combineUrlPaths;\r\n    /**\r\n     * Parse a route template into a structure that can be used to quickly do route replacements\r\n     *\r\n     * @param routeTemplate MVC route template string (like \"/foo/{id}/{*params}\")\r\n     */\r\n    function parseRouteTemplate(routeTemplate) {\r\n        var parsedRoute = {\r\n            segments: []\r\n        };\r\n        var paramStartIndex = -1;\r\n        var segmentStartIndex = -1;\r\n        var segmentPrefix = \"\";\r\n        for (var charIndex = 0, routeTemplateLen = routeTemplate.length; charIndex < routeTemplateLen; charIndex++) {\r\n            var c = routeTemplate.charCodeAt(charIndex);\r\n            if (paramStartIndex >= 0) {\r\n                if (c === 125 /* endCurlyBrace */) {\r\n                    var paramName = routeTemplate.substring(paramStartIndex, charIndex);\r\n                    var isWildCardParam = false;\r\n                    if (paramName.charCodeAt(0) === 42 /* asterisk */) {\r\n                        paramName = paramName.substr(1);\r\n                        isWildCardParam = true;\r\n                    }\r\n                    parsedRoute.segments.push({\r\n                        paramName: paramName,\r\n                        isWildCardParam: isWildCardParam\r\n                    });\r\n                    paramStartIndex = -1;\r\n                }\r\n            }\r\n            else {\r\n                if (c === 123 /* startCurlyBrace */ && routeTemplate.charCodeAt(charIndex + 1) !== 123 /* startCurlyBrace */) {\r\n                    // Start of a parameter\r\n                    if (segmentPrefix || segmentStartIndex >= 0) {\r\n                        // Store the previous segment\r\n                        var segmentText = segmentPrefix;\r\n                        if (segmentStartIndex >= 0) {\r\n                            segmentText += routeTemplate.substring(segmentStartIndex, charIndex);\r\n                        }\r\n                        if (segmentText) {\r\n                            parsedRoute.segments.push({\r\n                                text: segmentText\r\n                            });\r\n                        }\r\n                        // Reset the segment tracking info\r\n                        segmentStartIndex = -1;\r\n                        segmentPrefix = \"\";\r\n                    }\r\n                    paramStartIndex = charIndex + 1;\r\n                }\r\n                else {\r\n                    // Handle double {{ or double }} as an escape sequence. This is rare. For simplicity we will \r\n                    if ((c === 123 /* startCurlyBrace */ && routeTemplate.charCodeAt(charIndex + 1) === 123 /* startCurlyBrace */) ||\r\n                        (c === 125 /* endCurlyBrace */ && routeTemplate.charCodeAt(charIndex + 1) === 125 /* endCurlyBrace */)) {\r\n                        segmentPrefix = segmentPrefix + routeTemplate.substring(segmentStartIndex >= 0 ? segmentStartIndex : charIndex, charIndex + 1);\r\n                        segmentStartIndex = -1;\r\n                        charIndex++;\r\n                    }\r\n                    if (segmentStartIndex < 0) {\r\n                        segmentStartIndex = charIndex;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        // Store any pending segment\r\n        if (segmentStartIndex >= 0 || paramStartIndex >= 0) {\r\n            var segmentText = segmentPrefix + routeTemplate.substring(segmentStartIndex >= 0 ? segmentStartIndex : paramStartIndex);\r\n            if (segmentText) {\r\n                parsedRoute.segments.push({\r\n                    text: segmentText\r\n                });\r\n            }\r\n        }\r\n        // Mark any param as required if it has a text segment (other than just \"/\") after it\r\n        var required = false;\r\n        for (var i = parsedRoute.segments.length - 1; i >= 0; i--) {\r\n            var segment = parsedRoute.segments[i];\r\n            if (segment.text && segment.text !== \"/\") {\r\n                required = true;\r\n            }\r\n            else if (required && segment.paramName) {\r\n                segment.isRequiredParam = true;\r\n            }\r\n        }\r\n        return parsedRoute;\r\n    }\r\n    exports.parseRouteTemplate = parseRouteTemplate;\r\n    /**\r\n     * Take a set of routes and route values and form a url using the best match. The best match\r\n     * is the route with the highest number of replacements (of the given routeValues dictionary).\r\n     * In the event of a tie (same number of replacements) the route that came first wins.\r\n     *\r\n     * @param routeCollection Array of parsed routes\r\n     * @param routeValues Replacement values\r\n     */\r\n    function routeUrl(routeCollection, routeValues) {\r\n        var bestMatch = getBestRouteMatch(routeCollection, routeValues);\r\n        if (!bestMatch) {\r\n            return \"\";\r\n        }\r\n        var uri = new Uri(bestMatch.url);\r\n        for (var routeValueKey in routeValues) {\r\n            if (!bestMatch.matchedParameters[routeValueKey]) {\r\n                uri.addQueryParam(routeValueKey, routeValues[routeValueKey]);\r\n            }\r\n        }\r\n        return uri.absoluteUri;\r\n    }\r\n    exports.routeUrl = routeUrl;\r\n    /**\r\n     * Take a set of routes and find the best match. The best match is the route with the highest number of replacements\r\n     * (of the given routeValues dictionary). In the event of a tie (same number of replacements) the route that came first wins.\r\n     *\r\n     * @param routeCollection Array of parsed routes\r\n     * @param routeValues Replacement values\r\n     */\r\n    function getBestRouteMatch(routeCollection, routeValues) {\r\n        var bestMatch;\r\n        var totalRouteValues = Object.keys(routeValues).length;\r\n        for (var _i = 0, routeCollection_1 = routeCollection; _i < routeCollection_1.length; _i++) {\r\n            var route = routeCollection_1[_i];\r\n            var match = replaceParsedRouteValues(route, routeValues, false);\r\n            if (match && (!bestMatch || match.matchedParametersCount > bestMatch.matchedParametersCount)) {\r\n                bestMatch = match;\r\n                if (match.matchedParametersCount === totalRouteValues) {\r\n                    // This route matched all route values. Return its url directly (no need to even add query params)\r\n                    return bestMatch;\r\n                }\r\n            }\r\n        }\r\n        return bestMatch;\r\n    }\r\n    exports.getBestRouteMatch = getBestRouteMatch;\r\n    /**\r\n     * Replace route values for a specific parsed route\r\n     *\r\n     * @param parsedRoute The route to evaluate\r\n     * @param routeValues Dictionary of route replacement parameters\r\n     * @param continueOnUnmatchedSegements If true, continue with replacements even after a miss. By default (false), stop replacements once a parameter is not present.\r\n     */\r\n    function replaceParsedRouteValues(parsedRoute, routeValues, continueOnUnmatchedSegements) {\r\n        var urlParts = [];\r\n        var matchedParameters = {};\r\n        var matchedParametersCount = 0;\r\n        for (var segmentIndex = 0, l = parsedRoute.segments.length; segmentIndex < l; segmentIndex++) {\r\n            var segment = parsedRoute.segments[segmentIndex];\r\n            if (segment.text) {\r\n                var segmentText = segment.text;\r\n                if (continueOnUnmatchedSegements) {\r\n                    // Make sure we don't have consecutive slash (/) characters in the case of missing segments\r\n                    if (segmentIndex > 0 && segmentText.charAt(0) === \"/\") {\r\n                        if (urlParts.length === 0) {\r\n                            // First text segment after one or more missing parameter segments. Remove the leading slash.\r\n                            segmentText = segmentText.substr(1);\r\n                        }\r\n                    }\r\n                }\r\n                if (segmentText) {\r\n                    urlParts.push(segmentText);\r\n                }\r\n            }\r\n            else {\r\n                var value = routeValues[segment.paramName];\r\n                if (!value && value !== 0) {\r\n                    // The route value was not supplied\r\n                    if (!continueOnUnmatchedSegements) {\r\n                        if (segment.isRequiredParam) {\r\n                            // This is a required parameter. Return undefined since this route was not a match.\r\n                            return undefined;\r\n                        }\r\n                        else {\r\n                            // This is an omitted optional parameter. Return what we've computed so far.\r\n                            break;\r\n                        }\r\n                    }\r\n                    else if (urlParts.length) {\r\n                        // Unmatched segment being omitted. Remove any previously trailing slash\r\n                        var lastSegment = urlParts[urlParts.length - 1];\r\n                        if (lastSegment[lastSegment.length - 1] === \"/\") {\r\n                            urlParts[urlParts.length - 1] = lastSegment.substr(0, lastSegment.length - 1);\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    urlParts.push(segment.isWildCardParam ? encodeURI(\"\" + value) : encodeURIComponent(\"\" + value));\r\n                    matchedParameters[segment.paramName] = true;\r\n                    matchedParametersCount++;\r\n                }\r\n            }\r\n        }\r\n        return {\r\n            url: urlParts.join(\"\"),\r\n            matchedParameters: matchedParameters,\r\n            matchedParametersCount: matchedParametersCount\r\n        };\r\n    }\r\n    exports.replaceParsedRouteValues = replaceParsedRouteValues;\r\n    /**\r\n     * Take an MVC route template (like \"/foo/{id}/{*params}\") and replace the templated parts with values from the given dictionary\r\n     *\r\n     * @param routeTemplate MVC route template (like \"/foo/{id}/{*params}\")\r\n     * @param routeValues Route value replacements\r\n     */\r\n    function replaceRouteValues(routeTemplate, routeValues) {\r\n        var parsedRoute = parseRouteTemplate(routeTemplate);\r\n        return replaceParsedRouteValues(parsedRoute, routeValues, true).url;\r\n    }\r\n    exports.replaceRouteValues = replaceRouteValues;\r\n});\r\n","define([\"require\", \"exports\", \"azure-devops-extension-sdk\"], function (require, exports, azure_devops_extension_sdk_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    function getClient(clientClass, clientOptions) {\r\n        var options = clientOptions || {};\r\n        if (!options.rootPath) {\r\n            options.rootPath = azure_devops_extension_sdk_1.getService(\"ms.vss-features.location-service\" /* LocationService */).then(function (locationService) {\r\n                if (clientClass.RESOURCE_AREA_ID) {\r\n                    return locationService.getResourceAreaLocation(clientClass.RESOURCE_AREA_ID);\r\n                }\r\n                else {\r\n                    return locationService.getServiceLocation();\r\n                }\r\n            });\r\n        }\r\n        if (!options.authTokenProvider) {\r\n            options.authTokenProvider = {\r\n                getAuthorizationHeader: function () {\r\n                    return azure_devops_extension_sdk_1.getAccessToken().then(function (token) { return token ? (\"Bearer \" + token) : \"\"; });\r\n                }\r\n            };\r\n        }\r\n        return new clientClass(options);\r\n    }\r\n    exports.getClient = getClient;\r\n});\r\n","/*\r\n * ---------------------------------------------------------\r\n * Copyright(C) Microsoft Corporation. All rights reserved.\r\n * ---------------------------------------------------------\r\n */\r\ndefine([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    var msAjaxDateRegEx = new RegExp('(^|[^\\\\\\\\])\\\\\"\\\\\\\\/Date\\\\((-?[0-9]+)(?:[a-zA-Z]|(?:\\\\+|-)[0-9]{4})?\\\\)\\\\\\\\/\\\\\"', 'g');\r\n    /**\r\n     * Handle the raw text of a JSON response which may contain MSJSON style dates and\r\n     * deserialize (JSON.parse) the data in a way that restores Date objects rather than\r\n     * strings.\r\n     *\r\n     * MSJSON style dates are in the form:\r\n     *\r\n     *     \"lastModified\": \"\\/Date(1496158224000)\\/\"\r\n     *\r\n     * This format unnecessarily (but intentionally) escapes the \"/\" character. So the parsed\r\n     * JSON will have no trace of the escape character (\\).\r\n     *\r\n     * @param text The raw JSON text\r\n     */\r\n    function deserializeVssJsonObject(text) {\r\n        function replaceMsJsonDates(object, parentObject, parentObjectKey) {\r\n            if (parentObject && typeof object.__msjson_date__ === \"number\") {\r\n                parentObject[parentObjectKey] = new Date(object.__msjson_date__);\r\n                return;\r\n            }\r\n            for (var key in object) {\r\n                var value = object[key];\r\n                if (value !== null && typeof value === \"object\") {\r\n                    replaceMsJsonDates(object[key], object, key);\r\n                }\r\n            }\r\n        }\r\n        var deserializedData = null;\r\n        if (text) {\r\n            // Replace MSJSON dates with an object that we can easily identify after JSON.parse.\r\n            // This replaces the string value (like \"\\/Date(1496158224000)\\/\") with a JSON object that \r\n            // has an \"__msjson_date__\" key.\r\n            var replacedText = text.replace(msAjaxDateRegEx, \"$1{\\\"__msjson_date__\\\":$2 }\");\r\n            // Do the actual JSON deserialization\r\n            deserializedData = JSON.parse(replacedText);\r\n            // Go through the parsed object and create actual Date objects for our replacements made above\r\n            if (replacedText !== text) {\r\n                replaceMsJsonDates(deserializedData, null, \"\");\r\n            }\r\n        }\r\n        return deserializedData;\r\n    }\r\n    exports.deserializeVssJsonObject = deserializeVssJsonObject;\r\n});\r\n","/*\r\n * ---------------------------------------------------------\r\n * Copyright(C) Microsoft Corporation. All rights reserved.\r\n * ---------------------------------------------------------\r\n */\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\ndefine([\"require\", \"exports\", \"whatwg-fetch\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * Issue a fetch request. This is a wrapper around the browser fetch method that handles VSS authentication\r\n     * and triggers events that can be listened to by other modules.\r\n     *\r\n     * @param requestUrl Url to send the request to\r\n     * @param options fetch settings/options for the request\r\n     * @param vssRequestOptions VSS specific request options\r\n     *\r\n     * Triggered Events:\r\n     *  afterRequest -> IPostRequestEvent is sent after the request has completed.\r\n     *  beforeRequest -> IPreRequestEvent is sent before the request is made.\r\n     */\r\n    function issueRequest(requestUrl, options, vssRequestOptions) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var response, headers, key, sessionId, command, refreshToken, authHeader, ex_1, error, error, _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        response = undefined;\r\n                        // Add a X-VSS-ReauthenticationAction header to all fetch requests\r\n                        if (!options) {\r\n                            options = {};\r\n                        }\r\n                        // If options.headers is set, check if it is a Headers object, and if not, convert it to one.\r\n                        if (options.headers) {\r\n                            if (options.headers instanceof Headers) {\r\n                                headers = options.headers;\r\n                            }\r\n                            else {\r\n                                headers = new Headers();\r\n                                if (typeof options.headers.hasOwnProperty === \"function\") {\r\n                                    for (key in options.headers) {\r\n                                        if (options.headers.hasOwnProperty(key)) {\r\n                                            headers.append(key, options.headers[key]);\r\n                                        }\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            headers = new Headers();\r\n                        }\r\n                        options.headers = headers;\r\n                        headers.append(\"X-VSS-ReauthenticationAction\", \"Suppress\");\r\n                        // Add a X-TFS-Session header with the current sessionId and command for correlation\r\n                        if (vssRequestOptions) {\r\n                            sessionId = vssRequestOptions.sessionId;\r\n                            command = vssRequestOptions.command;\r\n                            if (sessionId) {\r\n                                if (command) {\r\n                                    headers.append(\"X-TFS-Session\", sessionId + \",\" + command);\r\n                                }\r\n                                else {\r\n                                    headers.append(\"X-TFS-Session\", sessionId);\r\n                                }\r\n                            }\r\n                        }\r\n                        // Send credentials to the same origin, we will use tokens for differing origins.\r\n                        options.credentials = \"same-origin\";\r\n                        refreshToken = false;\r\n                        _b.label = 1;\r\n                    case 1:\r\n                        if (!(vssRequestOptions && vssRequestOptions.authTokenProvider)) return [3 /*break*/, 3];\r\n                        return [4 /*yield*/, vssRequestOptions.authTokenProvider.getAuthorizationHeader(refreshToken)];\r\n                    case 2:\r\n                        authHeader = _b.sent();\r\n                        if (authHeader) {\r\n                            headers.append(\"Authorization\", authHeader);\r\n                            refreshToken = true;\r\n                        }\r\n                        headers.append(\"X-TFS-FedAuthRedirect\", \"Suppress\");\r\n                        _b.label = 3;\r\n                    case 3:\r\n                        _b.trys.push([3, 5, , 6]);\r\n                        return [4 /*yield*/, fetch(requestUrl, options)];\r\n                    case 4:\r\n                        response = _b.sent();\r\n                        return [3 /*break*/, 6];\r\n                    case 5:\r\n                        ex_1 = _b.sent();\r\n                        console.warn(\"Unhandled exception in fetch for \" + requestUrl + \": \" + (ex_1 && ex_1.toString()));\r\n                        error = new Error(\"TF400893: Unable to contact the server. Please check your network connection and try again.\");\r\n                        error.name = \"NetworkException\";\r\n                        throw error;\r\n                    case 6:\r\n                        // If we recieved a 401 and have a token manager, we will refresh our token and try again.\r\n                        if (response.status === 401 && !refreshToken && vssRequestOptions && vssRequestOptions.authTokenProvider) {\r\n                            refreshToken = true;\r\n                            return [3 /*break*/, 7];\r\n                        }\r\n                        _b.label = 7;\r\n                    case 7:\r\n                        if (false) return [3 /*break*/, 1];\r\n                        _b.label = 8;\r\n                    case 8:\r\n                        if (!!response.ok) return [3 /*break*/, 10];\r\n                        error = new Error();\r\n                        error.name = \"TFS.WebApi.Exception\";\r\n                        error.status = response.status;\r\n                        _a = error;\r\n                        return [4 /*yield*/, response.text()];\r\n                    case 9:\r\n                        _a.responseText = _b.sent();\r\n                        // Attempt to parse the response as a json object, for many of the failures\r\n                        // the server will serialize details into the body.\r\n                        if (error.responseText && error.responseText !== \"\") {\r\n                            try {\r\n                                error.serverError = JSON.parse(error.responseText);\r\n                                if (error.serverError && error.serverError.message) {\r\n                                    error.message = error.serverError.message;\r\n                                }\r\n                            }\r\n                            catch (exception) {\r\n                            }\r\n                        }\r\n                        if (!error.message) {\r\n                            error.message = response.status + \": \" + response.statusText;\r\n                        }\r\n                        throw error;\r\n                    case 10: return [2 /*return*/, response];\r\n                }\r\n            });\r\n        });\r\n    }\r\n    exports.issueRequest = issueRequest;\r\n});\r\n","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * Contribution ids of core DevOps services which can be obtained from DevOps.getService\r\n     */\r\n    var CommonServiceIds;\r\n    (function (CommonServiceIds) {\r\n        /**\r\n         * Service for interacting with the extension data service\r\n         */\r\n        CommonServiceIds[\"ExtensionDataService\"] = \"ms.vss-features.extension-data-service\";\r\n        /**\r\n         * Service for showing global message banners at the top of the page\r\n         */\r\n        CommonServiceIds[\"GlobalMessagesService\"] = \"ms.vss-tfs-web.tfs-global-messages-service\";\r\n        /**\r\n         * Service for interacting with the host window's navigation (URLs, new windows, etc.)\r\n         */\r\n        CommonServiceIds[\"HostNavigationService\"] = \"ms.vss-features.host-navigation-service\";\r\n        /**\r\n         * Service for interacting with the layout of the page: managing full-screen mode,\r\n         * opening dialogs and panels\r\n         */\r\n        CommonServiceIds[\"HostPageLayoutService\"] = \"ms.vss-features.host-page-layout-service\";\r\n        /**\r\n         * Service for getting URLs/locations from the host context\r\n         */\r\n        CommonServiceIds[\"LocationService\"] = \"ms.vss-features.location-service\";\r\n        /**\r\n         * Exposes project-related information from the current page\r\n         */\r\n        CommonServiceIds[\"ProjectPageService\"] = \"ms.vss-tfs-web.tfs-page-data-service\";\r\n    })(CommonServiceIds = exports.CommonServiceIds || (exports.CommonServiceIds = {}));\r\n    /**\r\n     * Host level for a VSS service\r\n     */\r\n    var TeamFoundationHostType;\r\n    (function (TeamFoundationHostType) {\r\n        /**\r\n         * The Deployment host\r\n         */\r\n        TeamFoundationHostType[TeamFoundationHostType[\"Deployment\"] = 1] = \"Deployment\";\r\n        /**\r\n         * The Enterprise host\r\n         */\r\n        TeamFoundationHostType[TeamFoundationHostType[\"Enterprise\"] = 2] = \"Enterprise\";\r\n        /**\r\n         * The organization/project collection host\r\n         */\r\n        TeamFoundationHostType[TeamFoundationHostType[\"Organization\"] = 4] = \"Organization\";\r\n    })(TeamFoundationHostType = exports.TeamFoundationHostType || (exports.TeamFoundationHostType = {}));\r\n    /**\r\n     * Size (width) options for panel\r\n     */\r\n    var PanelSize;\r\n    (function (PanelSize) {\r\n        PanelSize[PanelSize[\"Small\"] = 0] = \"Small\";\r\n        PanelSize[PanelSize[\"Medium\"] = 1] = \"Medium\";\r\n        PanelSize[PanelSize[\"Large\"] = 2] = \"Large\";\r\n    })(PanelSize = exports.PanelSize || (exports.PanelSize = {}));\r\n    /**\r\n     * The severity of the message.\r\n     */\r\n    var MessageBannerLevel;\r\n    (function (MessageBannerLevel) {\r\n        MessageBannerLevel[MessageBannerLevel[\"info\"] = 0] = \"info\";\r\n        MessageBannerLevel[MessageBannerLevel[\"warning\"] = 1] = \"warning\";\r\n        MessageBannerLevel[MessageBannerLevel[\"error\"] = 2] = \"error\";\r\n        MessageBannerLevel[MessageBannerLevel[\"success\"] = 3] = \"success\";\r\n    })(MessageBannerLevel = exports.MessageBannerLevel || (exports.MessageBannerLevel = {}));\r\n});\r\n","define([\"require\", \"exports\", \"./Common/index\"], function (require, exports, index_1) {\r\n    \"use strict\";\r\n    function __export(m) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    __export(index_1);\r\n});\r\n","var support = {\n  searchParams: 'URLSearchParams' in self,\n  iterable: 'Symbol' in self && 'iterator' in Symbol,\n  blob:\n    'FileReader' in self &&\n    'Blob' in self &&\n    (function() {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in self,\n  arrayBuffer: 'ArrayBuffer' in self\n}\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ]\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name)\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~!]/i.test(name) || name === '') {\n    throw new TypeError('Invalid character in header field name')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value)\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift()\n      return {done: value === undefined, value: value}\n    }\n  }\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    }\n  }\n\n  return iterator\n}\n\nexport function Headers(headers) {\n  this.map = {}\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value)\n    }, this)\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      this.append(header[0], header[1])\n    }, this)\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name])\n    }, this)\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name)\n  value = normalizeValue(value)\n  var oldValue = this.map[name]\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\n}\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)]\n}\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name)\n  return this.has(name) ? this.map[name] : null\n}\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n}\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value)\n}\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this)\n    }\n  }\n}\n\nHeaders.prototype.keys = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push(name)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.values = function() {\n  var items = []\n  this.forEach(function(value) {\n    items.push(value)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.entries = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push([name, value])\n  })\n  return iteratorFor(items)\n}\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n}\n\nfunction consumed(body) {\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result)\n    }\n    reader.onerror = function() {\n      reject(reader.error)\n    }\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsArrayBuffer(blob)\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsText(blob)\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf)\n  var chars = new Array(view.length)\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i])\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength)\n    view.set(new Uint8Array(buf))\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false\n\n  this._initBody = function(body) {\n    /*\n      fetch-mock wraps the Response object in an ES6 Proxy to\n      provide useful test harness features such as flush. However, on\n      ES5 browsers without fetch or Proxy support pollyfills must be used;\n      the proxy-pollyfill is unable to proxy an attribute unless it exists\n      on the object before the Proxy is created. This change ensures\n      Response.bodyUsed exists on the instance, while maintaining the\n      semantic of setting Request.bodyUsed in the constructor before\n      _initBody is called.\n    */\n    this.bodyUsed = this.bodyUsed\n    this._bodyInit = body\n    if (!body) {\n      this._bodyText = ''\n    } else if (typeof body === 'string') {\n      this._bodyText = body\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString()\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer)\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body)\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body)\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type)\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n      }\n    }\n  }\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    }\n\n    this.arrayBuffer = function() {\n      if (this._bodyArrayBuffer) {\n        return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n      } else {\n        return this.blob().then(readBlobAsArrayBuffer)\n      }\n    }\n  }\n\n  this.text = function() {\n    var rejected = consumed(this)\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  }\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    }\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  }\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase()\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nexport function Request(input, options) {\n  options = options || {}\n  var body = options.body\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url\n    this.credentials = input.credentials\n    if (!options.headers) {\n      this.headers = new Headers(input.headers)\n    }\n    this.method = input.method\n    this.mode = input.mode\n    this.signal = input.signal\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit\n      input.bodyUsed = true\n    }\n  } else {\n    this.url = String(input)\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin'\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers)\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET')\n  this.mode = options.mode || this.mode || null\n  this.signal = options.signal || this.signal\n  this.referrer = null\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body)\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n}\n\nfunction decode(body) {\n  var form = new FormData()\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers()\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n  preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n    var parts = line.split(':')\n    var key = parts.shift().trim()\n    if (key) {\n      var value = parts.join(':').trim()\n      headers.append(key, value)\n    }\n  })\n  return headers\n}\n\nBody.call(Request.prototype)\n\nexport function Response(bodyInit, options) {\n  if (!options) {\n    options = {}\n  }\n\n  this.type = 'default'\n  this.status = options.status === undefined ? 200 : options.status\n  this.ok = this.status >= 200 && this.status < 300\n  this.statusText = 'statusText' in options ? options.statusText : ''\n  this.headers = new Headers(options.headers)\n  this.url = options.url || ''\n  this._initBody(bodyInit)\n}\n\nBody.call(Response.prototype)\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n}\n\nResponse.error = function() {\n  var response = new Response(null, {status: 0, statusText: ''})\n  response.type = 'error'\n  return response\n}\n\nvar redirectStatuses = [301, 302, 303, 307, 308]\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n}\n\nexport var DOMException = self.DOMException\ntry {\n  new DOMException()\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message\n    this.name = name\n    var error = Error(message)\n    this.stack = error.stack\n  }\n  DOMException.prototype = Object.create(Error.prototype)\n  DOMException.prototype.constructor = DOMException\n}\n\nexport function fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init)\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest()\n\n    function abortXhr() {\n      xhr.abort()\n    }\n\n    xhr.onload = function() {\n      var options = {\n        status: xhr.status,\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      }\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\n      setTimeout(function() {\n        resolve(new Response(body, options))\n      }, 0)\n    }\n\n    xhr.onerror = function() {\n      setTimeout(function() {\n        reject(new TypeError('Network request failed'))\n      }, 0)\n    }\n\n    xhr.ontimeout = function() {\n      setTimeout(function() {\n        reject(new TypeError('Network request failed'))\n      }, 0)\n    }\n\n    xhr.onabort = function() {\n      setTimeout(function() {\n        reject(new DOMException('Aborted', 'AbortError'))\n      }, 0)\n    }\n\n    function fixUrl(url) {\n      try {\n        return url === '' && self.location.href ? self.location.href : url\n      } catch (e) {\n        return url\n      }\n    }\n\n    xhr.open(request.method, fixUrl(request.url), true)\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    if ('responseType' in xhr) {\n      if (support.blob) {\n        xhr.responseType = 'blob'\n      } else if (\n        support.arrayBuffer &&\n        request.headers.get('Content-Type') &&\n        request.headers.get('Content-Type').indexOf('application/octet-stream') !== -1\n      ) {\n        xhr.responseType = 'arraybuffer'\n      }\n    }\n\n    request.headers.forEach(function(value, name) {\n      xhr.setRequestHeader(name, value)\n    })\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr)\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr)\n        }\n      }\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n  })\n}\n\nfetch.polyfill = true\n\nif (!self.fetch) {\n  self.fetch = fetch\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n}\n","define([\"require\", \"exports\"], function (require, exports) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * Contribution ids of Azure Boards services which can be obtained from DevOps.getService\r\n     */\r\n    var WorkItemTrackingServiceIds;\r\n    (function (WorkItemTrackingServiceIds) {\r\n        /**\r\n         * Host service for opening the work item form\r\n         */\r\n        WorkItemTrackingServiceIds[\"WorkItemFormNavigationService\"] = \"ms.vss-work-web.work-item-form-navigation-service\";\r\n        /**\r\n         * Host service for interacting with the currently active work item form (work item currently displayed in the UI).\r\n         * Form service depends on the current active work item context. Will throw an error when there is no open work item.\r\n         */\r\n        WorkItemTrackingServiceIds[\"WorkItemFormService\"] = \"ms.vss-work-web.work-item-form\";\r\n    })(WorkItemTrackingServiceIds = exports.WorkItemTrackingServiceIds || (exports.WorkItemTrackingServiceIds = {}));\r\n});\r\n","define([\"require\", \"exports\", \"./WorkItemTracking\", \"./WorkItemTrackingClient\", \"./WorkItemTrackingServices\"], function (require, exports, WorkItemTracking_1, WorkItemTrackingClient_1, WorkItemTrackingServices_1) {\r\n    \"use strict\";\r\n    function __export(m) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    __export(WorkItemTracking_1);\r\n    __export(WorkItemTrackingClient_1);\r\n    __export(WorkItemTrackingServices_1);\r\n});\r\n","define([\"require\", \"exports\", \"./Client\", \"./CommonServices\"], function (require, exports, Client_1, CommonServices_1) {\r\n    \"use strict\";\r\n    function __export(m) {\r\n        for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n    }\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    __export(Client_1);\r\n    __export(CommonServices_1);\r\n});\r\n"],"names":["require","exports","WorkItemTypeFieldsExpandLevel","WorkItemRecentActivityType","WorkItemExpand","WorkItemErrorPolicy","TreeStructureGroup","TreeNodeStructureType","TemplateType","ReportingRevisionsExpand","QueryType","QueryResultType","QueryRecursionOption","QueryOption","QueryExpand","QueryErrorPolicy","ProvisioningActionType","LogicalOperation","LinkQueryMode","LargeTextCustomHtmlFormat","GetFieldsExpand","FieldUsage","FieldType","CommentSortOrder","CommentReactionType","CommentFormat","CommentExpandOptions","ClassificationNodesErrorPolicy","Object","defineProperty","value","extendStatics","__extends","this","setPrototypeOf","__proto__","Array","d","b","p","hasOwnProperty","__","constructor","prototype","create","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","Symbol","iterator","n","v","op","TypeError","call","pop","length","push","RestClientBase_1","WorkItemTrackingRestClient","_super","options","getAccountMyWorkData","queryOption","queryValues","_a","beginRequest","apiVersion","routeTemplate","queryParams","getRecentActivityData","getRecentMentions","getWorkArtifactLinkTypes","queryWorkItemsForArtifactUris","artifactUriQuery","project","method","routeValues","createAttachment","content","fileName","uploadType","areaPath","customHeaders","isRawData","getAttachmentContent","id","download","httpResponseType","getAttachmentZip","getClassificationNodes","ids","depth","errorPolicy","join","getRootNodes","createOrUpdateClassificationNode","postedNode","structureGroup","path","deleteClassificationNode","reclassifyId","getClassificationNode","updateClassificationNode","getComment","revision","getComments","fromRevision","top","order","createField","workItemField","deleteField","fieldNameOrRefName","getField","getFields","expand","updateField","payload","createQuery","postedQuery","query","validateWiqlOnly","deleteQuery","getQueries","includeDeleted","getQuery","useIsoDateFormat","searchQueries","filter","updateQuery","queryUpdate","undeleteDescendants","getQueriesBatch","queryGetRequest","destroyWorkItem","getDeletedWorkItem","getDeletedWorkItems","getDeletedWorkItemShallowReferences","restoreWorkItem","getRevision","revisionNumber","getRevisions","skip","sendMail","createTemplate","template","team","getTemplates","workitemtypename","deleteTemplate","templateId","getTemplate","replaceTemplate","templateContent","getUpdate","updateNumber","getUpdates","queryByWiql","wiql","timePrecision","getQueryResultCount","_this","returnRawResponse","response","Number","headers","get","queryById","getWorkItemIconJson","icon","color","getWorkItemIcons","getWorkItemIconSvg","getWorkItemIconXaml","getReportingLinksByLinkType","linkTypes","types","continuationToken","startDateTime","getRelationType","relation","getRelationTypes","readReportingRevisionsGet","fields","includeIdentityRef","includeTagRef","includeLatestOnly","includeDiscussionChangesOnly","maxPageSize","readReportingRevisionsPost","createWorkItem","document","type","validateOnly","bypassRules","suppressNotifications","getWorkItemTemplate","asOf","deleteWorkItem","destroy","getWorkItem","getWorkItems","updateWorkItem","getWorkItemsBatch","workItemGetRequest","getWorkItemStateColors","projectNames","getWorkItemNextStatesOnCheckinAction","action","getWorkItemTypeCategories","getWorkItemTypeCategory","category","getWorkItemTypeColors","getWorkItemTypeColorAndIcons","getWorkItemType","getWorkItemTypes","getWorkItemTypeFieldsWithReferences","getWorkItemTypeFieldWithReferences","field","getWorkItemTypeStates","exportWorkItemTypeDefinition","exportGlobalLists","updateWorkItemTypeDefinition","updateModel","RESOURCE_AREA_ID","RestClientBase","Fetch_1","Serialization_1","Url_1","_options","rootPath","_rootPath","getRootPath","requestParams","requestUrl","replaceRouteValues","uri","Uri","addQueryParams","absoluteUri","_issueRequest","fetchOptions","mode","toUpperCase","JSON","stringify","acceptType","acceptHeaderValue","assign","vssRequestOptions","authTokenProvider","sessionId","command","issueRequest","toLowerCase","indexOf","text","deserializeVssJsonObject","arrayBuffer","KeyCodes","prepareForComparison","upperCase","toLocaleUpperCase","stringEquals","str1","str2","ignoreCase","localeCompare","scheme","noSchemeSeparator","host","port","queryParameters","hashString","_setFromUriString","uriString","hashSplit","_singleSplit","part1","_decodeUriComponent","part2","querySplit","queryString","schemeSplit","substr","pathSplit","portSplit","parseInt","isNaN","absoluteUriRequired","Error","separator","matchIndex","replace","decodeURIComponent","encodeURI","decodeURI","encodedPath","split","map","encodeURIComponent","combineUrlPaths","params","_splitStringIntoParams","_getParamsAsString","set","enumerable","configurable","getEffectivePort","param","name","paramString","forEach","pair","valueSplit","getQueryParam","matchingPairs","addQueryParam","replaceExisting","removeQueryParam","parameters","keyPrefix","_loop_1","key","keyWithPrefix_1","Date","this_1","toJSON","isArray","paths","_i","arguments","segmentsToJoin","i","last","parseRouteTemplate","parsedRoute","segments","paramStartIndex","segmentStartIndex","segmentPrefix","charIndex","routeTemplateLen","c","charCodeAt","paramName","substring","isWildCardParam","segmentText","required","segment","isRequiredParam","getBestRouteMatch","routeCollection","bestMatch","totalRouteValues","keys","routeCollection_1","match","replaceParsedRouteValues","matchedParametersCount","continueOnUnmatchedSegements","urlParts","matchedParameters","segmentIndex","l","charAt","lastSegment","url","routeUrl","routeValueKey","azure_devops_extension_sdk_1","getClient","clientClass","clientOptions","getService","locationService","getResourceAreaLocation","getServiceLocation","getAuthorizationHeader","getAccessToken","token","msAjaxDateRegEx","RegExp","deserializedData","replacedText","parse","replaceMsJsonDates","object","parentObject","parentObjectKey","__msjson_date__","refreshToken","authHeader","ex_1","error","_b","undefined","Headers","append","credentials","fetch","console","warn","toString","status","ok","responseText","serverError","message","exception","statusText","MessageBannerLevel","PanelSize","TeamFoundationHostType","CommonServiceIds","index_1","m","__export","support","searchParams","self","iterable","blob","Blob","formData","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","normalizeName","String","test","normalizeValue","iteratorFor","items","shift","header","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","readAsText","chars","fromCharCode","readArrayBufferAsText","decode","json","oldValue","has","callback","values","entries","methods","Request","input","upcased","signal","referrer","form","trim","bytes","Response","bodyInit","clone","redirectStatuses","redirect","RangeError","location","DOMException","err","stack","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","line","parts","responseURL","setTimeout","ontimeout","onabort","open","href","fixUrl","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","WorkItemTrackingServiceIds","WorkItemTracking_1","WorkItemTrackingClient_1","WorkItemTrackingServices_1","Client_1","CommonServices_1"],"sourceRoot":""}