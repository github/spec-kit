{"version":3,"file":"tab/tab.js","mappings":"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","sources":["webpack://spec-kit-azure-devops-extension/webpack/runtime/chunk loaded","webpack://spec-kit-azure-devops-extension/./src/tab/tab.ts","webpack://spec-kit-azure-devops-extension/webpack/bootstrap","webpack://spec-kit-azure-devops-extension/webpack/runtime/define property getters","webpack://spec-kit-azure-devops-extension/webpack/runtime/hasOwnProperty shorthand","webpack://spec-kit-azure-devops-extension/webpack/runtime/make namespace object","webpack://spec-kit-azure-devops-extension/webpack/runtime/jsonp chunk loading","webpack://spec-kit-azure-devops-extension/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import * as SDK from \"azure-devops-extension-sdk\";\r\nimport { getClient } from \"azure-devops-extension-api\";\r\nimport { WorkItemTrackingRestClient } from \"azure-devops-extension-api/WorkItemTracking\";\r\nimport { SpecKitOrchestrator } from \"../services/orchestrator\";\r\nimport { LLMService } from \"../services/llm\";\r\nimport { RepositoryService } from \"../services/repository\";\r\nimport { TelemetryService } from \"../services/telemetry\";\r\n\r\ninterface WorkItemData {\r\n    id: number;\r\n    title: string;\r\n    description: string;\r\n    acceptanceCriteria: string;\r\n    workItemType: string;\r\n    state: string;\r\n    assignedTo: string;\r\n}\r\n\r\ninterface GeneratedArtifact {\r\n    type: 'specification' | 'plan' | 'tasks';\r\n    title: string;\r\n    content: string;\r\n    timestamp: Date;\r\n    cost?: number;\r\n}\r\n\r\nclass SpecAssistTab {\r\n    private workItemClient!: WorkItemTrackingRestClient;\r\n    private orchestrator: SpecKitOrchestrator;\r\n    private llmService: LLMService;\r\n    private repositoryService: RepositoryService;\r\n    private telemetryService: TelemetryService;\r\n    private currentWorkItem: WorkItemData | null = null;\r\n    private projectId: string = '';\r\n    private artifacts: GeneratedArtifact[] = [];\r\n    private activeRunId: string | null = null;\r\n\r\n    constructor() {\r\n        this.orchestrator = new SpecKitOrchestrator();\r\n        this.llmService = new LLMService();\r\n        this.repositoryService = new RepositoryService();\r\n        this.telemetryService = new TelemetryService();\r\n    }\r\n\r\n    public async initialize(): Promise<void> {\r\n        try {\r\n            console.log('Spec Kit Tab: Starting initialization...');\r\n            \r\n            // Initialize Azure DevOps Extension SDK\r\n            await SDK.init();\r\n            console.log('SDK initialized');\r\n            \r\n            await SDK.ready();\r\n            console.log('SDK ready');\r\n\r\n            // Get work item tracking client\r\n            this.workItemClient = getClient(WorkItemTrackingRestClient);\r\n            console.log('Work item client initialized');\r\n\r\n            // Get project context\r\n            const webContext = SDK.getWebContext();\r\n            this.projectId = webContext.project?.id || '';\r\n            console.log('Project ID:', this.projectId);\r\n\r\n            // Initialize services\r\n            this.orchestrator = new SpecKitOrchestrator();\r\n            this.llmService = new LLMService();\r\n            this.repositoryService = new RepositoryService();\r\n            this.telemetryService = new TelemetryService();\r\n            console.log('Services initialized');\r\n\r\n            await this.loadWorkItemData();\r\n            await this.loadLLMConnections();\r\n            this.setupEventHandlers();\r\n            await this.loadExistingArtifacts();\r\n            \r\n            // Hide loading and show content\r\n            this.hideLoading();\r\n            \r\n            console.log('Spec Kit Tab initialization completed successfully');\r\n        } catch (error) {\r\n            console.error('Failed to initialize Spec Kit Tab:', error);\r\n            this.showError('Initialization failed: ' + (error as Error).message, error);\r\n        }\r\n    }\r\n\r\n    private async loadWorkItemData(): Promise<void> {\r\n        try {\r\n            // In Azure DevOps tabs, work item ID is available via URL parameters\r\n            const urlParams = new URLSearchParams(window.location.search);\r\n            const workItemIdStr = urlParams.get('workItemId') || urlParams.get('id');\r\n            const workItemId = workItemIdStr ? parseInt(workItemIdStr) : 0;\r\n            \r\n            if (!workItemId) {\r\n                throw new Error('Work item ID not found');\r\n            }\r\n\r\n            const workItem = await this.workItemClient.getWorkItem(workItemId, this.projectId);\r\n            \r\n            this.currentWorkItem = {\r\n                id: workItem.id || 0,\r\n                title: (workItem.fields?.['System.Title'] as string) || '',\r\n                description: (workItem.fields?.['System.Description'] as string) || '',\r\n                acceptanceCriteria: (workItem.fields?.['Microsoft.VSTS.Common.AcceptanceCriteria'] as string) || '',\r\n                workItemType: (workItem.fields?.['System.WorkItemType'] as string) || 'Task',\r\n                state: (workItem.fields?.['System.State'] as string) || 'New',\r\n                assignedTo: (workItem.fields?.['System.AssignedTo'] as any)?.displayName || 'Unassigned'\r\n            };\r\n\r\n            this.updateWorkItemDisplay();\r\n\r\n        } catch (error) {\r\n            console.error('Error loading work item data:', error);\r\n            this.showStatus('Error loading work item data', 'error');\r\n        }\r\n    }\r\n\r\n    private updateWorkItemDisplay(): void {\r\n        if (!this.currentWorkItem) return;\r\n\r\n        const titleElement = document.getElementById('work-item-title');\r\n        const idElement = document.getElementById('work-item-id');\r\n        const typeElement = document.getElementById('work-item-type');\r\n        const stateElement = document.getElementById('work-item-state');\r\n        const assigneeElement = document.getElementById('work-item-assignee');\r\n\r\n        if (titleElement) titleElement.textContent = this.currentWorkItem.title;\r\n        if (idElement) idElement.textContent = this.currentWorkItem.id.toString();\r\n        if (typeElement) typeElement.textContent = this.currentWorkItem.workItemType;\r\n        if (stateElement) stateElement.textContent = this.currentWorkItem.state;\r\n        if (assigneeElement) assigneeElement.textContent = this.currentWorkItem.assignedTo;\r\n    }\r\n\r\n    private async loadLLMConnections(): Promise<void> {\r\n        try {\r\n            const connections = await this.llmService.getProjectConnections(this.projectId);\r\n            const select = document.getElementById('llm-connection') as HTMLSelectElement;\r\n            \r\n            if (select) {\r\n                select.innerHTML = '';\r\n                \r\n                if (connections.length === 0) {\r\n                    select.innerHTML = '<option value=\"\">No LLM connections configured</option>';\r\n                } else {\r\n                    connections.forEach(conn => {\r\n                        const option = document.createElement('option');\r\n                        option.value = conn.id;\r\n                        option.textContent = `${conn.name} (${conn.model})`;\r\n                        if (conn.isDefault) {\r\n                            option.selected = true;\r\n                        }\r\n                        select.appendChild(option);\r\n                    });\r\n                }\r\n            }\r\n        } catch (error) {\r\n            console.error('Error loading LLM connections:', error);\r\n            const select = document.getElementById('llm-connection') as HTMLSelectElement;\r\n            if (select) {\r\n                select.innerHTML = '<option value=\"\">Error loading connections</option>';\r\n            }\r\n        }\r\n    }\r\n\r\n    private setupEventHandlers(): void {\r\n        // Workflow buttons\r\n        document.getElementById('btn-specify')?.addEventListener('click', () => this.runWorkflow('specify'));\r\n        document.getElementById('btn-specify-custom')?.addEventListener('click', () => this.runCustomWorkflow('specify'));\r\n        \r\n        document.getElementById('btn-plan')?.addEventListener('click', () => this.runWorkflow('plan'));\r\n        document.getElementById('btn-plan-custom')?.addEventListener('click', () => this.runCustomWorkflow('plan'));\r\n        \r\n        document.getElementById('btn-tasks')?.addEventListener('click', () => this.runWorkflow('tasks'));\r\n        document.getElementById('btn-tasks-custom')?.addEventListener('click', () => this.runCustomWorkflow('tasks'));\r\n\r\n        // Publishing buttons\r\n        document.getElementById('btn-publish-wiki')?.addEventListener('click', () => this.publishToWiki());\r\n        document.getElementById('btn-publish-repo')?.addEventListener('click', () => this.publishToRepo());\r\n    }\r\n\r\n    private async runWorkflow(workflow: 'specify' | 'plan' | 'tasks'): Promise<void> {\r\n        if (!this.currentWorkItem) {\r\n            this.showStatus('No work item loaded', 'error');\r\n            return;\r\n        }\r\n\r\n        if (this.activeRunId) {\r\n            this.showStatus('A workflow is already running. Please wait for it to complete.', 'error');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            this.setButtonsEnabled(false);\r\n            this.showStatus(`Starting ${workflow} workflow...`, 'running');\r\n\r\n            // Get selected settings\r\n            const llmConnectionId = (document.getElementById('llm-connection') as HTMLSelectElement)?.value;\r\n            const temperature = parseFloat((document.getElementById('temperature') as HTMLSelectElement)?.value || '0.7');\r\n            const outputLocation = (document.getElementById('output-location') as HTMLSelectElement)?.value || 'both';\r\n\r\n            if (!llmConnectionId) {\r\n                throw new Error('No LLM connection selected. Please configure an LLM connection first.');\r\n            }\r\n\r\n            // Start workflow\r\n            const runId = await this.orchestrator.startWorkflow(\r\n                workflow,\r\n                this.currentWorkItem.id,\r\n                this.projectId,\r\n                {\r\n                    temperature,\r\n                    outputFormat: outputLocation,\r\n                    llmConnectionId\r\n                }\r\n            );\r\n\r\n            this.activeRunId = runId;\r\n\r\n            // Poll for completion\r\n            await this.pollWorkflowCompletion(runId, workflow);\r\n\r\n        } catch (error) {\r\n            this.showStatus(`Error: ${error}`, 'error');\r\n            this.setButtonsEnabled(true);\r\n            this.activeRunId = null;\r\n        }\r\n    }\r\n\r\n    private async runCustomWorkflow(workflow: 'specify' | 'plan' | 'tasks'): Promise<void> {\r\n        // This would open a dialog for custom workflow options\r\n        const customOptions = await this.showCustomOptionsDialog(workflow);\r\n        if (customOptions) {\r\n            // Run workflow with custom options\r\n            console.log('Running custom workflow with options:', customOptions);\r\n        }\r\n    }\r\n\r\n    private async pollWorkflowCompletion(runId: string, workflow: 'specify' | 'plan' | 'tasks'): Promise<void> {\r\n        const maxAttempts = 60; // 5 minutes max\r\n        let attempts = 0;\r\n\r\n        const poll = async (): Promise<void> => {\r\n            attempts++;\r\n            \r\n            try {\r\n                const runDetails = await this.telemetryService.getRunDetails(runId);\r\n                \r\n                if (!runDetails) {\r\n                    throw new Error('Run details not found');\r\n                }\r\n\r\n                if (runDetails.status === 'success') {\r\n                    this.showStatus(`${workflow} workflow completed successfully!`, 'success');\r\n                    await this.loadGeneratedArtifacts(runId, workflow);\r\n                    this.setButtonsEnabled(true);\r\n                    this.activeRunId = null;\r\n                    return;\r\n                }\r\n\r\n                if (runDetails.status === 'failed') {\r\n                    this.showStatus(`${workflow} workflow failed: ${runDetails.errorMessage}`, 'error');\r\n                    this.setButtonsEnabled(true);\r\n                    this.activeRunId = null;\r\n                    return;\r\n                }\r\n\r\n                if (runDetails.status === 'running' && attempts < maxAttempts) {\r\n                    this.showStatus(`${workflow} workflow running... (${attempts * 5}s)`, 'running');\r\n                    setTimeout(poll, 5000); // Poll every 5 seconds\r\n                    return;\r\n                }\r\n\r\n                throw new Error('Workflow timed out');\r\n\r\n            } catch (error) {\r\n                this.showStatus(`Error polling workflow status: ${error}`, 'error');\r\n                this.setButtonsEnabled(true);\r\n                this.activeRunId = null;\r\n            }\r\n        };\r\n\r\n        await poll();\r\n    }\r\n\r\n    private async loadGeneratedArtifacts(runId: string, workflow: 'specify' | 'plan' | 'tasks'): Promise<void> {\r\n        try {\r\n            const runDetails = await this.telemetryService.getRunDetails(runId);\r\n            if (!runDetails || !runDetails.artifacts) return;\r\n\r\n            // Create artifact objects\r\n            runDetails.artifacts.forEach(artifactPath => {\r\n                const artifact: GeneratedArtifact = {\r\n                    type: workflow as any,\r\n                    title: `${workflow.charAt(0).toUpperCase() + workflow.slice(1)} - ${this.currentWorkItem?.title}`,\r\n                    content: `Generated content from ${artifactPath}`, // Would load actual content\r\n                    timestamp: new Date(),\r\n                    cost: runDetails.cost\r\n                };\r\n                \r\n                this.artifacts.push(artifact);\r\n            });\r\n\r\n            this.updateArtifactsDisplay();\r\n\r\n        } catch (error) {\r\n            console.error('Error loading generated artifacts:', error);\r\n        }\r\n    }\r\n\r\n    private updateArtifactsDisplay(): void {\r\n        const container = document.getElementById('artifacts-container');\r\n        if (!container) return;\r\n\r\n        if (this.artifacts.length === 0) {\r\n            container.innerHTML = '<p>No artifacts generated yet. Run a workflow to see results here.</p>';\r\n            return;\r\n        }\r\n\r\n        container.innerHTML = this.artifacts.map((artifact, index) => `\r\n            <div class=\"artifact-item\">\r\n                <div class=\"artifact-header\" onclick=\"toggleArtifact(${index})\">\r\n                    <span>${artifact.title}</span>\r\n                    <span>\r\n                        ${artifact.cost ? `$${artifact.cost.toFixed(3)}` : ''}\r\n                        <span style=\"margin-left: 10px;\">▼</span>\r\n                    </span>\r\n                </div>\r\n                <div class=\"artifact-content hidden\" id=\"artifact-content-${index}\">\r\n                    <pre>${artifact.content}</pre>\r\n                    <div style=\"margin-top: 10px;\">\r\n                        <button onclick=\"copyArtifact(${index})\" class=\"workflow-button\">Copy</button>\r\n                        <button onclick=\"editArtifact(${index})\" class=\"workflow-button\">Edit</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        `).join('');\r\n    }\r\n\r\n    private async publishToWiki(): Promise<void> {\r\n        if (this.artifacts.length === 0) {\r\n            this.showStatus('No artifacts to publish', 'error');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            this.showStatus('Publishing to wiki...', 'running');\r\n            \r\n            // This would publish artifacts to Azure DevOps Wiki\r\n            await this.sleep(2000); // Simulate API call\r\n            \r\n            this.showStatus('Successfully published to wiki!', 'success');\r\n        } catch (error) {\r\n            this.showStatus(`Error publishing to wiki: ${error}`, 'error');\r\n        }\r\n    }\r\n\r\n    private async publishToRepo(): Promise<void> {\r\n        if (this.artifacts.length === 0) {\r\n            this.showStatus('No artifacts to publish', 'error');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            this.showStatus('Saving to repository...', 'running');\r\n            \r\n            for (const artifact of this.artifacts) {\r\n                const filePath = `specs/${artifact.type}/${this.currentWorkItem?.id}-${artifact.type}.md`;\r\n                await this.repositoryService.saveArtifact(\r\n                    this.projectId,\r\n                    filePath,\r\n                    artifact.content,\r\n                    `Add ${artifact.type} for work item #${this.currentWorkItem?.id}`\r\n                );\r\n            }\r\n            \r\n            this.showStatus('Successfully saved to repository!', 'success');\r\n        } catch (error) {\r\n            this.showStatus(`Error saving to repository: ${error}`, 'error');\r\n        }\r\n    }\r\n\r\n    private async loadExistingArtifacts(): Promise<void> {\r\n        if (!this.currentWorkItem) return;\r\n\r\n        try {\r\n            // Load existing artifacts for this work item\r\n            const specs = await this.repositoryService.getArtifacts(this.projectId, 'specs');\r\n            const plans = await this.repositoryService.getArtifacts(this.projectId, 'plans');\r\n            const tasks = await this.repositoryService.getArtifacts(this.projectId, 'tasks');\r\n\r\n            // Filter artifacts for current work item\r\n            const workItemArtifacts = [...specs, ...plans, ...tasks].filter(path => \r\n                path.includes(this.currentWorkItem!.id.toString())\r\n            );\r\n\r\n            // Load artifact content and create artifact objects\r\n            // This would involve actual file reading in a real implementation\r\n\r\n        } catch (error) {\r\n            console.error('Error loading existing artifacts:', error);\r\n        }\r\n    }\r\n\r\n    private setButtonsEnabled(enabled: boolean): void {\r\n        const buttons = [\r\n            'btn-specify', 'btn-specify-custom',\r\n            'btn-plan', 'btn-plan-custom',\r\n            'btn-tasks', 'btn-tasks-custom'\r\n        ];\r\n\r\n        buttons.forEach(id => {\r\n            const button = document.getElementById(id) as HTMLButtonElement;\r\n            if (button) {\r\n                button.disabled = !enabled;\r\n            }\r\n        });\r\n    }\r\n\r\n    private showStatus(message: string, type: 'running' | 'success' | 'error'): void {\r\n        const statusElement = document.getElementById('execution-status');\r\n        const contentElement = document.getElementById('status-content');\r\n        \r\n        if (statusElement && contentElement) {\r\n            statusElement.className = `execution-status ${type}`;\r\n            statusElement.classList.remove('hidden');\r\n            \r\n            const icon = type === 'running' ? '<span class=\"loading-spinner\"></span>' : '';\r\n            contentElement.innerHTML = `${icon}${message}`;\r\n        }\r\n    }\r\n\r\n    private async showCustomOptionsDialog(workflow: string): Promise<any> {\r\n        // This would show a custom dialog for workflow options\r\n        return null;\r\n    }\r\n\r\n    private sleep(ms: number): Promise<void> {\r\n        return new Promise(resolve => setTimeout(resolve, ms));\r\n    }\r\n\r\n    private hideLoading(): void {\r\n        const loading = document.getElementById('loading-indicator');\r\n        const content = document.getElementById('main-content');\r\n        if (loading) loading.style.display = 'none';\r\n        if (content) content.style.display = 'block';\r\n    }\r\n\r\n    private showError(message: string, details?: any): void {\r\n        console.error('Spec Kit Tab Error:', message, details);\r\n        \r\n        const loading = document.getElementById('loading-indicator');\r\n        const content = document.getElementById('main-content');\r\n        const errorContainer = document.getElementById('error-container');\r\n        const errorMessage = document.getElementById('error-message');\r\n        const errorDetails = document.getElementById('error-details');\r\n\r\n        if (loading) loading.style.display = 'none';\r\n        if (content) content.style.display = 'none';\r\n        if (errorContainer) errorContainer.style.display = 'block';\r\n        if (errorMessage) errorMessage.textContent = message;\r\n        if (errorDetails) {\r\n            errorDetails.textContent = details ? JSON.stringify(details, null, 2) : 'No additional details';\r\n        }\r\n    }\r\n}\r\n\r\n// Global functions for HTML event handlers\r\n(window as any).toggleArtifact = (index: number) => {\r\n    const content = document.getElementById(`artifact-content-${index}`);\r\n    if (content) {\r\n        content.classList.toggle('hidden');\r\n    }\r\n};\r\n\r\n(window as any).copyArtifact = (index: number) => {\r\n    const artifact = (window as any).specAssistTab?.artifacts[index];\r\n    if (artifact) {\r\n        navigator.clipboard.writeText(artifact.content);\r\n        console.log('Artifact copied to clipboard');\r\n    }\r\n};\r\n\r\n(window as any).editArtifact = (index: number) => {\r\n    console.log('Edit artifact:', index);\r\n    // This would open an editor dialog\r\n};\r\n\r\n// Initialize the tab\r\nconsole.log('Spec Kit Tab: Creating tab instance...');\r\n\r\nconst tab = new SpecAssistTab();\r\n(window as any).specKitTab = tab;\r\n(window as any).specAssistTab = tab; // Backward compatibility\r\n\r\n// Initialize when SDK is ready\r\nSDK.ready().then(() => {\r\n    console.log('Spec Kit Tab: SDK ready, initializing tab...');\r\n    tab.initialize().catch(error => {\r\n        console.error('Failed to initialize Spec Kit tab:', error);\r\n        if ((window as any).showError) {\r\n            (window as any).showError('Failed to initialize: ' + error.message, error);\r\n        }\r\n    });\r\n}).catch(error => {\r\n    console.error('SDK ready failed:', error);\r\n    if ((window as any).showError) {\r\n        (window as any).showError('SDK initialization failed: ' + error.message, error);\r\n    }\r\n});\r\ntab.initialize().catch(console.error);","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t768: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkspec_kit_azure_devops_extension\"] = self[\"webpackChunkspec_kit_azure_devops_extension\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [76,533], () => (__webpack_require__(330)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","window","toggleArtifact","index","content","document","getElementById","classList","toggle","copyArtifact","artifact","specAssistTab","artifacts","navigator","clipboard","writeText","console","log","editArtifact","tab","constructor","currentWorkItem","projectId","activeRunId","this","orchestrator","SpecKitOrchestrator","llmService","LLMService","repositoryService","RepositoryService","telemetryService","TelemetryService","initialize","SDK","init","ready","workItemClient","getClient","WorkItemTrackingRestClient","webContext","getWebContext","project","id","loadWorkItemData","loadLLMConnections","setupEventHandlers","loadExistingArtifacts","hideLoading","error","showError","message","urlParams","URLSearchParams","location","search","workItemIdStr","get","workItemId","parseInt","Error","workItem","getWorkItem","title","fields","description","acceptanceCriteria","workItemType","state","assignedTo","displayName","updateWorkItemDisplay","showStatus","titleElement","idElement","typeElement","stateElement","assigneeElement","textContent","toString","connections","getProjectConnections","select","innerHTML","length","forEach","conn","option","createElement","value","name","model","isDefault","selected","appendChild","addEventListener","runWorkflow","runCustomWorkflow","publishToWiki","publishToRepo","workflow","setButtonsEnabled","llmConnectionId","temperature","parseFloat","outputLocation","runId","startWorkflow","outputFormat","pollWorkflowCompletion","customOptions","showCustomOptionsDialog","attempts","poll","async","runDetails","getRunDetails","status","loadGeneratedArtifacts","errorMessage","setTimeout","artifactPath","type","charAt","toUpperCase","slice","timestamp","Date","cost","push","updateArtifactsDisplay","container","map","toFixed","join","sleep","filePath","saveArtifact","specs","getArtifacts","plans","tasks","filter","path","includes","enabled","button","disabled","statusElement","contentElement","className","remove","icon","ms","Promise","resolve","loading","style","display","details","errorContainer","errorDetails","JSON","stringify","specKitTab","then","catch","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","key","splice","r","d","definition","o","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}