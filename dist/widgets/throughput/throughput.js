define("widgets/throughput/throughput",[],()=>(()=>{"use strict";var e,t={758:function(e,t,r){var n,i=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r);var i=Object.getOwnPropertyDescriptor(t,r);i&&!("get"in i?!t.__esModule:i.writable||i.configurable)||(i={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,n,i)}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),a=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),s=this&&this.__importStar||(n=function(e){return n=Object.getOwnPropertyNames||function(e){var t=[];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[t.length]=r);return t},n(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r=n(e),s=0;s<r.length;s++)"default"!==r[s]&&i(t,e,r[s]);return a(t,e),t});Object.defineProperty(t,"__esModule",{value:!0});const o=s(r(899)),l=r(677);(new class{constructor(){this.projectId="",this.timeframe="30d",this.telemetryService=new l.TelemetryService}async initialize(){var e;await o.init(),await o.ready();const t=o.getWebContext();this.projectId=(null===(e=t.project)||void 0===e?void 0:e.id)||"",await this.loadData()}async loadData(){try{const e=await this.getThroughputData();this.renderWidget(e)}catch(e){this.renderError(`Failed to load throughput data: ${e}`)}}async getThroughputData(){await this.telemetryService.getProjectMetrics(this.projectId);const e=await this.telemetryService.getRecentRuns(this.projectId,1e3),t=new Date;t.setDate(t.getDate()-30);const r=e.filter(e=>e.timestamp>=t&&"success"===e.status),n=r.filter(e=>"specify"===e.workflow).length,i=r.filter(e=>"plan"===e.workflow).length,a=r.filter(e=>"tasks"===e.workflow).length;return{totalSpecs:n,totalPlans:i,totalTasks:a,weeklyAverage:(n+i+a)/4.3,trends:this.calculateTrends(r),chartData:this.generateChartData(r)}}calculateTrends(e){const t=Math.floor(e.length/2),r=e.slice(0,t),n=e.slice(t),i=r.filter(e=>"specify"===e.workflow).length,a=n.filter(e=>"specify"===e.workflow).length,s=r.filter(e=>"plan"===e.workflow).length,o=n.filter(e=>"plan"===e.workflow).length,l=r.filter(e=>"tasks"===e.workflow).length,c=n.filter(e=>"tasks"===e.workflow).length;return{specs:a>i?"up":a<i?"down":"neutral",plans:o>s?"up":o<s?"down":"neutral",tasks:c>l?"up":c<l?"down":"neutral",overall:a+o+c>i+s+l?"up":"down"}}generateChartData(e){const t=[],r={};e.forEach(e=>{const t=e.timestamp.toISOString().split("T")[0];r[t]=(r[t]||0)+1});for(let e=6;e>=0;e--){const n=new Date;n.setDate(n.getDate()-e);const i=n.toISOString().split("T")[0];t.push({date:i,count:r[i]||0})}return t}renderWidget(e){const t=document.getElementById("widget-container");t&&(t.innerHTML=`\n            <div class="widget-header">\n                <h3 class="widget-title">Spec Throughput</h3>\n                <span class="widget-timeframe">Last 30 days</span>\n            </div>\n            <div class="metrics-container">\n                <div class="metric-card">\n                    <div class="metric-value">${e.totalSpecs}</div>\n                    <div class="metric-label">Specifications</div>\n                    <div class="metric-trend trend-${e.trends.specs}">\n                        ${this.getTrendIcon(e.trends.specs)} ${this.getTrendText(e.trends.specs)}\n                    </div>\n                </div>\n                <div class="metric-card">\n                    <div class="metric-value">${e.totalPlans}</div>\n                    <div class="metric-label">Plans</div>\n                    <div class="metric-trend trend-${e.trends.plans}">\n                        ${this.getTrendIcon(e.trends.plans)} ${this.getTrendText(e.trends.plans)}\n                    </div>\n                </div>\n                <div class="metric-card">\n                    <div class="metric-value">${e.totalTasks}</div>\n                    <div class="metric-label">Task Groups</div>\n                    <div class="metric-trend trend-${e.trends.tasks}">\n                        ${this.getTrendIcon(e.trends.tasks)} ${this.getTrendText(e.trends.tasks)}\n                    </div>\n                </div>\n                <div class="metric-card">\n                    <div class="metric-value">${e.weeklyAverage.toFixed(1)}</div>\n                    <div class="metric-label">Weekly Avg</div>\n                    <div class="metric-trend trend-${e.trends.overall}">\n                        ${this.getTrendIcon(e.trends.overall)} Overall\n                    </div>\n                </div>\n            </div>\n            <div class="chart-container">\n                <div class="chart-placeholder">\n                    ${this.renderMiniChart(e.chartData)}\n                </div>\n            </div>\n        `)}getTrendIcon(e){switch(e){case"up":return"↗";case"down":return"↘";default:return"→"}}getTrendText(e){switch(e){case"up":return"Trending up";case"down":return"Trending down";default:return"Stable"}}renderMiniChart(e){const t=Math.max(...e.map(e=>e.count),1),r=100/e.length;return`<div style="position: relative; width: 100%; height: 60px;">${e.map((e,n)=>{const i=e.count/t*60;return`<div style="\n                position: absolute;\n                left: ${n*r}%;\n                bottom: 0;\n                width: ${.8*r}%;\n                height: ${i}px;\n                background: #0078d4;\n                border-radius: 2px 2px 0 0;\n            "></div>`}).join("")}</div>`}renderError(e){const t=document.getElementById("widget-container");t&&(t.innerHTML=`<div class="error">${e}</div>`)}renderNoData(){const e=document.getElementById("widget-container");e&&(e.innerHTML='<div class="no-data">No throughput data available.<br>Start using Spec Kit workflows to see metrics here.</div>')}}).initialize().catch(console.error)}},r={};function n(e){var i=r[e];if(void 0!==i)return i.exports;var a=r[e]={exports:{}};return t[e].call(a.exports,a,a.exports,n),a.exports}n.m=t,e=[],n.O=(t,r,i,a)=>{if(!r){var s=1/0;for(d=0;d<e.length;d++){for(var[r,i,a]=e[d],o=!0,l=0;l<r.length;l++)(!1&a||s>=a)&&Object.keys(n.O).every(e=>n.O[e](r[l]))?r.splice(l--,1):(o=!1,a<s&&(s=a));if(o){e.splice(d--,1);var c=i();void 0!==c&&(t=c)}}return t}a=a||0;for(var d=e.length;d>0&&e[d-1][2]>a;d--)e[d]=e[d-1];e[d]=[r,i,a]},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e={652:0};n.O.j=t=>0===e[t];var t=(t,r)=>{var i,a,[s,o,l]=r,c=0;if(s.some(t=>0!==e[t])){for(i in o)n.o(o,i)&&(n.m[i]=o[i]);if(l)var d=l(n)}for(t&&t(r);c<s.length;c++)a=s[c],n.o(e,a)&&e[a]&&e[a][0](),e[a]=0;return n.O(d)},r=self.webpackChunkspec_kit_azure_devops_extension=self.webpackChunkspec_kit_azure_devops_extension||[];r.forEach(t.bind(null,0)),r.push=t.bind(null,r.push.bind(r))})();var i=n.O(void 0,[76],()=>n(758));return n.O(i)})());
//# sourceMappingURL=throughput.js.map