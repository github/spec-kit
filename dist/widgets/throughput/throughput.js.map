{"version":3,"file":"widgets/throughput/throughput.js","mappings":"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","sources":["webpack://spec-kit-azure-devops-extension/webpack/runtime/chunk loaded","webpack://spec-kit-azure-devops-extension/./src/widgets/throughput/throughput.ts","webpack://spec-kit-azure-devops-extension/webpack/bootstrap","webpack://spec-kit-azure-devops-extension/webpack/runtime/define property getters","webpack://spec-kit-azure-devops-extension/webpack/runtime/hasOwnProperty shorthand","webpack://spec-kit-azure-devops-extension/webpack/runtime/make namespace object","webpack://spec-kit-azure-devops-extension/webpack/runtime/jsonp chunk loading","webpack://spec-kit-azure-devops-extension/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","import * as SDK from \"azure-devops-extension-sdk\";\r\nimport { TelemetryService } from \"../../services/telemetry\";\r\n\r\ninterface ThroughputData {\r\n    totalSpecs: number;\r\n    totalPlans: number;\r\n    totalTasks: number;\r\n    weeklyAverage: number;\r\n    trends: {\r\n        specs: 'up' | 'down' | 'neutral';\r\n        plans: 'up' | 'down' | 'neutral';\r\n        tasks: 'up' | 'down' | 'neutral';\r\n        overall: 'up' | 'down' | 'neutral';\r\n    };\r\n    chartData: { date: string; count: number }[];\r\n}\r\n\r\nclass ThroughputWidget {\r\n    private telemetryService: TelemetryService;\r\n    private projectId: string = '';\r\n    private timeframe: string = '30d';\r\n\r\n    constructor() {\r\n        this.telemetryService = new TelemetryService();\r\n    }\r\n\r\n    public async initialize(): Promise<void> {\r\n        await SDK.init();\r\n        await SDK.ready();\r\n\r\n        const webContext = SDK.getWebContext();\r\n        this.projectId = webContext.project?.id || '';\r\n\r\n        await this.loadData();\r\n    }\r\n\r\n    private async loadData(): Promise<void> {\r\n        try {\r\n            const data = await this.getThroughputData();\r\n            this.renderWidget(data);\r\n        } catch (error) {\r\n            this.renderError(`Failed to load throughput data: ${error}`);\r\n        }\r\n    }\r\n\r\n    private async getThroughputData(): Promise<ThroughputData> {\r\n        const metrics = await this.telemetryService.getProjectMetrics(this.projectId);\r\n        const runs = await this.telemetryService.getRecentRuns(this.projectId, 1000);\r\n\r\n        // Calculate throughput for the last 30 days\r\n        const thirtyDaysAgo = new Date();\r\n        thirtyDaysAgo.setDate(thirtyDaysAgo.getDate() - 30);\r\n        \r\n        const recentRuns = runs.filter(run => \r\n            run.timestamp >= thirtyDaysAgo && run.status === 'success'\r\n        );\r\n\r\n        const totalSpecs = recentRuns.filter(run => run.workflow === 'specify').length;\r\n        const totalPlans = recentRuns.filter(run => run.workflow === 'plan').length;\r\n        const totalTasks = recentRuns.filter(run => run.workflow === 'tasks').length;\r\n        \r\n        const weeklyAverage = (totalSpecs + totalPlans + totalTasks) / 4.3; // ~30 days / 7 days\r\n\r\n        // Calculate trends (simplified)\r\n        const trends = this.calculateTrends(recentRuns);\r\n        \r\n        // Generate chart data\r\n        const chartData = this.generateChartData(recentRuns);\r\n\r\n        return {\r\n            totalSpecs,\r\n            totalPlans,\r\n            totalTasks,\r\n            weeklyAverage,\r\n            trends,\r\n            chartData\r\n        };\r\n    }\r\n\r\n    private calculateTrends(runs: any[]): ThroughputData['trends'] {\r\n        // Simplified trend calculation - would be more sophisticated in real implementation\r\n        const midpoint = Math.floor(runs.length / 2);\r\n        const firstHalf = runs.slice(0, midpoint);\r\n        const secondHalf = runs.slice(midpoint);\r\n\r\n        const firstHalfSpecs = firstHalf.filter(run => run.workflow === 'specify').length;\r\n        const secondHalfSpecs = secondHalf.filter(run => run.workflow === 'specify').length;\r\n        \r\n        const firstHalfPlans = firstHalf.filter(run => run.workflow === 'plan').length;\r\n        const secondHalfPlans = secondHalf.filter(run => run.workflow === 'plan').length;\r\n        \r\n        const firstHalfTasks = firstHalf.filter(run => run.workflow === 'tasks').length;\r\n        const secondHalfTasks = secondHalf.filter(run => run.workflow === 'tasks').length;\r\n\r\n        return {\r\n            specs: secondHalfSpecs > firstHalfSpecs ? 'up' : secondHalfSpecs < firstHalfSpecs ? 'down' : 'neutral',\r\n            plans: secondHalfPlans > firstHalfPlans ? 'up' : secondHalfPlans < firstHalfPlans ? 'down' : 'neutral',\r\n            tasks: secondHalfTasks > firstHalfTasks ? 'up' : secondHalfTasks < firstHalfTasks ? 'down' : 'neutral',\r\n            overall: (secondHalfSpecs + secondHalfPlans + secondHalfTasks) > (firstHalfSpecs + firstHalfPlans + firstHalfTasks) ? 'up' : 'down'\r\n        };\r\n    }\r\n\r\n    private generateChartData(runs: any[]): { date: string; count: number }[] {\r\n        const chartData: { date: string; count: number }[] = [];\r\n        const dailyCounts: Record<string, number> = {};\r\n\r\n        // Group runs by date\r\n        runs.forEach(run => {\r\n            const date = run.timestamp.toISOString().split('T')[0];\r\n            dailyCounts[date] = (dailyCounts[date] || 0) + 1;\r\n        });\r\n\r\n        // Generate data for last 7 days\r\n        for (let i = 6; i >= 0; i--) {\r\n            const date = new Date();\r\n            date.setDate(date.getDate() - i);\r\n            const dateStr = date.toISOString().split('T')[0];\r\n            \r\n            chartData.push({\r\n                date: dateStr,\r\n                count: dailyCounts[dateStr] || 0\r\n            });\r\n        }\r\n\r\n        return chartData;\r\n    }\r\n\r\n    private renderWidget(data: ThroughputData): void {\r\n        const container = document.getElementById('widget-container');\r\n        if (!container) return;\r\n\r\n        container.innerHTML = `\r\n            <div class=\"widget-header\">\r\n                <h3 class=\"widget-title\">Spec Throughput</h3>\r\n                <span class=\"widget-timeframe\">Last 30 days</span>\r\n            </div>\r\n            <div class=\"metrics-container\">\r\n                <div class=\"metric-card\">\r\n                    <div class=\"metric-value\">${data.totalSpecs}</div>\r\n                    <div class=\"metric-label\">Specifications</div>\r\n                    <div class=\"metric-trend trend-${data.trends.specs}\">\r\n                        ${this.getTrendIcon(data.trends.specs)} ${this.getTrendText(data.trends.specs)}\r\n                    </div>\r\n                </div>\r\n                <div class=\"metric-card\">\r\n                    <div class=\"metric-value\">${data.totalPlans}</div>\r\n                    <div class=\"metric-label\">Plans</div>\r\n                    <div class=\"metric-trend trend-${data.trends.plans}\">\r\n                        ${this.getTrendIcon(data.trends.plans)} ${this.getTrendText(data.trends.plans)}\r\n                    </div>\r\n                </div>\r\n                <div class=\"metric-card\">\r\n                    <div class=\"metric-value\">${data.totalTasks}</div>\r\n                    <div class=\"metric-label\">Task Groups</div>\r\n                    <div class=\"metric-trend trend-${data.trends.tasks}\">\r\n                        ${this.getTrendIcon(data.trends.tasks)} ${this.getTrendText(data.trends.tasks)}\r\n                    </div>\r\n                </div>\r\n                <div class=\"metric-card\">\r\n                    <div class=\"metric-value\">${data.weeklyAverage.toFixed(1)}</div>\r\n                    <div class=\"metric-label\">Weekly Avg</div>\r\n                    <div class=\"metric-trend trend-${data.trends.overall}\">\r\n                        ${this.getTrendIcon(data.trends.overall)} Overall\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"chart-container\">\r\n                <div class=\"chart-placeholder\">\r\n                    ${this.renderMiniChart(data.chartData)}\r\n                </div>\r\n            </div>\r\n        `;\r\n    }\r\n\r\n    private getTrendIcon(trend: 'up' | 'down' | 'neutral'): string {\r\n        switch (trend) {\r\n            case 'up': return '↗';\r\n            case 'down': return '↘';\r\n            default: return '→';\r\n        }\r\n    }\r\n\r\n    private getTrendText(trend: 'up' | 'down' | 'neutral'): string {\r\n        switch (trend) {\r\n            case 'up': return 'Trending up';\r\n            case 'down': return 'Trending down';\r\n            default: return 'Stable';\r\n        }\r\n    }\r\n\r\n    private renderMiniChart(data: { date: string; count: number }[]): string {\r\n        const maxCount = Math.max(...data.map(d => d.count), 1);\r\n        const barWidth = 100 / data.length;\r\n        \r\n        const bars = data.map((point, index) => {\r\n            const height = (point.count / maxCount) * 60; // 60px max height\r\n            const x = index * barWidth;\r\n            return `<div style=\"\r\n                position: absolute;\r\n                left: ${x}%;\r\n                bottom: 0;\r\n                width: ${barWidth * 0.8}%;\r\n                height: ${height}px;\r\n                background: #0078d4;\r\n                border-radius: 2px 2px 0 0;\r\n            \"></div>`;\r\n        }).join('');\r\n\r\n        return `<div style=\"position: relative; width: 100%; height: 60px;\">${bars}</div>`;\r\n    }\r\n\r\n    private renderError(message: string): void {\r\n        const container = document.getElementById('widget-container');\r\n        if (container) {\r\n            container.innerHTML = `<div class=\"error\">${message}</div>`;\r\n        }\r\n    }\r\n\r\n    private renderNoData(): void {\r\n        const container = document.getElementById('widget-container');\r\n        if (container) {\r\n            container.innerHTML = `<div class=\"no-data\">No throughput data available.<br>Start using Spec Kit workflows to see metrics here.</div>`;\r\n        }\r\n    }\r\n}\r\n\r\n// Initialize the widget\r\nconst widget = new ThroughputWidget();\r\nwidget.initialize().catch(console.error);","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t652: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkspec_kit_azure_devops_extension\"] = self[\"webpackChunkspec_kit_azure_devops_extension\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [76], () => (__webpack_require__(758)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["deferred","constructor","projectId","timeframe","this","telemetryService","TelemetryService","initialize","SDK","init","ready","webContext","getWebContext","project","id","loadData","data","getThroughputData","renderWidget","error","renderError","getProjectMetrics","runs","getRecentRuns","thirtyDaysAgo","Date","setDate","getDate","recentRuns","filter","run","timestamp","status","totalSpecs","workflow","length","totalPlans","totalTasks","weeklyAverage","trends","calculateTrends","chartData","generateChartData","midpoint","Math","floor","firstHalf","slice","secondHalf","firstHalfSpecs","secondHalfSpecs","firstHalfPlans","secondHalfPlans","firstHalfTasks","secondHalfTasks","specs","plans","tasks","overall","dailyCounts","forEach","date","toISOString","split","i","dateStr","push","count","container","document","getElementById","innerHTML","getTrendIcon","getTrendText","toFixed","renderMiniChart","trend","maxCount","max","map","d","barWidth","point","index","height","join","message","renderNoData","catch","console","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","Object","keys","every","key","splice","r","definition","o","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","value","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}