{"version":3,"file":"common.js","mappings":"yNAeA,wCACY,KAAAA,WAAa,CACjBC,QAAS,CACL,6BACA,0BACA,2BACA,mCAEJC,OAAQ,CACJ,sBACA,mCACA,gCACA,mCACA,uCAiVZ,CA7UW,wBAAMC,CAAmBC,GAC5B,IAGI,aADqBC,KAAKC,oBAAoBF,IAChCG,QAClB,CAAE,MAAOC,GAEL,OADAC,QAAQD,MAAM,yCAA0CA,IACjD,CACX,CACJ,CAEO,yBAAMF,CAAoBF,GAG7B,MAAO,CACHG,UAAU,EACVG,oBAAgBC,EAChBC,oBAAgBD,EAChBE,YAAa,GAErB,CAEO,oBAAMC,CAAeV,EAAmBW,GAC3C,IAEI,MAAMC,EAASD,SAAoBV,KAAKY,qBAAqBb,GAGvDc,EAAa,iBAAiBC,KAAKC,cACnCf,KAAKgB,aAAaL,EAAQE,GAGhC,MAAMI,EAAuB,GAG7B,IAAK,MAAMC,KAAclB,KAAKL,WAAWC,QAAS,CAC9C,MAAMuB,QAAgBnB,KAAKoB,kBAAkBF,SACvClB,KAAKqB,QAAQV,EAAQE,EAAYK,EAAYC,GACnDF,EAAWK,KAAKJ,EACpB,CAGA,IAAK,MAAMK,KAAcvB,KAAKL,WAAWE,OAAQ,CAC7C,MAAMsB,QAAgBnB,KAAKwB,kBAAkBD,SACvCvB,KAAKqB,QAAQV,EAAQE,EAAYU,EAAYJ,GACnDF,EAAWK,KAAKC,EACpB,CAWA,MAAO,CACHE,SAAS,EACTC,YAVgB1B,KAAK2B,kBACrBhB,EACAE,EACA,OACA,6BACA,gHAMAA,aACAI,aAGR,CAAE,MAAOd,GACL,MAAO,CACHsB,SAAS,EACTtB,MAAOA,aAAiByB,MAAQzB,EAAM0B,QAAUC,OAAO3B,GAE/D,CACJ,CAEQ,0BAAMS,CAAqBb,GAE/B,MAAO,iBACX,CAEQ,kBAAMiB,CAAaL,EAAgBE,GAEvCT,QAAQ2B,IAAI,mBAAmBlB,mBAA4BF,IAC/D,CAEQ,aAAMU,CAAQV,EAAgBE,EAAoBmB,EAAkBb,GAExEf,QAAQ2B,IAAI,eAAeC,eAAsBnB,IACrD,CAEQ,uBAAMc,CACVhB,EACAsB,EACAC,EACAC,EACAC,GAIA,MAAO,oEADMC,KAAKC,MAAsB,IAAhBD,KAAKE,UAAmB,GAEpD,CAEQ,uBAAMnB,CAAkBY,GA6E5B,MA5E0C,CACtC,6BAA8B,shBAkB9B,0BAA2B,mbAe3B,2BAA4B,0bAe5B,kCAAmC,mtBA2BtBA,IAAa,KAAKA,6BAAoCA,GAC3E,CAEQ,uBAAMR,CAAkBQ,GAyI5B,MAxI0C,CACtC,sBAAuB,unBAoCvB,mCAAoC,0cAyBpC,gCAAiC,scA2BjC,mCAAoC,0pBAuBpC,sCAAuC,onBAwB1BA,IAAa,KAAKA,mCAA0CA,GACjF,CAEO,kBAAMQ,CACTzC,EACAiC,EACAb,EACAsB,GAGArC,QAAQ2B,IAAI,mBAAmBC,mBAA0BS,IAC7D,CAEO,kBAAMC,CAAa3C,EAAmB4C,GAEzC,MAAO,CAAC,GAAGA,eACf,E,0qBC5VJ,IAAIC,EAAgB,SAASC,EAAGC,GAI9B,OAHAF,EAAgBG,OAAOC,gBAClB,CAAEC,UAAW,cAAgBC,OAAS,SAAUL,EAAGC,GAAKD,EAAEI,UAAYH,CAAG,GAC1E,SAAUD,EAAGC,GAAK,IAAK,IAAIK,KAAKL,EAAOC,OAAOK,UAAUC,eAAeC,KAAKR,EAAGK,KAAIN,EAAEM,GAAKL,EAAEK,GAAI,EAC7FP,EAAcC,EAAGC,EAC1B,EAEO,SAASS,EAAUV,EAAGC,GAC3B,GAAiB,mBAANA,GAA0B,OAANA,EAC3B,MAAM,IAAIU,UAAU,uBAAyB1B,OAAOgB,GAAK,iCAE7D,SAASW,IAAOzD,KAAK0D,YAAcb,CAAG,CADtCD,EAAcC,EAAGC,GAEjBD,EAAEO,UAAkB,OAANN,EAAaC,OAAOY,OAAOb,IAAMW,EAAGL,UAAYN,EAAEM,UAAW,IAAIK,EACjF,CAEO,IAAIG,EAAW,WAQpB,OAPAA,EAAWb,OAAOc,QAAU,SAAkBC,GAC1C,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAIb,KADTY,EAAIG,UAAUF,GACOjB,OAAOK,UAAUC,eAAeC,KAAKS,EAAGZ,KAAIW,EAAEX,GAAKY,EAAEZ,IAE9E,OAAOW,CACX,EACOF,EAASQ,MAAMpE,KAAMkE,UAC9B,EAEO,SAASG,EAAON,EAAGO,GACxB,IAAIR,EAAI,CAAC,EACT,IAAK,IAAIX,KAAKY,EAAOhB,OAAOK,UAAUC,eAAeC,KAAKS,EAAGZ,IAAMmB,EAAEC,QAAQpB,GAAK,IAC9EW,EAAEX,GAAKY,EAAEZ,IACb,GAAS,MAALY,GAAqD,mBAAjChB,OAAOyB,sBACtB,KAAIR,EAAI,EAAb,IAAgBb,EAAIJ,OAAOyB,sBAAsBT,GAAIC,EAAIb,EAAEgB,OAAQH,IAC3DM,EAAEC,QAAQpB,EAAEa,IAAM,GAAKjB,OAAOK,UAAUqB,qBAAqBnB,KAAKS,EAAGZ,EAAEa,MACvEF,EAAEX,EAAEa,IAAMD,EAAEZ,EAAEa,IAF4B,CAItD,OAAOF,CACT,CAEO,SAASY,EAAWC,EAAYC,EAAQC,EAAKC,GAClD,IAA2HjC,EAAvHkC,EAAIb,UAAUC,OAAQa,EAAID,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAO/B,OAAOkC,yBAAyBL,EAAQC,GAAOC,EACrH,GAAuB,iBAAZI,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAId,EAAIW,EAAWR,OAAS,EAAGH,GAAK,EAAGA,KAASnB,EAAI8B,EAAWX,MAAIgB,GAAKD,EAAI,EAAIlC,EAAEmC,GAAKD,EAAI,EAAIlC,EAAE+B,EAAQC,EAAKG,GAAKnC,EAAE+B,EAAQC,KAASG,GAChJ,OAAOD,EAAI,GAAKC,GAAKjC,OAAOqC,eAAeR,EAAQC,EAAKG,GAAIA,CAC9D,CAEO,SAASK,EAAQC,EAAYC,GAClC,OAAO,SAAUX,EAAQC,GAAOU,EAAUX,EAAQC,EAAKS,EAAa,CACtE,CAEO,SAASE,EAAaC,EAAMC,EAAcf,EAAYgB,EAAWC,EAAcC,GACpF,SAASC,EAAOC,GAAK,QAAU,IAANA,GAA6B,mBAANA,EAAkB,MAAM,IAAIvC,UAAU,qBAAsB,OAAOuC,CAAG,CAKtH,IAJA,IAGIC,EAHAC,EAAON,EAAUM,KAAMpB,EAAe,WAAToB,EAAoB,MAAiB,WAATA,EAAoB,MAAQ,QACrFrB,GAAUc,GAAgBD,EAAOE,EAAkB,OAAIF,EAAOA,EAAKrC,UAAY,KAC/E8C,EAAaR,IAAiBd,EAAS7B,OAAOkC,yBAAyBL,EAAQe,EAAUQ,MAAQ,CAAC,GAC/FC,GAAO,EACLpC,EAAIW,EAAWR,OAAS,EAAGH,GAAK,EAAGA,IAAK,CAC7C,IAAIqC,EAAU,CAAC,EACf,IAAK,IAAIlD,KAAKwC,EAAWU,EAAQlD,GAAW,WAANA,EAAiB,CAAC,EAAIwC,EAAUxC,GACtE,IAAK,IAAIA,KAAKwC,EAAUW,OAAQD,EAAQC,OAAOnD,GAAKwC,EAAUW,OAAOnD,GACrEkD,EAAQE,eAAiB,SAAUR,GAAK,GAAIK,EAAM,MAAM,IAAI5C,UAAU,0DAA2DqC,EAAkBvE,KAAKwE,EAAOC,GAAK,MAAQ,EAC5K,IAAIS,GAAS,EAAI7B,EAAWX,IAAa,aAATiC,EAAsB,CAAEQ,IAAKP,EAAWO,IAAKC,IAAKR,EAAWQ,KAAQR,EAAWrB,GAAMwB,GACtH,GAAa,aAATJ,EAAqB,CACrB,QAAe,IAAXO,EAAmB,SACvB,GAAe,OAAXA,GAAqC,iBAAXA,EAAqB,MAAM,IAAIhD,UAAU,oBACnEwC,EAAIF,EAAOU,EAAOC,QAAMP,EAAWO,IAAMT,IACzCA,EAAIF,EAAOU,EAAOE,QAAMR,EAAWQ,IAAMV,IACzCA,EAAIF,EAAOU,EAAOG,QAAOf,EAAagB,QAAQZ,EACtD,MACSA,EAAIF,EAAOU,MACH,UAATP,EAAkBL,EAAagB,QAAQZ,GACtCE,EAAWrB,GAAOmB,EAE/B,CACIpB,GAAQ7B,OAAOqC,eAAeR,EAAQe,EAAUQ,KAAMD,GAC1DE,GAAO,CACT,CAEO,SAASS,EAAkBC,EAASlB,EAAcmB,GAEvD,IADA,IAAIC,EAAW9C,UAAUC,OAAS,EACzBH,EAAI,EAAGA,EAAI4B,EAAazB,OAAQH,IACrC+C,EAAQC,EAAWpB,EAAa5B,GAAGV,KAAKwD,EAASC,GAASnB,EAAa5B,GAAGV,KAAKwD,GAEnF,OAAOE,EAAWD,OAAQ,CAC5B,CAEO,SAASE,EAAUC,GACxB,MAAoB,iBAANA,EAAiBA,EAAI,GAAGC,OAAOD,EAC/C,CAEO,SAASE,EAAkBrB,EAAGI,EAAMkB,GAEzC,MADoB,iBAATlB,IAAmBA,EAAOA,EAAK/D,YAAc,IAAI+E,OAAOhB,EAAK/D,YAAa,KAAO,IACrFW,OAAOqC,eAAeW,EAAG,OAAQ,CAAEuB,cAAc,EAAMP,MAAOM,EAAS,GAAGF,OAAOE,EAAQ,IAAKlB,GAAQA,GAC/G,CAEO,SAASoB,EAAWC,EAAaC,GACtC,GAAuB,iBAAZvC,SAAoD,mBAArBA,QAAQwC,SAAyB,OAAOxC,QAAQwC,SAASF,EAAaC,EAClH,CAEO,SAASE,EAAUb,EAASc,EAAYC,EAAGC,GAEhD,OAAO,IAAKD,IAAMA,EAAIE,UAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUnB,GAAS,IAAMoB,EAAKL,EAAUM,KAAKrB,GAAS,CAAE,MAAOzC,GAAK2D,EAAO3D,EAAI,CAAE,CAC1F,SAAS+D,EAAStB,GAAS,IAAMoB,EAAKL,EAAiB,MAAEf,GAAS,CAAE,MAAOzC,GAAK2D,EAAO3D,EAAI,CAAE,CAC7F,SAAS6D,EAAK3B,GAJlB,IAAeO,EAIaP,EAAOJ,KAAO4B,EAAQxB,EAAOO,QAJ1CA,EAIyDP,EAAOO,MAJhDA,aAAiBc,EAAId,EAAQ,IAAIc,EAAE,SAAUG,GAAWA,EAAQjB,EAAQ,IAIjBuB,KAAKJ,EAAWG,EAAW,CAC7GF,GAAML,EAAYA,EAAU1D,MAAM0C,EAASc,GAAc,KAAKQ,OAClE,EACF,CAEO,SAASG,EAAYzB,EAAS0B,GACnC,IAAsGzC,EAAG0C,EAAG3E,EAAG4E,EAA3G1C,EAAI,CAAE2C,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAP9E,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,EAAI,EAAG+E,KAAM,GAAIC,IAAK,IAChG,OAAOJ,EAAI,CAAEN,KAAMW,EAAK,GAAI,MAASA,EAAK,GAAI,OAAUA,EAAK,IAAwB,mBAAXC,SAA0BN,EAAEM,OAAOC,UAAY,WAAa,OAAOjJ,IAAM,GAAI0I,EACvJ,SAASK,EAAK9E,GAAK,OAAO,SAAUiF,GAAK,OACzC,SAAcC,GACV,GAAIpD,EAAG,MAAM,IAAIvC,UAAU,mCAC3B,KAAOkF,IAAMA,EAAI,EAAGS,EAAG,KAAOnD,EAAI,IAAKA,OACnC,GAAID,EAAI,EAAG0C,IAAM3E,EAAY,EAARqF,EAAG,GAASV,EAAU,OAAIU,EAAG,GAAKV,EAAS,SAAO3E,EAAI2E,EAAU,SAAM3E,EAAER,KAAKmF,GAAI,GAAKA,EAAEL,SAAWtE,EAAIA,EAAER,KAAKmF,EAAGU,EAAG,KAAK/C,KAAM,OAAOtC,EAE3J,OADI2E,EAAI,EAAG3E,IAAGqF,EAAK,CAAS,EAARA,EAAG,GAAQrF,EAAEiD,QACzBoC,EAAG,IACP,KAAK,EAAG,KAAK,EAAGrF,EAAIqF,EAAI,MACxB,KAAK,EAAc,OAAXnD,EAAE2C,QAAgB,CAAE5B,MAAOoC,EAAG,GAAI/C,MAAM,GAChD,KAAK,EAAGJ,EAAE2C,QAASF,EAAIU,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKnD,EAAE8C,IAAIM,MAAOpD,EAAE6C,KAAKO,MAAO,SACxC,QACI,MAAkBtF,GAAZA,EAAIkC,EAAE6C,MAAY1E,OAAS,GAAKL,EAAEA,EAAEK,OAAS,KAAkB,IAAVgF,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEnD,EAAI,EAAG,QAAU,CAC3G,GAAc,IAAVmD,EAAG,MAAcrF,GAAMqF,EAAG,GAAKrF,EAAE,IAAMqF,EAAG,GAAKrF,EAAE,IAAM,CAAEkC,EAAE2C,MAAQQ,EAAG,GAAI,KAAO,CACrF,GAAc,IAAVA,EAAG,IAAYnD,EAAE2C,MAAQ7E,EAAE,GAAI,CAAEkC,EAAE2C,MAAQ7E,EAAE,GAAIA,EAAIqF,EAAI,KAAO,CACpE,GAAIrF,GAAKkC,EAAE2C,MAAQ7E,EAAE,GAAI,CAAEkC,EAAE2C,MAAQ7E,EAAE,GAAIkC,EAAE8C,IAAIxH,KAAK6H,GAAK,KAAO,CAC9DrF,EAAE,IAAIkC,EAAE8C,IAAIM,MAChBpD,EAAE6C,KAAKO,MAAO,SAEtBD,EAAKX,EAAKlF,KAAKwD,EAASd,EAC5B,CAAE,MAAO1B,GAAK6E,EAAK,CAAC,EAAG7E,GAAImE,EAAI,CAAG,CAAE,QAAU1C,EAAIjC,EAAI,CAAG,CACzD,GAAY,EAARqF,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAEpC,MAAOoC,EAAG,GAAKA,EAAG,QAAK,EAAQ/C,MAAM,EAC9E,CAtBgD+B,CAAK,CAAClE,EAAGiF,GAAK,CAAG,CAuBnE,CAEO,IAAIG,EAAkBtG,OAAOY,OAAS,SAAU2F,EAAGC,EAAGC,EAAGC,QACnDnJ,IAAPmJ,IAAkBA,EAAKD,GAC3B,IAAI1E,EAAO/B,OAAOkC,yBAAyBsE,EAAGC,GACzC1E,KAAS,QAASA,GAAQyE,EAAEG,WAAa5E,EAAK6E,UAAY7E,EAAKwC,gBAChExC,EAAO,CAAE8E,YAAY,EAAMnD,IAAK,WAAa,OAAO8C,EAAEC,EAAI,IAE9DzG,OAAOqC,eAAekE,EAAGG,EAAI3E,EAC9B,EAAI,SAAUwE,EAAGC,EAAGC,EAAGC,QACXnJ,IAAPmJ,IAAkBA,EAAKD,GAC3BF,EAAEG,GAAMF,EAAEC,EACX,EAEM,SAASK,EAAaN,EAAGD,GAC9B,IAAK,IAAInG,KAAKoG,EAAa,YAANpG,GAAoBJ,OAAOK,UAAUC,eAAeC,KAAKgG,EAAGnG,IAAIkG,EAAgBC,EAAGC,EAAGpG,EAC7G,CAEO,SAAS2G,EAASR,GACvB,IAAIvF,EAAsB,mBAAXiF,QAAyBA,OAAOC,SAAUM,EAAIxF,GAAKuF,EAAEvF,GAAIC,EAAI,EAC5E,GAAIuF,EAAG,OAAOA,EAAEjG,KAAKgG,GACrB,GAAIA,GAAyB,iBAAbA,EAAEnF,OAAqB,MAAO,CAC1CiE,KAAM,WAEF,OADIkB,GAAKtF,GAAKsF,EAAEnF,SAAQmF,OAAI,GACrB,CAAEvC,MAAOuC,GAAKA,EAAEtF,KAAMoC,MAAOkD,EACxC,GAEJ,MAAM,IAAI9F,UAAUO,EAAI,0BAA4B,kCACtD,CAEO,SAASgG,EAAOT,EAAGrF,GACxB,IAAIsF,EAAsB,mBAAXP,QAAyBM,EAAEN,OAAOC,UACjD,IAAKM,EAAG,OAAOD,EACf,IAAmBtE,EAAYV,EAA3BN,EAAIuF,EAAEjG,KAAKgG,GAAOU,EAAK,GAC3B,IACI,WAAc,IAAN/F,GAAgBA,KAAM,MAAQe,EAAIhB,EAAEoE,QAAQhC,MAAM4D,EAAG1I,KAAK0D,EAAE+B,MACxE,CACA,MAAO5G,GAASmE,EAAI,CAAEnE,MAAOA,EAAS,CACtC,QACI,IACQ6E,IAAMA,EAAEoB,OAASmD,EAAIvF,EAAU,SAAIuF,EAAEjG,KAAKU,EAClD,CACA,QAAU,GAAIM,EAAG,MAAMA,EAAEnE,KAAO,CACpC,CACA,OAAO6J,CACT,CAGO,SAASC,IACd,IAAK,IAAID,EAAK,GAAIhG,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAC3CgG,EAAKA,EAAG7C,OAAO4C,EAAO7F,UAAUF,KACpC,OAAOgG,CACT,CAGO,SAASE,IACd,IAAK,IAAInG,EAAI,EAAGC,EAAI,EAAGmG,EAAKjG,UAAUC,OAAQH,EAAImG,EAAInG,IAAKD,GAAKG,UAAUF,GAAGG,OACxE,IAAIa,EAAI9B,MAAMa,GAAIyF,EAAI,EAA3B,IAA8BxF,EAAI,EAAGA,EAAImG,EAAInG,IACzC,IAAK,IAAIoG,EAAIlG,UAAUF,GAAIqG,EAAI,EAAGC,EAAKF,EAAEjG,OAAQkG,EAAIC,EAAID,IAAKb,IAC1DxE,EAAEwE,GAAKY,EAAEC,GACjB,OAAOrF,CACT,CAEO,SAASuF,EAAcC,EAAIC,EAAMC,GACtC,GAAIA,GAA6B,IAArBxG,UAAUC,OAAc,IAAK,IAA4B6F,EAAxBhG,EAAI,EAAG2G,EAAIF,EAAKtG,OAAYH,EAAI2G,EAAG3G,KACxEgG,GAAQhG,KAAKyG,IACRT,IAAIA,EAAK9G,MAAME,UAAUwH,MAAMtH,KAAKmH,EAAM,EAAGzG,IAClDgG,EAAGhG,GAAKyG,EAAKzG,IAGrB,OAAOwG,EAAGrD,OAAO6C,GAAM9G,MAAME,UAAUwH,MAAMtH,KAAKmH,GACpD,CAEO,SAASI,EAAQ3B,GACtB,OAAOlJ,gBAAgB6K,GAAW7K,KAAKkJ,EAAIA,EAAGlJ,MAAQ,IAAI6K,EAAQ3B,EACpE,CAEO,SAAS4B,EAAiBhE,EAASc,EAAYE,GACpD,IAAKkB,OAAO+B,cAAe,MAAM,IAAIvH,UAAU,wCAC/C,IAAoDQ,EAAhD0E,EAAIZ,EAAU1D,MAAM0C,EAASc,GAAc,IAAQoD,EAAI,GAC3D,OAAOhH,EAAI,CAAC,EAAG+E,EAAK,QAASA,EAAK,SAAUA,EAAK,SACjD,SAAqBhD,GAAK,OAAO,SAAUmD,GAAK,OAAOnB,QAAQC,QAAQkB,GAAGZ,KAAKvC,EAAGkC,EAAS,CAAG,GADrBjE,EAAEgF,OAAO+B,eAAiB,WAAc,OAAO/K,IAAM,EAAGgE,EAEjI,SAAS+E,EAAK9E,EAAG8B,GAAS2C,EAAEzE,KAAMD,EAAEC,GAAK,SAAUiF,GAAK,OAAO,IAAInB,QAAQ,SAAUqC,EAAGtH,GAAKkI,EAAE1J,KAAK,CAAC2C,EAAGiF,EAAGkB,EAAGtH,IAAM,GAAKmI,EAAOhH,EAAGiF,EAAI,EAAI,EAAOnD,IAAG/B,EAAEC,GAAK8B,EAAE/B,EAAEC,KAAO,CACvK,SAASgH,EAAOhH,EAAGiF,GAAK,KACVlE,EADqB0D,EAAEzE,GAAGiF,IACnBnC,iBAAiB8D,EAAU9C,QAAQC,QAAQhD,EAAE+B,MAAMmC,GAAGZ,KAAK4C,EAASjD,GAAUkD,EAAOH,EAAE,GAAG,GAAIhG,EADtE,CAAE,MAAOV,GAAK6G,EAAOH,EAAE,GAAG,GAAI1G,EAAI,CAC/E,IAAcU,CADmE,CAEjF,SAASkG,EAAQnE,GAASkE,EAAO,OAAQlE,EAAQ,CACjD,SAASkB,EAAOlB,GAASkE,EAAO,QAASlE,EAAQ,CACjD,SAASoE,EAAOpF,EAAGmD,GAASnD,EAAEmD,GAAI8B,EAAEI,QAASJ,EAAE7G,QAAQ8G,EAAOD,EAAE,GAAG,GAAIA,EAAE,GAAG,GAAK,CACnF,CAEO,SAASK,EAAiB/B,GAC/B,IAAItF,EAAGb,EACP,OAAOa,EAAI,CAAC,EAAG+E,EAAK,QAASA,EAAK,QAAS,SAAUzE,GAAK,MAAMA,CAAG,GAAIyE,EAAK,UAAW/E,EAAEgF,OAAOC,UAAY,WAAc,OAAOjJ,IAAM,EAAGgE,EAC1I,SAAS+E,EAAK9E,EAAG8B,GAAK/B,EAAEC,GAAKqF,EAAErF,GAAK,SAAUiF,GAAK,OAAQ/F,GAAKA,GAAK,CAAE4D,MAAO8D,EAAQvB,EAAErF,GAAGiF,IAAK9C,MAAM,GAAUL,EAAIA,EAAEmD,GAAKA,CAAG,EAAInD,CAAG,CACvI,CAEO,SAASuF,EAAchC,GAC5B,IAAKN,OAAO+B,cAAe,MAAM,IAAIvH,UAAU,wCAC/C,IAAiCQ,EAA7BuF,EAAID,EAAEN,OAAO+B,eACjB,OAAOxB,EAAIA,EAAEjG,KAAKgG,IAAMA,EAAqCQ,EAASR,GAA2BtF,EAAI,CAAC,EAAG+E,EAAK,QAASA,EAAK,SAAUA,EAAK,UAAW/E,EAAEgF,OAAO+B,eAAiB,WAAc,OAAO/K,IAAM,EAAGgE,GAC9M,SAAS+E,EAAK9E,GAAKD,EAAEC,GAAKqF,EAAErF,IAAM,SAAUiF,GAAK,OAAO,IAAInB,QAAQ,SAAUC,EAASC,IACvF,SAAgBD,EAASC,EAAQpF,EAAGqG,GAAKnB,QAAQC,QAAQkB,GAAGZ,KAAK,SAASY,GAAKlB,EAAQ,CAAEjB,MAAOmC,EAAG9C,KAAMvD,GAAM,EAAGoF,EAAS,CADbkD,CAAOnD,EAASC,GAA7BiB,EAAII,EAAErF,GAAGiF,IAA8B9C,KAAM8C,EAAEnC,MAAQ,EAAI,CAAG,CAEjK,CAEO,SAASwE,EAAqBC,EAAQC,GAE3C,OADI1I,OAAOqC,eAAkBrC,OAAOqC,eAAeoG,EAAQ,MAAO,CAAEzE,MAAO0E,IAAiBD,EAAOC,IAAMA,EAClGD,CACT,CAEA,IAAIE,EAAqB3I,OAAOY,OAAS,SAAU2F,EAAGJ,GACpDnG,OAAOqC,eAAekE,EAAG,UAAW,CAAEM,YAAY,EAAM7C,MAAOmC,GAChE,EAAI,SAASI,EAAGJ,GACfI,EAAW,QAAIJ,CACjB,EAEO,SAASyC,EAAaC,GAC3B,GAAIA,GAAOA,EAAIlC,WAAY,OAAOkC,EAClC,IAAIpF,EAAS,CAAC,EACd,GAAW,MAAPoF,EAAa,IAAK,IAAIpC,KAAKoC,EAAe,YAANpC,GAAmBzG,OAAOK,UAAUC,eAAeC,KAAKsI,EAAKpC,IAAIH,EAAgB7C,EAAQoF,EAAKpC,GAEtI,OADAkC,EAAmBlF,EAAQoF,GACpBpF,CACT,CAEO,SAASqF,EAAgBD,GAC9B,OAAQA,GAAOA,EAAIlC,WAAckC,EAAM,CAAEE,QAASF,EACpD,CAEO,SAASG,EAAuBC,EAAUC,EAAOhG,EAAMF,GAC5D,GAAa,MAATE,IAAiBF,EAAG,MAAM,IAAIvC,UAAU,iDAC5C,GAAqB,mBAAVyI,EAAuBD,IAAaC,IAAUlG,GAAKkG,EAAMC,IAAIF,GAAW,MAAM,IAAIxI,UAAU,4EACvG,MAAgB,MAATyC,EAAeF,EAAa,MAATE,EAAeF,EAAEzC,KAAK0I,GAAYjG,EAAIA,EAAEgB,MAAQkF,EAAMxF,IAAIuF,EACtF,CAEO,SAASG,EAAuBH,EAAUC,EAAOlF,EAAOd,EAAMF,GACnE,GAAa,MAATE,EAAc,MAAM,IAAIzC,UAAU,kCACtC,GAAa,MAATyC,IAAiBF,EAAG,MAAM,IAAIvC,UAAU,iDAC5C,GAAqB,mBAAVyI,EAAuBD,IAAaC,IAAUlG,GAAKkG,EAAMC,IAAIF,GAAW,MAAM,IAAIxI,UAAU,2EACvG,MAAiB,MAATyC,EAAeF,EAAEzC,KAAK0I,EAAUjF,GAAShB,EAAIA,EAAEgB,MAAQA,EAAQkF,EAAMvF,IAAIsF,EAAUjF,GAASA,CACtG,CAEO,SAASqF,EAAsBH,EAAOD,GAC3C,GAAiB,OAAbA,GAA0C,iBAAbA,GAA6C,mBAAbA,EAA0B,MAAM,IAAIxI,UAAU,0CAC/G,MAAwB,mBAAVyI,EAAuBD,IAAaC,EAAQA,EAAMC,IAAIF,EACtE,CAEO,SAASK,EAAwBC,EAAKvF,EAAOwF,GAClD,GAAIxF,QAAoC,CACtC,GAAqB,iBAAVA,GAAuC,mBAAVA,EAAsB,MAAM,IAAIvD,UAAU,oBAClF,IAAIgJ,EAASC,EACb,GAAIF,EAAO,CACT,IAAKvD,OAAO0D,aAAc,MAAM,IAAIlJ,UAAU,uCAC9CgJ,EAAUzF,EAAMiC,OAAO0D,aACzB,CACA,QAAgB,IAAZF,EAAoB,CACtB,IAAKxD,OAAOwD,QAAS,MAAM,IAAIhJ,UAAU,kCACzCgJ,EAAUzF,EAAMiC,OAAOwD,SACnBD,IAAOE,EAAQD,EACrB,CACA,GAAuB,mBAAZA,EAAwB,MAAM,IAAIhJ,UAAU,0BACnDiJ,IAAOD,EAAU,WAAa,IAAMC,EAAMnJ,KAAKtD,KAAO,CAAE,MAAOsE,GAAK,OAAOyD,QAAQE,OAAO3D,EAAI,CAAE,GACpGgI,EAAIK,MAAMrL,KAAK,CAAEyF,MAAOA,EAAOyF,QAASA,EAASD,MAAOA,GAC1D,MACSA,GACPD,EAAIK,MAAMrL,KAAK,CAAEiL,OAAO,IAE1B,OAAOxF,CACT,CAEA,IAAI6F,EAA8C,mBAApBC,gBAAiCA,gBAAkB,SAAU1M,EAAO2M,EAAYjL,GAC5G,IAAIyC,EAAI,IAAI1C,MAAMC,GAClB,OAAOyC,EAAE6B,KAAO,kBAAmB7B,EAAEnE,MAAQA,EAAOmE,EAAEwI,WAAaA,EAAYxI,CACjF,EAEO,SAASyI,EAAmBT,GACjC,SAASU,EAAK1I,GACZgI,EAAInM,MAAQmM,EAAIW,SAAW,IAAIL,EAAiBtI,EAAGgI,EAAInM,MAAO,4CAA8CmE,EAC5GgI,EAAIW,UAAW,CACjB,CAcA,OAbA,SAAS7E,IACP,KAAOkE,EAAIK,MAAMxI,QAAQ,CACvB,IAAI+I,EAAMZ,EAAIK,MAAMvD,MACpB,IACE,IAAI5C,EAAS0G,EAAIV,SAAWU,EAAIV,QAAQlJ,KAAK4J,EAAInG,OACjD,GAAImG,EAAIX,MAAO,OAAOxE,QAAQC,QAAQxB,GAAQ8B,KAAKF,EAAM,SAAS9D,GAAc,OAAT0I,EAAK1I,GAAW8D,GAAQ,EACjG,CACA,MAAO9D,GACH0I,EAAK1I,EACT,CACF,CACA,GAAIgI,EAAIW,SAAU,MAAMX,EAAInM,KAC9B,CACOiI,EACT,CAEA,SACE7E,YACAK,WACAS,SACAK,aACAW,UACAkC,aACAI,YACAY,cACAc,kBACAQ,eACAC,WACAC,SACAE,WACAC,iBACAK,gBACAM,UACAC,mBACAO,mBACAC,gBACAC,uBACAI,eACAE,kBACAE,yBACAI,yBACAC,wBACAC,0BACAU,qB,gGC/VF,iCACY,KAAAI,gBAAgD,IAAIC,GA0JhE,CAxJW,2BAAMC,CAAsBtN,GAE/B,GAAIC,KAAKmN,gBAAgBjB,IAAInM,GACzB,OAAOC,KAAKmN,gBAAgB1G,IAAI1G,GAIpC,MAAMuN,QAAoBtN,KAAKuN,wBAAwBxN,GAGvD,OAFAC,KAAKmN,gBAAgBzG,IAAI3G,EAAWuN,GAE7BA,CACX,CAEQ,6BAAMC,CAAwBxN,GAElC,MAAO,CACH,CACIyN,GAAI,sBACJrH,KAAM,eACNsH,QAAS,4BACTC,MAAO,QACPC,eAAgB,GAChBC,WAAW,EACXC,UAAU,EACVC,YAAa,IAAIhN,KAAK,cACtBiN,aAAc,IAAIjN,KAAK,eAE3B,CACI0M,GAAI,4BACJrH,KAAM,eACNsH,QAAS,uCACTC,MAAO,QACPM,OAAQ,UACRL,eAAgB,GAChBC,WAAW,EACXC,UAAU,EACVC,YAAa,IAAIhN,KAAK,eAGlC,CAEO,oBAAMmN,CAAeC,GACxB,MAAMC,EAAYrN,KAAKC,MAEvB,IACI,MAAMqN,QAAmBpO,KAAKqO,kBAAkBH,GAChD,IAAKE,EACD,MAAM,IAAIxM,MAAM,wBAIpB,MAAM4E,QAAexG,KAAKsO,aAAaF,GACjCG,EAAUzN,KAAKC,MAAQoN,EAE7B,MAAO,CACH1M,SAAS,EACTiM,MAAOlH,EAAOkH,MACda,UAGR,CAAE,MAAOpO,GACL,MAAO,CACHsB,SAAS,EACTtB,MAAOA,aAAiByB,MAAQzB,EAAM0B,QAAUC,OAAO3B,GAE/D,CACJ,CAEQ,uBAAMkO,CAAkBH,GAE5B,MAAO,CACHV,GAAIU,EACJ/H,KAAM,kBACNsH,QAAS,4BACTC,MAAO,QACPE,WAAW,EACXC,UAAU,EACVC,YAAa,IAAIhN,KAEzB,CAEQ,kBAAMwN,CAAaF,GAEvB,MAAO,CACHV,MAAOU,EAAWV,MAClBc,SAAU,kBAElB,CAEO,0BAAMC,CAAqB1O,EAAmBmO,GACjD,MAAMZ,QAAoBtN,KAAKqN,sBAAsBtN,GAGrDuN,EAAYoB,QAAQC,IAChBA,EAAKf,UAAYe,EAAKnB,KAAOU,IAIjC9N,QAAQ2B,IAAI,qCAAqCmM,iBAA4BnO,KAG7EC,KAAKmN,gBAAgBzG,IAAI3G,EAAWuN,EACxC,CAEO,mBAAMsB,CACTV,EACAW,EACAC,GAUA,MAAMV,QAAmBpO,KAAKqO,kBAAkBH,GAChD,IAAKE,EACD,MAAM,IAAIxM,MAAM,4BAKpB,MAAMmN,EAAc1M,KAAK2M,KAAKH,EAAO1K,OAAS,GACxC8K,EAAe5M,KAAK2M,KAAqB,IAAhB3M,KAAKE,SAAkB,KAEtD,MAAO,CACHiM,SAAU,qBAAqBK,EAAOK,UAAU,EAAG,SACnDC,KAAMnP,KAAKoP,cAAchB,EAAWV,MAAOqB,EAAaE,GACxDI,OAAQ,CACJC,MAAOP,EACPQ,OAAQN,GAGpB,CAEQ,aAAAG,CAAc1B,EAAeqB,EAAqBE,GAEtD,MAAMO,EAA6D,CAC/D,QAAS,CAAEF,MAAO,IAAO,IAAMC,OAAQ,IAAO,KAC9C,gBAAiB,CAAED,MAAO,KAAcC,OAAQ,MAChD,WAAY,CAAED,MAAO,KAAQ,IAAMC,OAAQ,QAGzCE,EAAeD,EAAQ9B,IAAU8B,EAAQ,SAC/C,OAAQT,EAAcU,EAAaH,MAAUL,EAAeQ,EAAaF,MAC7E,CAEO,UAAAG,GACH1P,KAAKmN,gBAAgBwC,OACzB,E,sGCxHJ,uCACY,KAAAC,aAA4C,IAAIxC,IAChD,KAAAyC,UAAwC,IAAIzC,GAwQxD,CAtQW,yBAAM0C,CACT/P,EACAgQ,GAEA,MAAMC,EAAQhQ,KAAKiQ,gBACbC,EAAmB,IAClBH,EACHvC,GAAIwC,EACJG,UAAW,IAAIrP,KACfsP,OAAQ,WAINC,EAAcrQ,KAAK6P,UAAUpJ,IAAI1G,IAAc,GAgBrD,OAfAsQ,EAAYzJ,QAAQsJ,GACpBlQ,KAAK6P,UAAUnJ,IAAI3G,EAAWsQ,EAAYzF,MAAM,EAAG,YAG7C5K,KAAKsQ,iBAAiB,CACxBN,QACAO,OAAQ,mBACRC,QAAS,CAAEC,SAAUV,EAAYU,SAAUC,WAAYX,EAAYW,YACnEC,aAAc3Q,KAAK4Q,mBACnB7Q,cAIJK,QAAQ2B,IAAI,4BAA4BiO,KAEjCA,CACX,CAEO,8BAAMa,CACTb,EACAjQ,EACAyG,GASA,MAAM6J,EAAcrQ,KAAK6P,UAAUpJ,IAAI1G,IAAc,GAC/C+Q,EAAWT,EAAYU,UAAU/L,GAAKA,EAAEwI,KAAOwC,GAEjDc,GAAY,IACZT,EAAYS,GAAY,IACjBT,EAAYS,GACfV,OAAQ5J,EAAO4J,OACfY,SAAUxK,EAAOwK,SACjB7B,KAAM3I,EAAO2I,KACbE,OAAQ7I,EAAO6I,OACf4B,aAAczK,EAAOyK,aACrBC,UAAW1K,EAAO0K,WAGtBlR,KAAK6P,UAAUnJ,IAAI3G,EAAWsQ,UAI5BrQ,KAAKsQ,iBAAiB,CACxBN,QACAO,OAAQ,qBACRC,QAAShK,EACTmK,aAAc3Q,KAAK4Q,mBACnB7Q,cAIJC,KAAK4P,aAAauB,OAAOpR,GAEzBK,QAAQ2B,IAAI,iCAAiCiO,IACjD,CAEO,uBAAMoB,CAAkBrR,GAE3B,GAAIC,KAAK4P,aAAa1D,IAAInM,GACtB,OAAOC,KAAK4P,aAAanJ,IAAI1G,GAGjC,MAAMsR,QAAarR,KAAKsR,cAAcvR,EAAW,KAC3CwR,EAAUvR,KAAKwR,iBAAiBH,GAGtC,OADArR,KAAK4P,aAAalJ,IAAI3G,EAAWwR,GAC1BA,CACX,CAEQ,gBAAAC,CAAiBH,GACrB,MAAMI,EAAiBJ,EAAKK,OAAO1M,GAAkB,YAAbA,EAAEoL,QACpCuB,EAAYN,EAAKlN,OACjByN,EAAcD,EAAY,EAAIF,EAAetN,OAASwN,EAAY,EAGlEE,EAAYJ,EAAeK,OAAO,CAACC,EAAK/M,IAAM+M,GAAO/M,EAAEmK,MAAQ,GAAI,GAgCzE,MAAO,CACHwC,YACAC,cACAI,QAlCYP,EAAetN,OAAS,EAAI0N,EAAYJ,EAAetN,OAAS,EAmC5E8N,YAhCgBR,EAAetN,OAAS,EACtCsN,EAAeK,OAAO,CAACC,EAAK/M,IAAM+M,GAAO/M,EAAEgM,UAAY,GAAI,GAAKS,EAAetN,OAC/E,EA+BF+N,kBA5BsB,CACtBC,QAASd,EAAKK,OAAO1M,GAAoB,YAAfA,EAAEyL,UAAwBtM,OACpDiO,KAAMf,EAAKK,OAAO1M,GAAoB,SAAfA,EAAEyL,UAAqBtM,OAC9CkO,MAAOhB,EAAKK,OAAO1M,GAAoB,UAAfA,EAAEyL,UAAsBtM,QA0BhDmO,cAAe,CACXC,MAAOV,EACPW,WAxBe,CACnBL,QAASV,EAAeC,OAAO1M,GAAoB,YAAfA,EAAEyL,UAAwBqB,OAAO,CAACC,EAAK/M,IAAM+M,GAAO/M,EAAEmK,MAAQ,GAAI,GACtGiD,KAAMX,EAAeC,OAAO1M,GAAoB,SAAfA,EAAEyL,UAAqBqB,OAAO,CAACC,EAAK/M,IAAM+M,GAAO/M,EAAEmK,MAAQ,GAAI,GAChGkD,MAAOZ,EAAeC,OAAO1M,GAAoB,UAAfA,EAAEyL,UAAsBqB,OAAO,CAACC,EAAK/M,IAAM+M,GAAO/M,EAAEmK,MAAQ,GAAI,IAsB9FsD,QAlBYzS,KAAK0S,sBAAsBjB,IAoB3CkB,gBAjBoB,CACpBC,kBAAmB,GACnBC,wBAAyB,GACzBC,qBAAsB,IAgB9B,CAEQ,qBAAAJ,CAAsBrB,GAC1B,MAAM0B,EAAsC,CAAC,EAS7C,OAPA1B,EAAK3C,QAAQwB,IACT,GAAIA,EAAIf,KAAM,CACV,MAAM6D,EAAQ9C,EAAIC,UAAU8C,cAAcrI,MAAM,EAAG,GACnDmI,EAAYC,IAAUD,EAAYC,IAAU,GAAK9C,EAAIf,IACzD,IAGGpM,OAAOmQ,QAAQH,GACjBI,IAAI,EAAEH,EAAO7D,MAAU,CAAG6D,QAAO7D,UACjCiE,KAAK,CAAChJ,EAAGtH,IAAMsH,EAAE4I,MAAMK,cAAcvQ,EAAEkQ,OAChD,CAEO,mBAAM1B,CAAcvR,EAAmBuT,EAAgB,IAC1D,MAAMC,EAASvT,KAAK6P,UAAUpJ,IAAI1G,GAClC,GAAIwT,EACA,OAAOA,EAAO3I,MAAM,EAAG0I,GAK3B,MAAME,EAA0B,CAC5B,CACIhG,GAAI,QACJ2C,UAAW,IAAIrP,KAAKA,KAAKC,MAAQ,MACjC0P,SAAU,UACVC,WAAY,MACZ+C,cAAe,6BACfrD,OAAQ,UACRY,SAAU,KACV7B,KAAM,IACNE,OAAQ,CAAEC,MAAO,KAAMC,OAAQ,KAC/BmE,SAAU,SAEd,CACIlG,GAAI,QACJ2C,UAAW,IAAIrP,KAAKA,KAAKC,MAAQ,MACjC0P,SAAU,OACVC,WAAY,MACZ+C,cAAe,4BACfrD,OAAQ,UACRY,SAAU,KACV7B,KAAM,IACNE,OAAQ,CAAEC,MAAO,IAAKC,OAAQ,KAC9BmE,SAAU,SAEd,CACIlG,GAAI,QACJ2C,UAAW,IAAIrP,KAAKA,KAAKC,MAAQ,OACjC0P,SAAU,QACVC,WAAY,MACZ+C,cAAe,4BACfrD,OAAQ,SACRY,SAAU,IACVC,aAAc,yBACdyC,SAAU,UAKlB,OADA1T,KAAK6P,UAAUnJ,IAAI3G,EAAWyT,GACvBA,EAAS5I,MAAM,EAAG0I,EAC7B,CAEO,mBAAMK,CAAc3D,GAEvB,IAAK,MAAMqB,KAAQrR,KAAK6P,UAAU+D,SAAU,CACxC,MAAM1D,EAAMmB,EAAKwC,KAAK7O,GAAKA,EAAEwI,KAAOwC,GACpC,GAAIE,EAAK,OAAOA,CACpB,CAGA,OAAO,IACX,CAEQ,sBAAMI,CAAiBwD,GAC3B,MAAMC,EAAyB,IACxBD,EACHtG,GAAIxN,KAAKgU,kBACT7D,UAAW,IAAIrP,MAInBV,QAAQ2B,IAAI,eAAgBgS,EAChC,CAEQ,sBAAMnD,GAEV,MAAO,iBACX,CAEQ,aAAAX,GACJ,MAAO,OAAOnP,KAAKC,SAASsB,KAAKE,SAAS0R,SAAS,IAAIC,OAAO,EAAG,IACrE,CAEQ,eAAAF,GACJ,MAAO,SAASlT,KAAKC,SAASsB,KAAKE,SAAS0R,SAAS,IAAIC,OAAO,EAAG,IACvE,CAEO,mBAAMC,CAAcpU,EAAmBqU,GAC1C,MAAM7C,QAAgBvR,KAAKoR,kBAAkBrR,GACvCsR,QAAarR,KAAKsR,cAAcvR,EAAW,KAEjD,GAAe,SAAXqU,EACA,OAAOC,KAAKC,UAAU,CAAE/C,UAASF,QAAQ,KAAM,GAC5C,CAEH,IAAIkD,EAAM,8DAIV,OAHAlD,EAAK3C,QAAQwB,IACTqE,GAAO,GAAGrE,EAAIC,UAAU8C,iBAAiB/C,EAAIO,YAAYP,EAAIQ,cAAcR,EAAIE,UAAUF,EAAIc,UAAY,MAAMd,EAAIf,MAAQ,MAAMe,EAAIb,OAAS,GAAGa,EAAIb,OAAOC,SAASY,EAAIb,OAAOE,SAAW,SAExLgF,CACX,CACJ,CAEO,UAAA7E,GACH1P,KAAK4P,aAAaD,QAClB3P,KAAK6P,UAAUF,OACnB,E,gBC/TJ,UAAO,CAAC,EAAW,QAAU,EAAF,SAAa6E,EAASC,GAAS,aAEtD,IAAIC,EAAiBC,SAAS,cAAe,IACzCC,EAAiBC,OAAOC,kBAAoB,iBAgC5CC,EAAmC,WACnC,SAASA,IACL/U,KAAKgV,QAAU,CAAC,CACpB,CAoCA,OA7BAD,EAAkB3R,UAAU6R,SAAW,SAAUC,EAAYC,GACzDnV,KAAKgV,QAAQE,GAAcC,CAC/B,EAMAJ,EAAkB3R,UAAUgS,WAAa,SAAUF,UACxClV,KAAKgV,QAAQE,EACxB,EAOAH,EAAkB3R,UAAUiS,YAAc,SAAUH,EAAYI,GAC5D,IAAIH,EAAWnV,KAAKgV,QAAQE,GAC5B,GAAKC,EAGL,MAAwB,mBAAbA,EACAA,EAASG,GAGTH,CAEf,EACOJ,CACX,CAxCsC,GA0ClCQ,EAAgB,EAKhBC,EAA4B,WAC5B,SAASA,EAAWC,EAAcC,GAC9B1V,KAAK2V,SAAW,CAAC,EACjB3V,KAAK4V,cAAgB,EACrB5V,KAAK6V,YAAc,EACnB7V,KAAK8V,eAAiB,CAAC,EACvB9V,KAAKyV,aAAeA,EACpBzV,KAAK0V,aAAeA,EACpB1V,KAAK+V,SAAW,IAAIhB,EACpB/U,KAAKgW,UAAYT,IACZvV,KAAK0V,eACN1V,KAAKiW,eAnFN5T,KAAKC,MAAOD,KAAKE,UAAYqS,EAAiBF,GAAmBA,GAAgBT,SAAS,IAC7F5R,KAAKC,MAAOD,KAAKE,UAAYqS,EAAiBF,GAAmBA,GAAgBT,SAAS,IAoF9F,CA8UA,OAxUAuB,EAAWpS,UAAU8S,kBAAoB,WACrC,OAAOlW,KAAK+V,QAChB,EAUAP,EAAWpS,UAAU+S,mBAAqB,SAAUC,EAAYlB,EAAYmB,EAAQC,EAAqBC,GACrG,OAAO9B,EAAM9M,UAAU3H,UAAM,OAAQ,EAAQ,WACzC,IAAI6B,EAAS2U,EACTC,EAAQzW,KACZ,OAAOyU,EAAMlM,YAAYvI,KAAM,SAAU0W,GAgBrC,OAfA7U,EAAU,CACN2L,GAAIxN,KAAK4V,gBACTQ,WAAYA,EACZlB,WAAYA,EACZyB,gBAAiBL,EACjBD,OAAQrW,KAAK4W,uBAAuBP,EAAQE,GAC5CA,sBAAuBA,GAEtBvW,KAAK0V,eACN7T,EAAQoU,eAAiBjW,KAAKiW,gBAElCO,EAAU,IAAIzO,QAAQ,SAAUC,EAASC,GACrCwO,EAAMd,SAAS9T,EAAQ2L,IAAM,CAAExF,QAASA,EAASC,OAAQA,EAC7D,GACAjI,KAAK6W,gBAAgBhV,GACd,CAAC,EAAc2U,EAC1B,EACJ,EACJ,EAOAhB,EAAWpS,UAAU0T,qBAAuB,SAAU5B,EAAYI,GAC9D,OAAOtV,KAAKmW,mBAAmB,GAAIjB,OAAY5U,EAAWgV,EAC9D,EACAE,EAAWpS,UAAU2T,aAAe,SAAUC,EAAoBC,GAC9D,IAAIR,EAAQzW,KACZ,GAAKiX,EAAWb,WAAhB,CAKA,IAAIc,EAASF,EAAmBC,EAAWb,YAC3C,GAAsB,mBAAXc,EAIX,IAGI,IAAIC,EAAa,GACbF,EAAWZ,SACXc,EAAanX,KAAKoX,yBAAyBH,EAAWZ,OAAQ,CAAC,IAEnE,IAAI7P,EAAS0Q,EAAO9S,MAAM4S,EAAoBG,GAC1C3Q,GAAUA,EAAO8B,MAA+B,mBAAhB9B,EAAO8B,KACvC9B,EAAO8B,KAAK,SAAU+O,GAClBZ,EAAMa,SAASL,EAAYI,EAAaJ,EAAWhB,eACvD,EAAG,SAAU3R,GACTmS,EAAMtW,MAAM8W,EAAY3S,EAC5B,GAGAtE,KAAKsX,SAASL,EAAYzQ,EAAQyQ,EAAWhB,eAErD,CACA,MAAOsB,GAEHvX,KAAKG,MAAM8W,EAAYM,EAC3B,MAzBIvX,KAAKG,MAAM8W,EAAY,IAAIrV,MAAM,yBAA2BqV,EAAWb,YAH3E,MAFIpW,KAAKsX,SAASL,EAAYD,EAAoBC,EAAWhB,eA+BjE,EACAT,EAAWpS,UAAUoU,oBAAsB,SAAUtC,EAAYyB,GAC7D,GAAmB,qBAAfzB,EAEA,OAAOlV,KAAK8V,eAGhB,IAAI2B,EAAmBzX,KAAK+V,SAASV,YAAYH,EAAYyB,GAK7D,OAJKc,IAEDA,EAAmBC,EAAqBrC,YAAYH,EAAYyB,IAE7Dc,CACX,EAOAjC,EAAWpS,UAAUuU,UAAY,SAAUV,GACvC,IAAIR,EAAQzW,KACZ,GAAIiX,EAAW/B,WAAY,CAGvB,IAAIuC,EAAmBzX,KAAKwX,oBAAoBP,EAAW/B,WAAY+B,EAAWN,iBAClF,IAAKc,EAED,OAAO,EAE6B,mBAA7BA,EAAuB,KAC9BA,EAAiBnP,KAAK,SAAUsP,GAC5BnB,EAAMM,aAAaa,EAAkBX,EACzC,EAAG,SAAU3S,GACTmS,EAAMtW,MAAM8W,EAAY3S,EAC5B,GAGAtE,KAAK+W,aAAaU,EAAkBR,EAE5C,KACK,CACD,IAAIT,EAAUxW,KAAK2V,SAASsB,EAAWzJ,IACvC,IAAKgJ,EAED,OAAO,EAEPS,EAAW9W,MACXqW,EAAQvO,OAAOjI,KAAKoX,yBAAyB,CAACH,EAAW9W,OAAQ,CAAC,GAAG,IAGrEqW,EAAQxO,QAAQhI,KAAKoX,yBAAyB,CAACH,EAAWzQ,QAAS,CAAC,GAAG,WAEpExG,KAAK2V,SAASsB,EAAWzJ,GACpC,CAEA,OAAO,CACX,EACAgI,EAAWpS,UAAUyU,KAAO,SAAUC,EAAQC,EAAQd,GAElD,GAAIjX,KAAKyV,eAAiBqC,EAAQ,CAG9B,GAAI9X,KAAK0V,aACL,QAAIqC,IACgC,SAAzBA,EAAOC,eAA8F,IAAlEhY,KAAK0V,aAAasC,cAAczT,QAAQwT,EAAOC,gBAO7F,GAAIf,EAAWhB,gBAAkBgB,EAAWhB,iBAAmBjW,KAAKiW,eAEhE,OADAjW,KAAK0V,aAAeqC,GACb,CAGnB,CACA,OAAO,CACX,EACAvC,EAAWpS,UAAUjD,MAAQ,SAAU8X,EAAYC,GAC/ClY,KAAK6W,gBAAgB,CACjBrJ,GAAIyK,EAAWzK,GACfrN,MAAOH,KAAK4W,uBAAuB,CAACsB,GAAWD,EAAW1B,uBAAuB,GACjFN,eAAgBgC,EAAWhC,gBAEnC,EACAT,EAAWpS,UAAUkU,SAAW,SAAUW,EAAYzR,EAAQyP,GAC1DjW,KAAK6W,gBAAgB,CACjBrJ,GAAIyK,EAAWzK,GACfhH,OAAQxG,KAAK4W,uBAAuB,CAACpQ,GAASyR,EAAW1B,uBAAuB,GAChFN,eAAgBA,GAExB,EACAT,EAAWpS,UAAUyT,gBAAkB,SAAUhV,GAC7C7B,KAAKyV,aAAa0C,YAAY9D,KAAKC,UAAUzS,GAAU,IAC3D,EACA2T,EAAWpS,UAAUwT,uBAAyB,SAAUwB,EAAKC,EAAUC,EAAmBC,EAAmBC,GACzG,IAAI/B,EAAQzW,KAGZ,QAF0B,IAAtBuY,IAAgCA,EAAoB,QAC1C,IAAVC,IAAoBA,EAAQ,GAC3BJ,KAAOI,EA9MA,QAiNRJ,aAAeK,MAAQL,aAAeM,QAAUN,aAAeO,OAAnE,CAGA,IAAIC,EACAC,GAQAA,EAPCP,GACe,CACZQ,WAAY,GACZC,gBAAiB,KAMXA,gBAAgBzX,KAAK8W,GACnC,IAAIY,EAAkB,SAAUC,EAAcC,EAAWrU,GACrD,IAAIsU,EACJ,IACIA,EAAOF,EAAapU,EACxB,CACA,MAAOuU,GAEP,CACA,IAAIC,SAAkBF,EACtB,GAAiB,cAAbE,EAAJ,CAIA,IAAIC,GAAmB,EAIvB,GAHiB,WAAbD,IACAC,EAAkBT,EAAcE,gBAAgBxU,QAAQ4U,IAExDG,GAAmB,EAAG,CAEtB,IAAIC,EAAaV,EAAcC,WAAWQ,GACrCC,EAAWC,wBACZD,EAAWC,sBAAwBjB,KAEvCW,EAAUrU,GAAO,CACb4U,oBAAqBF,EAAWC,sBAExC,KAEqB,aAAbH,GACA5C,EAAMZ,cACNqD,EAAUrU,GAAO,CACb6U,kBAAmBjD,EAAMkD,uBAAuBR,EAAMf,GACtDwB,WAAYnD,EAAMT,YAGJ,WAAbqD,EACDF,GAAQA,aAAgBrY,KACxBoY,EAAUrU,GAAO,CACbgV,YAAaV,EAAKW,WAItBZ,EAAUrU,GAAO4R,EAAMG,uBAAuBuC,EAAMd,EAAUQ,EAAeN,EAAmBC,EAAQ,GAG/F,sBAAR3T,IAGLqU,EAAUrU,GAAOsU,EArCzB,CAwCJ,EACA,GAAIf,aAAelV,MAAO,CACtB0V,EAAc,GACdC,EAAcC,WAAWxX,KAAKsX,GAC9B,IAAK,IAAI5U,EAAI,EAAG2G,EAAIyN,EAAIjU,OAAQH,EAAI2G,EAAG3G,IACnCgV,EAAgBZ,EAAKQ,EAAa5U,EAE1C,KACK,CACD4U,EAAc,CAAC,EACfC,EAAcC,WAAWxX,KAAKsX,GAC9B,IAAImB,EAAO,CAAC,EACZ,IACIA,EA1VhB,SAA6B3B,GAEzB,IADA,IAAI4B,EAAa,CAAC,EACX5B,GAAOA,IAAQrV,OAAOK,WAAW,CAEpC,IADA,IACS6W,EAAK,EAAGC,EADMnX,OAAOoX,oBAAoB/B,GACM6B,EAAKC,EAAmB/V,OAAQ8V,IAAM,CAC1F,IAAIG,EAASF,EAAmBD,GACjB,gBAAXG,IACAJ,EAAWI,IAAU,EAE7B,CACAhC,EAAMrV,OAAOsX,eAAejC,EAChC,CACA,OAAO4B,CACX,CA6UuBM,CAAoBlC,EAC/B,CACA,MAAOgB,GAEP,CACA,IAAK,IAAIvU,KAAOkV,GAEPlV,GAAkB,MAAXA,EAAI,IAAgBwT,GAAYA,EAASkC,8BACjDvB,EAAgBZ,EAAKQ,EAAa/T,EAG9C,CAGA,OAFAgU,EAAcE,gBAAgB3P,MAC9ByP,EAAcC,WAAW1P,MAClBwP,CA3FP,CA4FJ,EACApD,EAAWpS,UAAUuW,uBAAyB,SAAUa,EAAMnU,GAC1D,IAAIoU,EAAkBza,KAAK6V,cAI3B,OAHA7V,KAAK8V,eAAe,QAAU2E,GAAmB,WAC7C,OAAOD,EAAKpW,MAAMiC,EAASnD,MAAME,UAAUwH,MAAMtH,KAAKY,UAAW,GACrE,EACOuW,CACX,EACAjF,EAAWpS,UAAUgU,yBAA2B,SAAUgB,EAAKsC,GAC3D,IAAIjE,EAAQzW,KACR2a,EAAO3a,KACX,IAAKoY,EACD,OAAO,KAEX,IAAIwC,EAAoB,SAAU3B,EAAcpU,GAC5C,IAAIsU,EAAOF,EAAapU,GACpBwU,SAAkBF,EACV,0BAARtU,GAAgD,WAAbwU,GACnCqB,EAAavB,GAAQF,SACdA,EAAapU,IAEF,WAAbwU,GAAyBF,IAC1BA,EAAKO,kBACLT,EAAapU,GAAO,WAChB,OAAO8V,EAAKxE,mBAAmB,QAAUgD,EAAKO,kBAAmB,mBAAoBxW,MAAME,UAAUwH,MAAMtH,KAAKY,UAAW,GAAI,CAAC,EAAG,CAAEqW,6BAA6B,GACtK,EAEKpB,EAAKU,YACVZ,EAAapU,GAAO,IAAI/D,KAAKqY,EAAKU,aAE7BV,EAAKM,oBACVR,EAAapU,GAAO6V,EAAavB,EAAKM,qBAGtChD,EAAMW,yBAAyB+B,EAAMuB,GAGjD,EACA,GAAItC,aAAelV,MACf,IAAK,IAAIc,EAAI,EAAG2G,EAAIyN,EAAIjU,OAAQH,EAAI2G,EAAG3G,IACnC4W,EAAkBxC,EAAKpU,QAG1B,GAAmB,iBAARoU,EACZ,IAAK,IAAIvT,KAAOuT,EACZwC,EAAkBxC,EAAKvT,GAG/B,OAAOuT,CACX,EACO5C,CACX,CA5V+B,GAgW3BqF,EAAmC,WACnC,SAASA,IACL,IAAIpE,EAAQzW,KACZA,KAAK8a,UAAY,GACjB9a,KAAK+a,uBAAyB,SAAUC,GAEpC,IAAI/D,EACJ,GAA0B,iBAAf+D,EAAMC,KACb,IACIhE,EAAa5C,KAAK6G,MAAMF,EAAMC,KAClC,CACA,MAAO9a,GAEP,CAEJ,GAAI8W,EAAY,CAGZ,IAFA,IAAIkE,GAAU,EACVC,OAAe,EACVnB,EAAK,EAAGvD,EAAKD,EAAMqE,UAAWb,EAAKvD,EAAGvS,OAAQ8V,IAAM,CACzD,IAAIoB,EAAU3E,EAAGuD,GACboB,EAAQxD,KAAKmD,EAAMlD,OAAQkD,EAAMjD,OAAQd,KAEzCmE,EAAeC,EACfF,EAAUE,EAAQ1D,UAAUV,IAAekE,EAEnD,CACIC,IAAiBD,IACbG,OAAOlb,SACPA,QAAQD,MAAM,gDAAgDgH,OAAOkN,KAAKC,UAAU2C,KAIpFA,EAAW/B,YACXkG,EAAajb,MAAM8W,EAAY,IAAIrV,MAAM,yBAAyBuF,OAAO8P,EAAW/B,WAAY,0BAG5G,CACJ,EACAoG,OAAOC,iBAAiB,UAAWvb,KAAK+a,uBAC5C,CAeA,OARAF,EAAkBzX,UAAUoY,WAAa,SAAUF,EAAQ5F,GACvD,IAAI2F,EAAU,IAAI7F,EAAW8F,EAAQ5F,GAErC,OADA1V,KAAK8a,UAAUxZ,KAAK+Z,GACbA,CACX,EACAR,EAAkBzX,UAAUqY,cAAgB,SAAUJ,GAClDrb,KAAK8a,UAAY9a,KAAK8a,UAAUpJ,OAAO,SAAU3M,GAAK,OAAOA,IAAMsW,CAAS,EAChF,EACOR,CACX,CAvDsC,GA2DlCnD,EAAuB,IAAI3C,EAI3B2G,EAAiB,IAAIb,EAEzBrG,EAAQgB,WAAaA,EACrBhB,EAAQO,kBAAoBA,EAC5BP,EAAQkH,eAAiBA,EACzBlH,EAAQkD,qBAAuBA,CAElC,sC,yGC/dD,0CACY,KAAAiE,WAAoD,IAAIvO,GAwNpE,CAtNW,mBAAMwO,CACTnL,EACAC,EACA3Q,EACA+O,GAEA,MAAMkB,EAAQhQ,KAAKiQ,gBACb5J,EAAoC,CACtCqK,aACA3Q,YACA0Q,WACA3B,WAUJ,OAPA9O,KAAK2b,WAAWjV,IAAIsJ,EAAO3J,GAG3BrG,KAAK6b,gBAAgB7L,EAAO3J,GAASyV,MAAM3b,IACvCC,QAAQD,MAAM,YAAY6P,YAAiB7P,KAGxC6P,CACX,CAEQ,qBAAM6L,CAAgB7L,EAAe3J,G,MACzC,MAAM8H,EAAYrN,KAAKC,MAEvB,IAEI,MAAMgb,QAAwB/b,KAAKgc,mBAAmB3V,EAAQqK,WAAYrK,EAAQtG,WAG5Ekc,QAAqBjc,KAAKkc,kBAAkB7V,EAAQtG,UAA0B,QAAf,EAAAsG,EAAQyI,eAAO,eAAEqN,kBAGtF,IAAI3V,EACJ,OAAQH,EAAQoK,UACZ,IAAK,UACDjK,QAAexG,KAAKoc,uBAAuBL,EAAiBE,EAAc5V,GAC1E,MACJ,IAAK,OACDG,QAAexG,KAAKqc,oBAAoBN,EAAiBE,EAAc5V,GACvE,MACJ,IAAK,QACDG,QAAexG,KAAKsc,qBAAqBP,EAAiBE,EAAc5V,GACxE,MACJ,QACI,MAAM,IAAIzE,MAAM,qBAAqByE,EAAQoK,YAGrD,MAAMO,EAAWlQ,KAAKC,MAAQoN,QAGxBnO,KAAKuc,cAAc/V,EAAO0K,UAAW7K,GAGlB,UAArBA,EAAQoK,UAAwBjK,EAAO6L,aACjCrS,KAAKwc,iBAAiBnW,EAAQqK,WAAYlK,EAAO6L,MAAOhM,EAAQtG,WAG1E,MAAM0c,EAAiC,CACnChb,SAAS,EACTuO,QACAkB,UAAW1K,EAAO0K,UAClB/B,KAAM3I,EAAO2I,KACb6B,YAIJ,OADAhR,KAAK2b,WAAWxK,OAAOnB,GAChByM,CAEX,CAAE,MAAOtc,GACL,MACMsc,EAAiC,CACnChb,SAAS,EACTuO,QACAgB,SAJalQ,KAAKC,MAAQoN,EAK1BhO,MAAOA,aAAiByB,MAAQzB,EAAM0B,QAAUC,OAAO3B,IAI3D,OADAH,KAAK2b,WAAWxK,OAAOnB,GAChByM,CACX,CACJ,CAEQ,wBAAMT,CAAmBtL,EAAoB3Q,GAEjD,MAAO,CACHyN,GAAIkD,EACJvO,MAAO,aAAauO,IACpBtO,YAAa,qBACbsa,mBAAoB,6BACpBC,KAAM,aACN1Q,MAAO,MAEf,CAEQ,uBAAMiQ,CAAkBnc,EAAmB6c,GAM/C,IAAIX,EAAe,6BAEnB,GAAIW,GAAaA,EAAUzY,OAAS,EAChC,IAAK,MAAM0Y,KAAQD,EACfX,GAAgB,MAAMY,QACtBZ,SAAsBjc,KAAK8c,mBAAmB/c,EAAW8c,GACzDZ,GAAgB,YAGpBA,GAAgB,4BAChBA,GAAgB,mCAChBA,GAAgB,2CAChBA,GAAgB,iDAChBA,GAAgB,2BAGpB,OAAOA,CACX,CAEQ,wBAAMa,CAAmB/c,EAAmBgd,GAEhD,MAAO,2BAA2BA,GACtC,CAEQ,4BAAMX,CAAuBL,EAAsBE,EAAsB5V,GAG7E,MAAO,CACH6K,UAAW,CACP8L,eAAgB,CACZ,uBAAuBjB,EAAgB5Z,qGAG/CgN,KAAM,IACNE,OAAQ,CACJC,MAAO,KACPC,OAAQ,KAGpB,CAEQ,yBAAM8M,CAAoBN,EAAsBE,EAAsB5V,GAE1E,MAAO,CACH6K,UAAW,CACP+L,MAAO,CACH,6BAA6BlB,EAAgB5Z,gFAGrDgN,KAAM,IACNE,OAAQ,CACJC,MAAO,IACPC,OAAQ,KAGpB,CAEQ,0BAAM+M,CAAqBP,EAAsBE,EAAsB5V,GAE3E,MAAO,CACH6K,UAAW,CACPmB,MAAO,CACH,CACIlQ,MAAO,+BACPC,YAAa,6CACb8a,OAAQ,EACRP,KAAM,QAEV,CACIxa,MAAO,iBACPC,YAAa,8BACb8a,OAAQ,EACRP,KAAM,QAEV,CACIxa,MAAO,uBACPC,YAAa,oCACb8a,OAAQ,EACRP,KAAM,UAIlBxN,KAAM,IACNE,OAAQ,CACJC,MAAO,IACPC,OAAQ,KAGpB,CAEQ,mBAAMgN,CAAcrL,EAAgB7K,GAExCjG,QAAQ2B,IAAI,oBAAqBmP,EACrC,CAEQ,sBAAMsL,CAAiBW,EAA0B9K,EAActS,GAEnEK,QAAQ2B,IAAI,YAAYsQ,EAAMlO,oCAAoCgZ,IACtE,CAEQ,aAAAlN,GACJ,MAAO,OAAOnP,KAAKC,SAASsB,KAAKE,SAAS0R,SAAS,IAAIC,OAAO,EAAG,IACrE,CAEO,aAAAkJ,GACH,OAAOla,MAAMuH,KAAKzK,KAAK2b,WAAW5B,OACtC,CAEO,YAAAsD,CAAarN,GAChB,OAAOhQ,KAAK2b,WAAWlV,IAAIuJ,IAAU,IACzC,E,gBCjPJ,UAAO,CAAC,EAAW,OAAS,QAAU,EAAF,SAAawE,EAASC,EAAO6I,GAAO,aAKpE,IAUWC,EATPC,EAASlC,OACTkC,EAAOC,wBACPrd,QAAQD,MAAM,6GAElBqd,EAAOC,uBALU,IASjBjJ,EAAQ+I,cAAW,GACRA,EAcR/I,EAAQ+I,WAAa/I,EAAQ+I,SAAW,CAAC,IAb/BA,EAAkB,QAAI,GAAK,UAIpCA,EAASA,EAAqB,WAAI,GAAK,aAIvCA,EAASA,EAAqB,WAAI,GAAK,aAIvCA,EAASA,EAAuB,aAAI,GAAK,eAE7C,IAGIG,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAZAC,EAAgB,qBAEhBC,EAAgBf,EAAI5B,eAAeF,WAAWF,OAAOgD,QAWrDC,EAAe,IAAIxW,QAAQ,SAAUC,GACrCmW,EAAenW,CACnB,GAIA,SAASwW,EAAcC,EAAWpI,GAC9B,IACIqI,EADAlB,EAASlC,OAEqB,mBAAvBkC,EAAOmB,YACdD,EAAM,IAAIlB,EAAOmB,YAAYF,EAAWpI,IAGxCA,EAASA,GAAU,CAAEuI,SAAS,EAAOC,YAAY,IACjDH,EAAMI,SAASC,YAAY,gBACvBC,gBAAgBP,EAAWpI,EAAOuI,QAASvI,EAAOwI,WAAYxI,EAAO4I,SAE7E3D,OAAOkD,cAAcE,EACzB,CAmDA,SAASQ,IACL,OAAOzK,EAAM9M,UAAU3H,UAAM,OAAQ,EAAQ,WACzC,OAAOyU,EAAMlM,YAAYvI,KAAM,SAAU0W,GACrC,MAAO,CAAC,EAAc6H,EAC1B,EACJ,EACJ,CAaA,SAASY,EAAqBjI,GAC1B,MAAO,qBAAqB/P,OAAO+P,EAAQ,+FAC/C,CA6IA,SAASkI,EAAWC,GACXnB,KACDA,EAAeY,SAASQ,cAAc,UACzB3C,KAAO,WACpBmC,SAASS,KAAKC,YAAYtB,IAE9B,IAAIuB,EAAe,GACnB,GAAIJ,EACA,IAAK,IAAIK,KAAWL,EAChBI,EAAane,KAAK,KAAOoe,EAAU,KAAOL,EAAUK,IAG5DxB,EAAayB,UAAY,WAAaF,EAAaG,KAAK,MAAQ,+CAChEpB,EAAc,eAAgB,CAAES,OAAQI,GAC5C,CAlOAhB,EAAcnI,oBAAoBjB,SAAS,mBAAoB,CAC3DuJ,cAAeA,IAmOnBhK,EAAQ4K,WAAaA,EACrB5K,EAAQqL,eAnDR,WACI,OAAOpL,EAAM9M,UAAU3H,UAAM,OAAQ,EAAQ,WACzC,OAAOyU,EAAMlM,YAAYvI,KAAM,SAAU0W,GACrC,MAAO,CAAC,EAAc2H,EAAclI,mBAAmB,iBAAkBiI,GAAe9V,KAAK,SAAUwX,GAAY,OAAOA,EAASC,KAAO,GAC9I,EACJ,EACJ,EA8CAvL,EAAQwL,YA1CR,WACI,OAAOvL,EAAM9M,UAAU3H,UAAM,OAAQ,EAAQ,WACzC,OAAOyU,EAAMlM,YAAYvI,KAAM,SAAU0W,GACrC,MAAO,CAAC,EAAc2H,EAAclI,mBAAmB,cAAeiI,GAAe9V,KAAK,SAAUwX,GAAY,OAAOA,EAASC,KAAO,GAC3I,EACJ,EACJ,EAqCAvL,EAAQyL,iBA5JR,WACI,IAAKnC,EACD,MAAM,IAAIlc,MAAMud,EAAqB,qBAEzC,OAAOrB,CACX,EAwJAtJ,EAAQ0L,kBApJR,WACI,IAAKnC,EACD,MAAM,IAAInc,MAAMud,EAAqB,sBAEzC,OAAOpB,CACX,EAgJAvJ,EAAQ2L,oBA1HR,WACI,IAAKtC,EACD,MAAM,IAAIjc,MAAMud,EAAqB,wBAEzC,OAAOtB,CACX,EAsHArJ,EAAQ4L,QApIR,WACI,IAAKnC,EACD,MAAM,IAAIrc,MAAMud,EAAqB,YAEzC,OAAOlB,CACX,EAgIAzJ,EAAQ6L,eA1GR,WACI,IAAKzC,EACD,MAAM,IAAIhc,MAAMud,EAAqB,mBAEzC,OAAOvB,CACX,EAsGApJ,EAAQ8L,WAvFR,SAAoBC,GAChB,OAAO9L,EAAM9M,UAAU3H,UAAM,OAAQ,EAAQ,WACzC,OAAOyU,EAAMlM,YAAYvI,KAAM,SAAU0W,GACrC,MAAO,CAAC,EAAcwI,IAAQ5W,KAAK,WAC3B,OAAO+V,EAAclI,mBAAmB,aAxLrC,wBAwLqE,CAACoK,GAC7E,GACR,EACJ,EACJ,EAgFA/L,EAAQgM,eArHR,WACI,IAAK9C,EACD,MAAM,IAAI9b,MAAMud,EAAqB,mBAEzC,OAAOzB,CACX,EAiHAlJ,EAAQiM,QAjJR,WACI,IAAKzC,EACD,MAAM,IAAIpc,MAAMud,EAAqB,YAEzC,OAAOnB,CACX,EA6IAxJ,EAAQkM,cArGR,WACI,IAAK/C,EACD,MAAM,IAAI/b,MAAMud,EAAqB,kBAEzC,OAAOxB,CACX,EAiGAnJ,EAAQ7N,KAxOR,SAAcmI,GACV,OAAO,IAAI/G,QAAQ,SAAUC,GACzB,IAAI2Y,EAAclM,EAAM7Q,SAAS6Q,EAAM7Q,SAAS,CAAC,EAAGkL,GAAU,CAAE8R,WAnEvD,MAoETvC,EAAclI,mBAAmB,mBAAoBiI,EAAe,CAACuC,IAAcrY,KAAK,SAAUuY,GAC9F,GAAI,YAAaA,EAAe,CAC5B,IACIxa,GADA4U,EAAO4F,GACQxa,QACnBuX,EAAkBvX,EAAQya,YAC1BnD,EAAaC,EAAkBA,EAAgBD,gBAAard,EAC5Dod,EAAcC,EAAaA,EAAWoD,UAAOzgB,EAC7Cwd,EAAuB7C,EAAK+F,eAAiB,CAAC,EAC9CjD,EAAwB9C,EAAKsF,eAC7B1C,EAAmBxX,EAAQ4a,UAC3BjD,EAAc3X,EAAQ6a,KACtBjD,EAAc5X,EAAQ8a,IAC1B,KACK,CAED,IAAIlG,EACJ2C,GADI3C,EAAO4F,GACYC,YACvBnD,EAAaC,EAAkBA,EAAgBD,gBAAard,EAC5Dod,EAAcC,EAAaA,EAAWoD,UAAOzgB,EAC7Cwd,EAAuB7C,EAAK+F,eAAiB,CAAC,EAC9CjD,EAAwB9C,EAAKmG,aAAa5T,IAC1CqQ,EAAmB5C,EAAK4C,kBACPrQ,GAAKqQ,EAAiBwD,YAAc,IAAMxD,EAAiByD,WAChF,CACIT,EAAcxB,YACdD,EAAWyB,EAAcxB,WACzB/D,OAAOC,iBAAiB,eAAgB,SAAUgG,GAC9CnC,EAAWmC,EAAGtC,OAAOhE,KACzB,IAEJkD,IACAnW,GACJ,EACJ,EACJ,EAoMAwM,EAAQgN,iBA/KR,SAA0Bld,GACtB,OAAO+Z,EAAclI,mBAAmB,mBAAoBiI,EAAe,CAAC9Z,GAChF,EA8KAkQ,EAAQiN,oBAtLR,WACI,OAAOpD,EAAclI,mBAAmB,sBAAuBiI,EACnE,EAqLA5J,EAAQ0K,MAAQA,EAChB1K,EAAQS,SAhFR,SAAkBC,EAAYC,GAC1BkJ,EAAcnI,oBAAoBjB,SAASC,EAAYC,EAC3D,EA+EAX,EAAQkN,OA5CR,SAAgBC,EAAOC,GACnB,IAAIpZ,EAAOsW,SAAStW,KACpB,GAAIA,EAAM,CACN,IAAIqZ,EAA4B,iBAAVF,EAAqBA,EAASnZ,EAAOA,EAAKsZ,iBAAcxhB,EAC1EyhB,EAA8B,iBAAXH,EAAsBA,EAAUpZ,EAAOA,EAAKwZ,kBAAe1hB,EAClF+d,EAAclI,mBAAmB,SAAUiI,EAAe,CAACyD,EAAUE,GACzE,CACJ,EAsCAvN,EAAQoM,WA/SS,IAgTjBpM,EAAQY,WA3ER,SAAoBF,GAChBmJ,EAAcnI,oBAAoBd,WAAWF,EACjD,CA2EH,sC","sources":["webpack://spec-kit-azure-devops-extension/./src/services/repository.ts","webpack://spec-kit-azure-devops-extension/./node_modules/tslib/tslib.es6.mjs","webpack://spec-kit-azure-devops-extension/./src/services/llm.ts","webpack://spec-kit-azure-devops-extension/./src/services/telemetry.ts","webpack://spec-kit-azure-devops-extension/./node_modules/azure-devops-extension-sdk/XDM.js","webpack://spec-kit-azure-devops-extension/./src/services/orchestrator.ts","webpack://spec-kit-azure-devops-extension/./node_modules/azure-devops-extension-sdk/SDK.js"],"sourcesContent":["export interface SeedResult {\r\n    success: boolean;\r\n    prUrl?: string;\r\n    branchName?: string;\r\n    error?: string;\r\n    filesAdded?: string[];\r\n}\r\n\r\nexport interface RepositoryStatus {\r\n    isSeeded: boolean;\r\n    specKitVersion?: string;\r\n    lastSeededDate?: Date;\r\n    configFiles?: string[];\r\n}\r\n\r\nexport class RepositoryService {\r\n    private seedAssets = {\r\n        prompts: [\r\n            '.github/prompts/specify.md',\r\n            '.github/prompts/plan.md', \r\n            '.github/prompts/tasks.md',\r\n            '.github/prompts/constitution.md'\r\n        ],\r\n        config: [\r\n            '.specify/config.yml',\r\n            '.specify/templates/user-story.md',\r\n            '.specify/templates/feature.md',\r\n            '.specify/guardrails/security.yml',\r\n            '.specify/guardrails/performance.yml'\r\n        ]\r\n    };\r\n\r\n    public async isRepositorySeeded(projectId: string): Promise<boolean> {\r\n        try {\r\n            // This would check the repository for Spec Kit configuration files\r\n            const status = await this.getRepositoryStatus(projectId);\r\n            return status.isSeeded;\r\n        } catch (error) {\r\n            console.error('Error checking repository seed status:', error);\r\n            return false;\r\n        }\r\n    }\r\n\r\n    public async getRepositoryStatus(projectId: string): Promise<RepositoryStatus> {\r\n        // This would integrate with Azure DevOps Git REST API\r\n        // For now, return mock data\r\n        return {\r\n            isSeeded: false, // Change to true after first seed\r\n            specKitVersion: undefined,\r\n            lastSeededDate: undefined,\r\n            configFiles: []\r\n        };\r\n    }\r\n\r\n    public async seedRepository(projectId: string, targetRepo?: string): Promise<SeedResult> {\r\n        try {\r\n            // Get default repository if not specified\r\n            const repoId = targetRepo || await this.getDefaultRepository(projectId);\r\n            \r\n            // Create seed branch\r\n            const branchName = `spec-kit-seed-${Date.now()}`;\r\n            await this.createBranch(repoId, branchName);\r\n\r\n            // Add all seed files\r\n            const filesAdded: string[] = [];\r\n            \r\n            // Add prompt templates\r\n            for (const promptFile of this.seedAssets.prompts) {\r\n                const content = await this.getPromptTemplate(promptFile);\r\n                await this.addFile(repoId, branchName, promptFile, content);\r\n                filesAdded.push(promptFile);\r\n            }\r\n\r\n            // Add configuration files\r\n            for (const configFile of this.seedAssets.config) {\r\n                const content = await this.getConfigTemplate(configFile);\r\n                await this.addFile(repoId, branchName, configFile, content);\r\n                filesAdded.push(configFile);\r\n            }\r\n\r\n            // Create pull request\r\n            const prUrl = await this.createPullRequest(\r\n                repoId,\r\n                branchName,\r\n                'main',\r\n                'Add Spec Kit Configuration',\r\n                'This PR adds Spec Kit configuration files and prompt templates to enable AI-powered specification workflows.'\r\n            );\r\n\r\n            return {\r\n                success: true,\r\n                prUrl,\r\n                branchName,\r\n                filesAdded\r\n            };\r\n\r\n        } catch (error) {\r\n            return {\r\n                success: false,\r\n                error: error instanceof Error ? error.message : String(error)\r\n            };\r\n        }\r\n    }\r\n\r\n    private async getDefaultRepository(projectId: string): Promise<string> {\r\n        // This would get the default repository for the project\r\n        return 'default-repo-id';\r\n    }\r\n\r\n    private async createBranch(repoId: string, branchName: string): Promise<void> {\r\n        // This would create a new branch using Azure DevOps Git API\r\n        console.log(`Creating branch ${branchName} in repository ${repoId}`);\r\n    }\r\n\r\n    private async addFile(repoId: string, branchName: string, filePath: string, content: string): Promise<void> {\r\n        // This would add/update a file using Azure DevOps Git API\r\n        console.log(`Adding file ${filePath} to branch ${branchName}`);\r\n    }\r\n\r\n    private async createPullRequest(\r\n        repoId: string,\r\n        sourceBranch: string,\r\n        targetBranch: string,\r\n        title: string,\r\n        description: string\r\n    ): Promise<string> {\r\n        // This would create a pull request using Azure DevOps Git API\r\n        const prId = Math.floor(Math.random() * 1000) + 1;\r\n        return `https://dev.azure.com/organization/project/_git/repo/pullrequest/${prId}`;\r\n    }\r\n\r\n    private async getPromptTemplate(filePath: string): Promise<string> {\r\n        const templates: Record<string, string> = {\r\n            '.github/prompts/specify.md': `# Specification Prompt Template\r\n\r\n## Context\r\nYou are helping to generate detailed specifications for software features.\r\n\r\n## Instructions\r\n1. Analyze the work item requirements\r\n2. Consider the project constitution and guidelines\r\n3. Generate comprehensive specifications including:\r\n   - Functional requirements\r\n   - Non-functional requirements\r\n   - Acceptance criteria\r\n   - Dependencies\r\n   - Risk considerations\r\n\r\n## Output Format\r\nGenerate specifications in markdown format with clear sections and detailed explanations.`,\r\n\r\n            '.github/prompts/plan.md': `# Planning Prompt Template\r\n\r\n## Context\r\nYou are creating implementation plans based on specifications.\r\n\r\n## Instructions\r\n1. Review the specification document\r\n2. Break down into implementation phases\r\n3. Identify dependencies and prerequisites\r\n4. Estimate effort and timelines\r\n5. Consider technical risks and mitigation strategies\r\n\r\n## Output Format\r\nCreate a structured implementation plan with phases, tasks, and timelines.`,\r\n\r\n            '.github/prompts/tasks.md': `# Task Generation Prompt Template\r\n\r\n## Context\r\nYou are breaking down implementation plans into actionable tasks.\r\n\r\n## Instructions\r\n1. Analyze the implementation plan\r\n2. Create specific, actionable tasks\r\n3. Include effort estimates (in hours/story points)\r\n4. Define clear acceptance criteria for each task\r\n5. Identify task dependencies\r\n\r\n## Output Format\r\nGenerate tasks in a structured format suitable for Azure DevOps work items.`,\r\n\r\n            '.github/prompts/constitution.md': `# Project Constitution\r\n\r\n## Coding Standards\r\n- Follow team coding conventions\r\n- Use consistent naming patterns\r\n- Include comprehensive error handling\r\n- Write meaningful comments and documentation\r\n\r\n## Quality Guidelines\r\n- All code must have unit tests\r\n- Minimum 80% code coverage\r\n- Peer review required for all changes\r\n- Automated testing in CI/CD pipeline\r\n\r\n## Architecture Principles\r\n- Follow SOLID principles\r\n- Use dependency injection\r\n- Implement proper logging\r\n- Consider security implications\r\n\r\n## Non-Functional Requirements\r\n- Performance: Page load times < 2 seconds\r\n- Security: All inputs must be validated\r\n- Accessibility: WCAG 2.1 compliance\r\n- Scalability: Support 10,000 concurrent users`\r\n        };\r\n\r\n        return templates[filePath] || `# ${filePath}\\n\\nTemplate content for ${filePath}`;\r\n    }\r\n\r\n    private async getConfigTemplate(filePath: string): Promise<string> {\r\n        const templates: Record<string, string> = {\r\n            '.specify/config.yml': `# Spec Kit Configuration\r\nversion: \"1.0\"\r\n\r\n# Default settings\r\ndefaults:\r\n  temperature: 0.7\r\n  max_tokens: 2000\r\n  output_format: \"markdown\"\r\n\r\n# Workflow settings\r\nworkflows:\r\n  specify:\r\n    enabled: true\r\n    auto_save: true\r\n    output_location: \"specs/\"\r\n  \r\n  plan:\r\n    enabled: true\r\n    auto_save: true\r\n    output_location: \"plans/\"\r\n  \r\n  tasks:\r\n    enabled: true\r\n    auto_create_work_items: true\r\n    task_prefix: \"TASK\"\r\n\r\n# Integration settings\r\nintegrations:\r\n  azure_devops:\r\n    auto_link_work_items: true\r\n    sync_state_changes: true\r\n  \r\n  wiki:\r\n    auto_publish: false\r\n    wiki_path: \"Specifications/\"`,\r\n\r\n            '.specify/templates/user-story.md': `# User Story Template\r\n\r\n## Title\r\n{{title}}\r\n\r\n## Description\r\n{{description}}\r\n\r\n## Acceptance Criteria\r\n{{acceptanceCriteria}}\r\n\r\n## Specification\r\n\r\n### Functional Requirements\r\n[Generated specifications will appear here]\r\n\r\n### Non-Functional Requirements\r\n[Performance, security, and other non-functional requirements]\r\n\r\n### Dependencies\r\n[External dependencies and prerequisites]\r\n\r\n### Risk Assessment\r\n[Potential risks and mitigation strategies]`,\r\n\r\n            '.specify/templates/feature.md': `# Feature Template\r\n\r\n## Feature: {{title}}\r\n\r\n### Overview\r\n{{description}}\r\n\r\n### User Stories\r\n{{acceptanceCriteria}}\r\n\r\n### Technical Specification\r\n\r\n#### Architecture\r\n[High-level architecture description]\r\n\r\n#### Components\r\n[Detailed component breakdown]\r\n\r\n#### Data Model\r\n[Data structures and relationships]\r\n\r\n#### API Specification\r\n[API endpoints and contracts]\r\n\r\n#### Security Considerations\r\n[Security requirements and implementation]`,\r\n\r\n            '.specify/guardrails/security.yml': `# Security Guardrails\r\n\r\nrules:\r\n  - name: \"Input Validation\"\r\n    description: \"All user inputs must be validated\"\r\n    severity: \"high\"\r\n    pattern: \"validate.*input|sanitize.*data\"\r\n    \r\n  - name: \"Authentication Required\"\r\n    description: \"Protected endpoints must require authentication\"\r\n    severity: \"high\"\r\n    pattern: \"authenticate|authorize\"\r\n    \r\n  - name: \"SQL Injection Prevention\"\r\n    description: \"Use parameterized queries\"\r\n    severity: \"critical\"\r\n    pattern: \"parameterized|prepared.*statement\"\r\n    \r\n  - name: \"XSS Prevention\"\r\n    description: \"Escape output data\"\r\n    severity: \"high\"\r\n    pattern: \"escape.*output|sanitize.*html\"`,\r\n\r\n            '.specify/guardrails/performance.yml': `# Performance Guardrails\r\n\r\nrules:\r\n  - name: \"Database Query Optimization\"\r\n    description: \"Optimize database queries for performance\"\r\n    severity: \"medium\"\r\n    pattern: \"index|optimize.*query\"\r\n    \r\n  - name: \"Caching Strategy\"\r\n    description: \"Implement appropriate caching\"\r\n    severity: \"medium\"\r\n    pattern: \"cache|memoize\"\r\n    \r\n  - name: \"Async Operations\"\r\n    description: \"Use async/await for I/O operations\"\r\n    severity: \"low\"\r\n    pattern: \"async|await\"\r\n    \r\n  - name: \"Resource Management\"\r\n    description: \"Proper resource cleanup\"\r\n    severity: \"medium\"\r\n    pattern: \"dispose|close|cleanup\"`\r\n        };\r\n\r\n        return templates[filePath] || `# ${filePath}\\n\\nConfiguration template for ${filePath}`;\r\n    }\r\n\r\n    public async saveArtifact(\r\n        projectId: string,\r\n        filePath: string,\r\n        content: string,\r\n        commitMessage: string\r\n    ): Promise<void> {\r\n        // This would save an artifact to the repository\r\n        console.log(`Saving artifact ${filePath} with message: ${commitMessage}`);\r\n    }\r\n\r\n    public async getArtifacts(projectId: string, artifactType: 'specs' | 'plans' | 'tasks'): Promise<string[]> {\r\n        // This would retrieve existing artifacts from the repository\r\n        return [`${artifactType}/example.md`];\r\n    }\r\n}","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\n  function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose, inner;\n    if (async) {\n      if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n      dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n      if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n      dispose = value[Symbol.dispose];\n      if (async) inner = dispose;\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","export interface LLMConnection {\r\n    id: string;\r\n    name: string;\r\n    baseUrl: string;\r\n    model: string;\r\n    region?: string;\r\n    temperatureCap?: number;\r\n    isDefault: boolean;\r\n    isActive: boolean;\r\n    createdDate: Date;\r\n    lastTestDate?: Date;\r\n}\r\n\r\nexport interface LLMTestResult {\r\n    success: boolean;\r\n    model?: string;\r\n    error?: string;\r\n    latency?: number;\r\n}\r\n\r\nexport class LLMService {\r\n    private connectionCache: Map<string, LLMConnection[]> = new Map();\r\n\r\n    public async getProjectConnections(projectId: string): Promise<LLMConnection[]> {\r\n        // Check cache first\r\n        if (this.connectionCache.has(projectId)) {\r\n            return this.connectionCache.get(projectId)!;\r\n        }\r\n\r\n        // This would fetch from Azure DevOps service connections API\r\n        const connections = await this.fetchServiceConnections(projectId);\r\n        this.connectionCache.set(projectId, connections);\r\n        \r\n        return connections;\r\n    }\r\n\r\n    private async fetchServiceConnections(projectId: string): Promise<LLMConnection[]> {\r\n        // Mock data for now - would integrate with Azure DevOps REST API\r\n        return [\r\n            {\r\n                id: 'openai-connection-1',\r\n                name: 'OpenAI GPT-4',\r\n                baseUrl: 'https://api.openai.com/v1',\r\n                model: 'gpt-4',\r\n                temperatureCap: 0.7,\r\n                isDefault: true,\r\n                isActive: true,\r\n                createdDate: new Date('2024-01-15'),\r\n                lastTestDate: new Date('2024-01-20')\r\n            },\r\n            {\r\n                id: 'azure-openai-connection-1',\r\n                name: 'Azure OpenAI',\r\n                baseUrl: 'https://my-resource.openai.azure.com',\r\n                model: 'gpt-4',\r\n                region: 'East US',\r\n                temperatureCap: 0.5,\r\n                isDefault: false,\r\n                isActive: true,\r\n                createdDate: new Date('2024-01-10')\r\n            }\r\n        ];\r\n    }\r\n\r\n    public async testConnection(connectionId: string): Promise<LLMTestResult> {\r\n        const startTime = Date.now();\r\n        \r\n        try {\r\n            const connection = await this.getConnectionById(connectionId);\r\n            if (!connection) {\r\n                throw new Error('Connection not found');\r\n            }\r\n\r\n            // This would make an actual API call to test the connection\r\n            const result = await this.makeTestCall(connection);\r\n            const latency = Date.now() - startTime;\r\n\r\n            return {\r\n                success: true,\r\n                model: result.model,\r\n                latency\r\n            };\r\n\r\n        } catch (error) {\r\n            return {\r\n                success: false,\r\n                error: error instanceof Error ? error.message : String(error)\r\n            };\r\n        }\r\n    }\r\n\r\n    private async getConnectionById(connectionId: string): Promise<LLMConnection | null> {\r\n        // This would fetch a specific connection by ID\r\n        return {\r\n            id: connectionId,\r\n            name: 'Test Connection',\r\n            baseUrl: 'https://api.openai.com/v1',\r\n            model: 'gpt-4',\r\n            isDefault: false,\r\n            isActive: true,\r\n            createdDate: new Date()\r\n        };\r\n    }\r\n\r\n    private async makeTestCall(connection: LLMConnection): Promise<any> {\r\n        // Mock test call - would make actual HTTP request\r\n        return {\r\n            model: connection.model,\r\n            response: 'Test successful'\r\n        };\r\n    }\r\n\r\n    public async setDefaultConnection(projectId: string, connectionId: string): Promise<void> {\r\n        const connections = await this.getProjectConnections(projectId);\r\n        \r\n        // Update default status\r\n        connections.forEach(conn => {\r\n            conn.isDefault = conn.id === connectionId;\r\n        });\r\n\r\n        // Would save to Azure DevOps project settings\r\n        console.log(`Setting default LLM connection to ${connectionId} for project ${projectId}`);\r\n        \r\n        // Update cache\r\n        this.connectionCache.set(projectId, connections);\r\n    }\r\n\r\n    public async executePrompt(\r\n        connectionId: string,\r\n        prompt: string,\r\n        options?: {\r\n            temperature?: number;\r\n            maxTokens?: number;\r\n            systemMessage?: string;\r\n        }\r\n    ): Promise<{\r\n        response: string;\r\n        cost: number;\r\n        tokens: { input: number; output: number };\r\n    }> {\r\n        const connection = await this.getConnectionById(connectionId);\r\n        if (!connection) {\r\n            throw new Error('LLM connection not found');\r\n        }\r\n\r\n        // This would make the actual LLM API call\r\n        // For now, return mock response\r\n        const inputTokens = Math.ceil(prompt.length / 4); // Rough estimate\r\n        const outputTokens = Math.ceil(Math.random() * 1000 + 200);\r\n        \r\n        return {\r\n            response: `Mock response to: ${prompt.substring(0, 50)}...`,\r\n            cost: this.calculateCost(connection.model, inputTokens, outputTokens),\r\n            tokens: {\r\n                input: inputTokens,\r\n                output: outputTokens\r\n            }\r\n        };\r\n    }\r\n\r\n    private calculateCost(model: string, inputTokens: number, outputTokens: number): number {\r\n        // Pricing based on model type\r\n        const pricing: Record<string, { input: number; output: number }> = {\r\n            'gpt-4': { input: 0.03 / 1000, output: 0.06 / 1000 },\r\n            'gpt-3.5-turbo': { input: 0.001 / 1000, output: 0.002 / 1000 },\r\n            'claude-3': { input: 0.015 / 1000, output: 0.075 / 1000 }\r\n        };\r\n\r\n        const modelPricing = pricing[model] || pricing['gpt-4'];\r\n        return (inputTokens * modelPricing.input) + (outputTokens * modelPricing.output);\r\n    }\r\n\r\n    public clearCache(): void {\r\n        this.connectionCache.clear();\r\n    }\r\n}","export interface ProjectMetrics {\r\n    totalRuns: number;\r\n    successRate: number;\r\n    avgCost: number;\r\n    avgDuration: number;\r\n    workflowBreakdown: {\r\n        specify: number;\r\n        plan: number;\r\n        tasks: number;\r\n    };\r\n    costBreakdown: {\r\n        total: number;\r\n        byWorkflow: {\r\n            specify: number;\r\n            plan: number;\r\n            tasks: number;\r\n        };\r\n        byMonth: { month: string; cost: number }[];\r\n    };\r\n    leadTimeMetrics: {\r\n        avgSpecifyToMerge: number;\r\n        avgPlanToImplementation: number;\r\n        avgTasksToCompletion: number;\r\n    };\r\n}\r\n\r\nexport interface WorkflowRun {\r\n    id: string;\r\n    timestamp: Date;\r\n    workflow: 'specify' | 'plan' | 'tasks';\r\n    workItemId: number;\r\n    workItemTitle: string;\r\n    status: 'running' | 'success' | 'failed';\r\n    duration?: number;\r\n    cost?: number;\r\n    tokens?: {\r\n        input: number;\r\n        output: number;\r\n    };\r\n    llmModel?: string;\r\n    errorMessage?: string;\r\n    artifacts?: string[];\r\n}\r\n\r\nexport interface AuditEntry {\r\n    id: string;\r\n    timestamp: Date;\r\n    runId: string;\r\n    action: 'workflow_started' | 'workflow_completed' | 'artifact_saved' | 'error_occurred';\r\n    details: any;\r\n    userId: string;\r\n    projectId: string;\r\n}\r\n\r\nexport class TelemetryService {\r\n    private metricsCache: Map<string, ProjectMetrics> = new Map();\r\n    private runsCache: Map<string, WorkflowRun[]> = new Map();\r\n\r\n    public async recordWorkflowStart(\r\n        projectId: string,\r\n        workflowRun: Omit<WorkflowRun, 'id' | 'timestamp' | 'status'>\r\n    ): Promise<string> {\r\n        const runId = this.generateRunId();\r\n        const run: WorkflowRun = {\r\n            ...workflowRun,\r\n            id: runId,\r\n            timestamp: new Date(),\r\n            status: 'running'\r\n        };\r\n\r\n        // Add to cache\r\n        const projectRuns = this.runsCache.get(projectId) || [];\r\n        projectRuns.unshift(run);\r\n        this.runsCache.set(projectId, projectRuns.slice(0, 100)); // Keep last 100 runs\r\n\r\n        // Record audit entry\r\n        await this.recordAuditEntry({\r\n            runId,\r\n            action: 'workflow_started',\r\n            details: { workflow: workflowRun.workflow, workItemId: workflowRun.workItemId },\r\n            userId: await this.getCurrentUserId(),\r\n            projectId\r\n        });\r\n\r\n        // In a real implementation, this would save to Azure DevOps extension data storage\r\n        console.log(`Recorded workflow start: ${runId}`);\r\n        \r\n        return runId;\r\n    }\r\n\r\n    public async recordWorkflowCompletion(\r\n        runId: string,\r\n        projectId: string,\r\n        result: {\r\n            status: 'success' | 'failed';\r\n            duration: number;\r\n            cost?: number;\r\n            tokens?: { input: number; output: number };\r\n            errorMessage?: string;\r\n            artifacts?: string[];\r\n        }\r\n    ): Promise<void> {\r\n        const projectRuns = this.runsCache.get(projectId) || [];\r\n        const runIndex = projectRuns.findIndex(r => r.id === runId);\r\n        \r\n        if (runIndex >= 0) {\r\n            projectRuns[runIndex] = {\r\n                ...projectRuns[runIndex],\r\n                status: result.status,\r\n                duration: result.duration,\r\n                cost: result.cost,\r\n                tokens: result.tokens,\r\n                errorMessage: result.errorMessage,\r\n                artifacts: result.artifacts\r\n            };\r\n            \r\n            this.runsCache.set(projectId, projectRuns);\r\n        }\r\n\r\n        // Record audit entry\r\n        await this.recordAuditEntry({\r\n            runId,\r\n            action: 'workflow_completed',\r\n            details: result,\r\n            userId: await this.getCurrentUserId(),\r\n            projectId\r\n        });\r\n\r\n        // Clear metrics cache to force recalculation\r\n        this.metricsCache.delete(projectId);\r\n\r\n        console.log(`Recorded workflow completion: ${runId}`);\r\n    }\r\n\r\n    public async getProjectMetrics(projectId: string): Promise<ProjectMetrics> {\r\n        // Check cache first\r\n        if (this.metricsCache.has(projectId)) {\r\n            return this.metricsCache.get(projectId)!;\r\n        }\r\n\r\n        const runs = await this.getRecentRuns(projectId, 1000); // Get more runs for accurate metrics\r\n        const metrics = this.calculateMetrics(runs);\r\n        \r\n        this.metricsCache.set(projectId, metrics);\r\n        return metrics;\r\n    }\r\n\r\n    private calculateMetrics(runs: WorkflowRun[]): ProjectMetrics {\r\n        const successfulRuns = runs.filter(r => r.status === 'success');\r\n        const totalRuns = runs.length;\r\n        const successRate = totalRuns > 0 ? successfulRuns.length / totalRuns : 0;\r\n\r\n        // Calculate costs\r\n        const totalCost = successfulRuns.reduce((sum, r) => sum + (r.cost || 0), 0);\r\n        const avgCost = successfulRuns.length > 0 ? totalCost / successfulRuns.length : 0;\r\n\r\n        // Calculate durations\r\n        const avgDuration = successfulRuns.length > 0 \r\n            ? successfulRuns.reduce((sum, r) => sum + (r.duration || 0), 0) / successfulRuns.length\r\n            : 0;\r\n\r\n        // Workflow breakdown\r\n        const workflowBreakdown = {\r\n            specify: runs.filter(r => r.workflow === 'specify').length,\r\n            plan: runs.filter(r => r.workflow === 'plan').length,\r\n            tasks: runs.filter(r => r.workflow === 'tasks').length\r\n        };\r\n\r\n        // Cost breakdown by workflow\r\n        const costByWorkflow = {\r\n            specify: successfulRuns.filter(r => r.workflow === 'specify').reduce((sum, r) => sum + (r.cost || 0), 0),\r\n            plan: successfulRuns.filter(r => r.workflow === 'plan').reduce((sum, r) => sum + (r.cost || 0), 0),\r\n            tasks: successfulRuns.filter(r => r.workflow === 'tasks').reduce((sum, r) => sum + (r.cost || 0), 0)\r\n        };\r\n\r\n        // Monthly cost breakdown\r\n        const costByMonth = this.calculateMonthlyCosts(successfulRuns);\r\n\r\n        // Lead time metrics (mock data for now)\r\n        const leadTimeMetrics = {\r\n            avgSpecifyToMerge: 48, // hours\r\n            avgPlanToImplementation: 24, // hours\r\n            avgTasksToCompletion: 72 // hours\r\n        };\r\n\r\n        return {\r\n            totalRuns,\r\n            successRate,\r\n            avgCost,\r\n            avgDuration,\r\n            workflowBreakdown,\r\n            costBreakdown: {\r\n                total: totalCost,\r\n                byWorkflow: costByWorkflow,\r\n                byMonth: costByMonth\r\n            },\r\n            leadTimeMetrics\r\n        };\r\n    }\r\n\r\n    private calculateMonthlyCosts(runs: WorkflowRun[]): { month: string; cost: number }[] {\r\n        const monthlyData: Record<string, number> = {};\r\n        \r\n        runs.forEach(run => {\r\n            if (run.cost) {\r\n                const month = run.timestamp.toISOString().slice(0, 7); // YYYY-MM\r\n                monthlyData[month] = (monthlyData[month] || 0) + run.cost;\r\n            }\r\n        });\r\n\r\n        return Object.entries(monthlyData)\r\n            .map(([month, cost]) => ({ month, cost }))\r\n            .sort((a, b) => a.month.localeCompare(b.month));\r\n    }\r\n\r\n    public async getRecentRuns(projectId: string, limit: number = 10): Promise<WorkflowRun[]> {\r\n        const cached = this.runsCache.get(projectId);\r\n        if (cached) {\r\n            return cached.slice(0, limit);\r\n        }\r\n\r\n        // In a real implementation, this would fetch from Azure DevOps extension data storage\r\n        // For now, return mock data\r\n        const mockRuns: WorkflowRun[] = [\r\n            {\r\n                id: 'run_1',\r\n                timestamp: new Date(Date.now() - 1000 * 60 * 30), // 30 minutes ago\r\n                workflow: 'specify',\r\n                workItemId: 12345,\r\n                workItemTitle: 'User authentication system',\r\n                status: 'success',\r\n                duration: 25000,\r\n                cost: 0.05,\r\n                tokens: { input: 1200, output: 800 },\r\n                llmModel: 'gpt-4'\r\n            },\r\n            {\r\n                id: 'run_2',\r\n                timestamp: new Date(Date.now() - 1000 * 60 * 60 * 2), // 2 hours ago\r\n                workflow: 'plan',\r\n                workItemId: 12346,\r\n                workItemTitle: 'Payment processing module',\r\n                status: 'success',\r\n                duration: 18000,\r\n                cost: 0.03,\r\n                tokens: { input: 800, output: 600 },\r\n                llmModel: 'gpt-4'\r\n            },\r\n            {\r\n                id: 'run_3',\r\n                timestamp: new Date(Date.now() - 1000 * 60 * 60 * 4), // 4 hours ago\r\n                workflow: 'tasks',\r\n                workItemId: 12347,\r\n                workItemTitle: 'Data validation framework',\r\n                status: 'failed',\r\n                duration: 5000,\r\n                errorMessage: 'LLM connection timeout',\r\n                llmModel: 'gpt-4'\r\n            }\r\n        ];\r\n\r\n        this.runsCache.set(projectId, mockRuns);\r\n        return mockRuns.slice(0, limit);\r\n    }\r\n\r\n    public async getRunDetails(runId: string): Promise<WorkflowRun | null> {\r\n        // Search across all cached runs\r\n        for (const runs of this.runsCache.values()) {\r\n            const run = runs.find(r => r.id === runId);\r\n            if (run) return run;\r\n        }\r\n\r\n        // In a real implementation, this would query the database\r\n        return null;\r\n    }\r\n\r\n    private async recordAuditEntry(entry: Omit<AuditEntry, 'id' | 'timestamp'>): Promise<void> {\r\n        const auditEntry: AuditEntry = {\r\n            ...entry,\r\n            id: this.generateAuditId(),\r\n            timestamp: new Date()\r\n        };\r\n\r\n        // In a real implementation, this would save to audit storage\r\n        console.log('Audit entry:', auditEntry);\r\n    }\r\n\r\n    private async getCurrentUserId(): Promise<string> {\r\n        // This would get the current Azure DevOps user ID\r\n        return 'current-user-id';\r\n    }\r\n\r\n    private generateRunId(): string {\r\n        return `run_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n    }\r\n\r\n    private generateAuditId(): string {\r\n        return `audit_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n    }\r\n\r\n    public async exportMetrics(projectId: string, format: 'json' | 'csv'): Promise<string> {\r\n        const metrics = await this.getProjectMetrics(projectId);\r\n        const runs = await this.getRecentRuns(projectId, 1000);\r\n\r\n        if (format === 'json') {\r\n            return JSON.stringify({ metrics, runs }, null, 2);\r\n        } else {\r\n            // CSV format\r\n            let csv = 'Timestamp,Workflow,WorkItemId,Status,Duration,Cost,Tokens\\n';\r\n            runs.forEach(run => {\r\n                csv += `${run.timestamp.toISOString()},${run.workflow},${run.workItemId},${run.status},${run.duration || ''},${run.cost || ''},${run.tokens ? `${run.tokens.input}/${run.tokens.output}` : ''}\\n`;\r\n            });\r\n            return csv;\r\n        }\r\n    }\r\n\r\n    public clearCache(): void {\r\n        this.metricsCache.clear();\r\n        this.runsCache.clear();\r\n    }\r\n}","define(['exports', 'tslib'], (function (exports, tslib) { 'use strict';\n\n    var smallestRandom = parseInt(\"10000000000\", 36);\n    var maxSafeInteger = Number.MAX_SAFE_INTEGER || 9007199254740991;\n    /**\n     * Create a new random 22-character fingerprint.\n     * @return string fingerprint\n     */\n    function newFingerprint() {\n        // smallestRandom ensures we will get a 11-character result from the base-36 conversion.\n        return Math.floor((Math.random() * (maxSafeInteger - smallestRandom)) + smallestRandom).toString(36) +\n            Math.floor((Math.random() * (maxSafeInteger - smallestRandom)) + smallestRandom).toString(36);\n    }\n    /**\n     * Gets all own and inherited property names of the given object, excluding\n     * those that are inherited from Object's prototype and \"constructor\".\n     * @param obj\n     */\n    function getAllPropertyNames(obj) {\n        var properties = {};\n        while (obj && obj !== Object.prototype) {\n            var ownPropertyNames = Object.getOwnPropertyNames(obj);\n            for (var _i = 0, ownPropertyNames_1 = ownPropertyNames; _i < ownPropertyNames_1.length; _i++) {\n                var name_1 = ownPropertyNames_1[_i];\n                if (name_1 !== \"constructor\") {\n                    properties[name_1] = true;\n                }\n            }\n            obj = Object.getPrototypeOf(obj);\n        }\n        return properties;\n    }\n    /**\n     * Catalog of objects exposed for XDM\n     */\n    var XDMObjectRegistry = /** @class */ (function () {\n        function XDMObjectRegistry() {\n            this.objects = {};\n        }\n        /**\n        * Register an object (instance or factory method) exposed by this frame to callers in a remote frame\n        *\n        * @param instanceId - unique id of the registered object\n        * @param instance - Either: (1) an object instance, or (2) a function that takes optional context data and returns an object instance.\n        */\n        XDMObjectRegistry.prototype.register = function (instanceId, instance) {\n            this.objects[instanceId] = instance;\n        };\n        /**\n        * Unregister an object (instance or factory method) that was previously registered by this frame\n        *\n        * @param instanceId - unique id of the registered object\n        */\n        XDMObjectRegistry.prototype.unregister = function (instanceId) {\n            delete this.objects[instanceId];\n        };\n        /**\n        * Get an instance of an object registered with the given id\n        *\n        * @param instanceId - unique id of the registered object\n        * @param contextData - Optional context data to pass to a registered object's factory method\n        */\n        XDMObjectRegistry.prototype.getInstance = function (instanceId, contextData) {\n            var instance = this.objects[instanceId];\n            if (!instance) {\n                return undefined;\n            }\n            if (typeof instance === \"function\") {\n                return instance(contextData);\n            }\n            else {\n                return instance;\n            }\n        };\n        return XDMObjectRegistry;\n    }());\n    var MAX_XDM_DEPTH = 100;\n    var nextChannelId = 1;\n    /**\n     * Represents a channel of communication between frames\\document\n     * Stays \"alive\" across multiple funtion\\method calls\n     */\n    var XDMChannel = /** @class */ (function () {\n        function XDMChannel(postToWindow, targetOrigin) {\n            this.promises = {};\n            this.nextMessageId = 1;\n            this.nextProxyId = 1;\n            this.proxyFunctions = {};\n            this.postToWindow = postToWindow;\n            this.targetOrigin = targetOrigin;\n            this.registry = new XDMObjectRegistry();\n            this.channelId = nextChannelId++;\n            if (!this.targetOrigin) {\n                this.handshakeToken = newFingerprint();\n            }\n        }\n        /**\n        * Get the object registry to handle messages from this specific channel.\n        * Upon receiving a message, this channel registry will be used first, then\n        * the global registry will be used if no handler is found here.\n        */\n        XDMChannel.prototype.getObjectRegistry = function () {\n            return this.registry;\n        };\n        /**\n        * Invoke a method via RPC. Lookup the registered object on the remote end of the channel and invoke the specified method.\n        *\n        * @param method - Name of the method to invoke\n        * @param instanceId - unique id of the registered object\n        * @param params - Arguments to the method to invoke\n        * @param instanceContextData - Optional context data to pass to a registered object's factory method\n        * @param serializationSettings - Optional serialization settings\n        */\n        XDMChannel.prototype.invokeRemoteMethod = function (methodName, instanceId, params, instanceContextData, serializationSettings) {\n            return tslib.__awaiter(this, void 0, void 0, function () {\n                var message, promise;\n                var _this = this;\n                return tslib.__generator(this, function (_a) {\n                    message = {\n                        id: this.nextMessageId++,\n                        methodName: methodName,\n                        instanceId: instanceId,\n                        instanceContext: instanceContextData,\n                        params: this._customSerializeObject(params, serializationSettings),\n                        serializationSettings: serializationSettings\n                    };\n                    if (!this.targetOrigin) {\n                        message.handshakeToken = this.handshakeToken;\n                    }\n                    promise = new Promise(function (resolve, reject) {\n                        _this.promises[message.id] = { resolve: resolve, reject: reject };\n                    });\n                    this._sendRpcMessage(message);\n                    return [2 /*return*/, promise];\n                });\n            });\n        };\n        /**\n        * Get a proxied object that represents the object registered with the given instance id on the remote side of this channel.\n        *\n        * @param instanceId - unique id of the registered object\n        * @param contextData - Optional context data to pass to a registered object's factory method\n        */\n        XDMChannel.prototype.getRemoteObjectProxy = function (instanceId, contextData) {\n            return this.invokeRemoteMethod(\"\", instanceId, undefined, contextData);\n        };\n        XDMChannel.prototype.invokeMethod = function (registeredInstance, rpcMessage) {\n            var _this = this;\n            if (!rpcMessage.methodName) {\n                // Null/empty method name indicates to return the registered object itself.\n                this._success(rpcMessage, registeredInstance, rpcMessage.handshakeToken);\n                return;\n            }\n            var method = registeredInstance[rpcMessage.methodName];\n            if (typeof method !== \"function\") {\n                this.error(rpcMessage, new Error(\"RPC method not found: \" + rpcMessage.methodName));\n                return;\n            }\n            try {\n                // Call specified method.  Add nested success and error call backs with closure\n                // so we can post back a response as a result or error as appropriate\n                var methodArgs = [];\n                if (rpcMessage.params) {\n                    methodArgs = this._customDeserializeObject(rpcMessage.params, {});\n                }\n                var result = method.apply(registeredInstance, methodArgs);\n                if (result && result.then && typeof result.then === \"function\") {\n                    result.then(function (asyncResult) {\n                        _this._success(rpcMessage, asyncResult, rpcMessage.handshakeToken);\n                    }, function (e) {\n                        _this.error(rpcMessage, e);\n                    });\n                }\n                else {\n                    this._success(rpcMessage, result, rpcMessage.handshakeToken);\n                }\n            }\n            catch (exception) {\n                // send back as error if an exception is thrown\n                this.error(rpcMessage, exception);\n            }\n        };\n        XDMChannel.prototype.getRegisteredObject = function (instanceId, instanceContext) {\n            if (instanceId === \"__proxyFunctions\") {\n                // Special case for proxied functions of remote instances\n                return this.proxyFunctions;\n            }\n            // Look in the channel registry first\n            var registeredObject = this.registry.getInstance(instanceId, instanceContext);\n            if (!registeredObject) {\n                // Look in the global registry as a fallback\n                registeredObject = globalObjectRegistry.getInstance(instanceId, instanceContext);\n            }\n            return registeredObject;\n        };\n        /**\n        * Handle a received message on this channel. Dispatch to the appropriate object found via object registry\n        *\n        * @param rpcMessage - Message data\n        * @return True if the message was handled by this channel. Otherwise false.\n        */\n        XDMChannel.prototype.onMessage = function (rpcMessage) {\n            var _this = this;\n            if (rpcMessage.instanceId) {\n                // Find the object that handles this requestNeed to find implementation\n                // Look in the channel registry first\n                var registeredObject = this.getRegisteredObject(rpcMessage.instanceId, rpcMessage.instanceContext);\n                if (!registeredObject) {\n                    // If not found return false to indicate that the message was not handled\n                    return false;\n                }\n                if (typeof registeredObject[\"then\"] === \"function\") {\n                    registeredObject.then(function (resolvedInstance) {\n                        _this.invokeMethod(resolvedInstance, rpcMessage);\n                    }, function (e) {\n                        _this.error(rpcMessage, e);\n                    });\n                }\n                else {\n                    this.invokeMethod(registeredObject, rpcMessage);\n                }\n            }\n            else {\n                var promise = this.promises[rpcMessage.id];\n                if (!promise) {\n                    // Message not handled by this channel.\n                    return false;\n                }\n                if (rpcMessage.error) {\n                    promise.reject(this._customDeserializeObject([rpcMessage.error], {})[0]);\n                }\n                else {\n                    promise.resolve(this._customDeserializeObject([rpcMessage.result], {})[0]);\n                }\n                delete this.promises[rpcMessage.id];\n            }\n            // Message handled by this channel\n            return true;\n        };\n        XDMChannel.prototype.owns = function (source, origin, rpcMessage) {\n            /// Determines whether the current message belongs to this channel or not\n            if (this.postToWindow === source) {\n                // For messages coming from sandboxed iframes the origin will be set to the string \"null\".  This is \n                // how onprem works.  If it is not a sandboxed iFrame we will get the origin as expected.\n                if (this.targetOrigin) {\n                    if (origin) {\n                        return origin.toLowerCase() === \"null\" || this.targetOrigin.toLowerCase().indexOf(origin.toLowerCase()) === 0;\n                    }\n                    else {\n                        return false;\n                    }\n                }\n                else {\n                    if (rpcMessage.handshakeToken && rpcMessage.handshakeToken === this.handshakeToken) {\n                        this.targetOrigin = origin;\n                        return true;\n                    }\n                }\n            }\n            return false;\n        };\n        XDMChannel.prototype.error = function (messageObj, errorObj) {\n            this._sendRpcMessage({\n                id: messageObj.id,\n                error: this._customSerializeObject([errorObj], messageObj.serializationSettings)[0],\n                handshakeToken: messageObj.handshakeToken\n            });\n        };\n        XDMChannel.prototype._success = function (messageObj, result, handshakeToken) {\n            this._sendRpcMessage({\n                id: messageObj.id,\n                result: this._customSerializeObject([result], messageObj.serializationSettings)[0],\n                handshakeToken: handshakeToken\n            });\n        };\n        XDMChannel.prototype._sendRpcMessage = function (message) {\n            this.postToWindow.postMessage(JSON.stringify(message), \"*\");\n        };\n        XDMChannel.prototype._customSerializeObject = function (obj, settings, prevParentObjects, nextCircularRefId, depth) {\n            var _this = this;\n            if (nextCircularRefId === void 0) { nextCircularRefId = 1; }\n            if (depth === void 0) { depth = 1; }\n            if (!obj || depth > MAX_XDM_DEPTH) {\n                return undefined;\n            }\n            if (obj instanceof Node || obj instanceof Window || obj instanceof Event) {\n                return undefined;\n            }\n            var returnValue;\n            var parentObjects;\n            if (!prevParentObjects) {\n                parentObjects = {\n                    newObjects: [],\n                    originalObjects: []\n                };\n            }\n            else {\n                parentObjects = prevParentObjects;\n            }\n            parentObjects.originalObjects.push(obj);\n            var serializeMember = function (parentObject, newObject, key) {\n                var item;\n                try {\n                    item = parentObject[key];\n                }\n                catch (ex) {\n                    // Cannot access this property. Skip its serialization.\n                }\n                var itemType = typeof item;\n                if (itemType === \"undefined\") {\n                    return;\n                }\n                // Check for a circular reference by looking at parent objects\n                var parentItemIndex = -1;\n                if (itemType === \"object\") {\n                    parentItemIndex = parentObjects.originalObjects.indexOf(item);\n                }\n                if (parentItemIndex >= 0) {\n                    // Circular reference found. Add reference to parent\n                    var parentItem = parentObjects.newObjects[parentItemIndex];\n                    if (!parentItem.__circularReferenceId) {\n                        parentItem.__circularReferenceId = nextCircularRefId++;\n                    }\n                    newObject[key] = {\n                        __circularReference: parentItem.__circularReferenceId\n                    };\n                }\n                else {\n                    if (itemType === \"function\") {\n                        _this.nextProxyId++;\n                        newObject[key] = {\n                            __proxyFunctionId: _this._registerProxyFunction(item, obj),\n                            _channelId: _this.channelId\n                        };\n                    }\n                    else if (itemType === \"object\") {\n                        if (item && item instanceof Date) {\n                            newObject[key] = {\n                                __proxyDate: item.getTime()\n                            };\n                        }\n                        else {\n                            newObject[key] = _this._customSerializeObject(item, settings, parentObjects, nextCircularRefId, depth + 1);\n                        }\n                    }\n                    else if (key !== \"__proxyFunctionId\") {\n                        // Just add non object/function properties as-is. Don't include \"__proxyFunctionId\" to protect\n                        // our proxy methods from being invoked from other messages.\n                        newObject[key] = item;\n                    }\n                }\n            };\n            if (obj instanceof Array) {\n                returnValue = [];\n                parentObjects.newObjects.push(returnValue);\n                for (var i = 0, l = obj.length; i < l; i++) {\n                    serializeMember(obj, returnValue, i);\n                }\n            }\n            else {\n                returnValue = {};\n                parentObjects.newObjects.push(returnValue);\n                var keys = {};\n                try {\n                    keys = getAllPropertyNames(obj);\n                }\n                catch (ex) {\n                    // We may not be able to access the iterator of this object. Skip its serialization.\n                }\n                for (var key in keys) {\n                    // Don't serialize properties that start with an underscore.\n                    if ((key && key[0] !== \"_\") || (settings && settings.includeUnderscoreProperties)) {\n                        serializeMember(obj, returnValue, key);\n                    }\n                }\n            }\n            parentObjects.originalObjects.pop();\n            parentObjects.newObjects.pop();\n            return returnValue;\n        };\n        XDMChannel.prototype._registerProxyFunction = function (func, context) {\n            var proxyFunctionId = this.nextProxyId++;\n            this.proxyFunctions[\"proxy\" + proxyFunctionId] = function () {\n                return func.apply(context, Array.prototype.slice.call(arguments, 0));\n            };\n            return proxyFunctionId;\n        };\n        XDMChannel.prototype._customDeserializeObject = function (obj, circularRefs) {\n            var _this = this;\n            var that = this;\n            if (!obj) {\n                return null;\n            }\n            var deserializeMember = function (parentObject, key) {\n                var item = parentObject[key];\n                var itemType = typeof item;\n                if (key === \"__circularReferenceId\" && itemType === 'number') {\n                    circularRefs[item] = parentObject;\n                    delete parentObject[key];\n                }\n                else if (itemType === \"object\" && item) {\n                    if (item.__proxyFunctionId) {\n                        parentObject[key] = function () {\n                            return that.invokeRemoteMethod(\"proxy\" + item.__proxyFunctionId, \"__proxyFunctions\", Array.prototype.slice.call(arguments, 0), {}, { includeUnderscoreProperties: true });\n                        };\n                    }\n                    else if (item.__proxyDate) {\n                        parentObject[key] = new Date(item.__proxyDate);\n                    }\n                    else if (item.__circularReference) {\n                        parentObject[key] = circularRefs[item.__circularReference];\n                    }\n                    else {\n                        _this._customDeserializeObject(item, circularRefs);\n                    }\n                }\n            };\n            if (obj instanceof Array) {\n                for (var i = 0, l = obj.length; i < l; i++) {\n                    deserializeMember(obj, i);\n                }\n            }\n            else if (typeof obj === \"object\") {\n                for (var key in obj) {\n                    deserializeMember(obj, key);\n                }\n            }\n            return obj;\n        };\n        return XDMChannel;\n    }());\n    /**\n    * Registry of XDM channels kept per target frame/window\n    */\n    var XDMChannelManager = /** @class */ (function () {\n        function XDMChannelManager() {\n            var _this = this;\n            this._channels = [];\n            this._handleMessageReceived = function (event) {\n                // get channel and dispatch to it\n                var rpcMessage;\n                if (typeof event.data === \"string\") {\n                    try {\n                        rpcMessage = JSON.parse(event.data);\n                    }\n                    catch (error) {\n                        // The message is not a valid JSON string. Not one of our events.\n                    }\n                }\n                if (rpcMessage) {\n                    var handled = false;\n                    var channelOwner = void 0;\n                    for (var _i = 0, _a = _this._channels; _i < _a.length; _i++) {\n                        var channel = _a[_i];\n                        if (channel.owns(event.source, event.origin, rpcMessage)) {\n                            // keep a reference to the channel owner found. \n                            channelOwner = channel;\n                            handled = channel.onMessage(rpcMessage) || handled;\n                        }\n                    }\n                    if (channelOwner && !handled) {\n                        if (window.console) {\n                            console.error(\"No handler found on any channel for message: \".concat(JSON.stringify(rpcMessage)));\n                        }\n                        // for instance based proxies, send an error on the channel owning the message to resolve any control creation promises\n                        // on the host frame. \n                        if (rpcMessage.instanceId) {\n                            channelOwner.error(rpcMessage, new Error(\"The registered object \".concat(rpcMessage.instanceId, \" could not be found.\")));\n                        }\n                    }\n                }\n            };\n            window.addEventListener(\"message\", this._handleMessageReceived);\n        }\n        /**\n        * Add an XDM channel for the given target window/iframe\n        *\n        * @param window - Target iframe window to communicate with\n        * @param targetOrigin - Url of the target iframe (if known)\n        */\n        XDMChannelManager.prototype.addChannel = function (window, targetOrigin) {\n            var channel = new XDMChannel(window, targetOrigin);\n            this._channels.push(channel);\n            return channel;\n        };\n        XDMChannelManager.prototype.removeChannel = function (channel) {\n            this._channels = this._channels.filter(function (c) { return c !== channel; });\n        };\n        return XDMChannelManager;\n    }());\n    /**\n    * The registry of global XDM handlers\n    */\n    var globalObjectRegistry = new XDMObjectRegistry();\n    /**\n    * Manages XDM channels per target window/frame\n    */\n    var channelManager = new XDMChannelManager();\n\n    exports.XDMChannel = XDMChannel;\n    exports.XDMObjectRegistry = XDMObjectRegistry;\n    exports.channelManager = channelManager;\n    exports.globalObjectRegistry = globalObjectRegistry;\n\n}));\n//# sourceMappingURL=XDM.js.map\n","export interface WorkflowExecutionContext {\r\n    workItemId: number;\r\n    projectId: string;\r\n    workflow: 'specify' | 'plan' | 'tasks';\r\n    llmConnectionId?: string;\r\n    options?: {\r\n        temperature?: number;\r\n        includeWikiPages?: string[];\r\n        outputFormat?: 'repo' | 'wiki' | 'both';\r\n    };\r\n}\r\n\r\nexport interface WorkflowResult {\r\n    success: boolean;\r\n    runId: string;\r\n    artifacts?: {\r\n        specifications?: string[];\r\n        plans?: string[];\r\n        tasks?: any[];\r\n    };\r\n    cost?: number;\r\n    duration?: number;\r\n    error?: string;\r\n}\r\n\r\nexport class SpecKitOrchestrator {\r\n    private activeRuns: Map<string, WorkflowExecutionContext> = new Map();\r\n\r\n    public async startWorkflow(\r\n        workflow: 'specify' | 'plan' | 'tasks',\r\n        workItemId: number,\r\n        projectId: string,\r\n        options?: any\r\n    ): Promise<string> {\r\n        const runId = this.generateRunId();\r\n        const context: WorkflowExecutionContext = {\r\n            workItemId,\r\n            projectId,\r\n            workflow,\r\n            options\r\n        };\r\n\r\n        this.activeRuns.set(runId, context);\r\n\r\n        // Start the workflow execution asynchronously\r\n        this.executeWorkflow(runId, context).catch(error => {\r\n            console.error(`Workflow ${runId} failed:`, error);\r\n        });\r\n\r\n        return runId;\r\n    }\r\n\r\n    private async executeWorkflow(runId: string, context: WorkflowExecutionContext): Promise<WorkflowResult> {\r\n        const startTime = Date.now();\r\n        \r\n        try {\r\n            // Get work item context\r\n            const workItemContext = await this.getWorkItemContext(context.workItemId, context.projectId);\r\n            \r\n            // Get constitution and policies\r\n            const constitution = await this.buildConstitution(context.projectId, context.options?.includeWikiPages);\r\n            \r\n            // Execute the specific workflow\r\n            let result: any;\r\n            switch (context.workflow) {\r\n                case 'specify':\r\n                    result = await this.executeSpecifyWorkflow(workItemContext, constitution, context);\r\n                    break;\r\n                case 'plan':\r\n                    result = await this.executePlanWorkflow(workItemContext, constitution, context);\r\n                    break;\r\n                case 'tasks':\r\n                    result = await this.executeTasksWorkflow(workItemContext, constitution, context);\r\n                    break;\r\n                default:\r\n                    throw new Error(`Unknown workflow: ${context.workflow}`);\r\n            }\r\n\r\n            const duration = Date.now() - startTime;\r\n            \r\n            // Save artifacts\r\n            await this.saveArtifacts(result.artifacts, context);\r\n            \r\n            // Update work item if needed\r\n            if (context.workflow === 'tasks' && result.tasks) {\r\n                await this.createChildTasks(context.workItemId, result.tasks, context.projectId);\r\n            }\r\n\r\n            const workflowResult: WorkflowResult = {\r\n                success: true,\r\n                runId,\r\n                artifacts: result.artifacts,\r\n                cost: result.cost,\r\n                duration\r\n            };\r\n\r\n            this.activeRuns.delete(runId);\r\n            return workflowResult;\r\n\r\n        } catch (error) {\r\n            const duration = Date.now() - startTime;\r\n            const workflowResult: WorkflowResult = {\r\n                success: false,\r\n                runId,\r\n                duration,\r\n                error: error instanceof Error ? error.message : String(error)\r\n            };\r\n\r\n            this.activeRuns.delete(runId);\r\n            return workflowResult;\r\n        }\r\n    }\r\n\r\n    private async getWorkItemContext(workItemId: number, projectId: string): Promise<any> {\r\n        // This would integrate with Azure DevOps REST API to get work item details\r\n        return {\r\n            id: workItemId,\r\n            title: `Work Item ${workItemId}`,\r\n            description: 'Sample description',\r\n            acceptanceCriteria: 'Sample acceptance criteria',\r\n            type: 'User Story',\r\n            state: 'New'\r\n        };\r\n    }\r\n\r\n    private async buildConstitution(projectId: string, wikiPages?: string[]): Promise<string> {\r\n        // This would aggregate constitution from multiple sources:\r\n        // - Project wiki pages (policies, NFRs, style guides)\r\n        // - Repository .specify/ configuration\r\n        // - Team guidelines\r\n        \r\n        let constitution = \"# Project Constitution\\n\\n\";\r\n        \r\n        if (wikiPages && wikiPages.length > 0) {\r\n            for (const page of wikiPages) {\r\n                constitution += `## ${page}\\n\\n`;\r\n                constitution += await this.getWikiPageContent(projectId, page);\r\n                constitution += \"\\n\\n\";\r\n            }\r\n        } else {\r\n            constitution += \"## Default Guidelines\\n\\n\";\r\n            constitution += \"- Follow team coding standards\\n\";\r\n            constitution += \"- Include comprehensive error handling\\n\";\r\n            constitution += \"- Write unit tests for all new functionality\\n\";\r\n            constitution += \"- Document public APIs\\n\";\r\n        }\r\n\r\n        return constitution;\r\n    }\r\n\r\n    private async getWikiPageContent(projectId: string, pagePath: string): Promise<string> {\r\n        // This would fetch content from Azure DevOps Wiki API\r\n        return `Content from wiki page: ${pagePath}`;\r\n    }\r\n\r\n    private async executeSpecifyWorkflow(workItemContext: any, constitution: string, context: WorkflowExecutionContext): Promise<any> {\r\n        // This would implement the /specify workflow\r\n        // For now, return mock data\r\n        return {\r\n            artifacts: {\r\n                specifications: [\r\n                    `# Specification for ${workItemContext.title}\\n\\n## Overview\\n\\nDetailed specification based on constitution and work item requirements.`\r\n                ]\r\n            },\r\n            cost: 0.05,\r\n            tokens: {\r\n                input: 1200,\r\n                output: 800\r\n            }\r\n        };\r\n    }\r\n\r\n    private async executePlanWorkflow(workItemContext: any, constitution: string, context: WorkflowExecutionContext): Promise<any> {\r\n        // This would implement the /plan workflow\r\n        return {\r\n            artifacts: {\r\n                plans: [\r\n                    `# Implementation Plan for ${workItemContext.title}\\n\\n## Phases\\n\\n1. Analysis\\n2. Design\\n3. Implementation\\n4. Testing`\r\n                ]\r\n            },\r\n            cost: 0.03,\r\n            tokens: {\r\n                input: 800,\r\n                output: 600\r\n            }\r\n        };\r\n    }\r\n\r\n    private async executeTasksWorkflow(workItemContext: any, constitution: string, context: WorkflowExecutionContext): Promise<any> {\r\n        // This would implement the /tasks workflow\r\n        return {\r\n            artifacts: {\r\n                tasks: [\r\n                    {\r\n                        title: \"Implement core functionality\",\r\n                        description: \"Core implementation based on specification\",\r\n                        effort: 8,\r\n                        type: \"Task\"\r\n                    },\r\n                    {\r\n                        title: \"Add unit tests\",\r\n                        description: \"Comprehensive test coverage\",\r\n                        effort: 4,\r\n                        type: \"Task\"\r\n                    },\r\n                    {\r\n                        title: \"Update documentation\",\r\n                        description: \"API documentation and user guides\",\r\n                        effort: 2,\r\n                        type: \"Task\"\r\n                    }\r\n                ]\r\n            },\r\n            cost: 0.04,\r\n            tokens: {\r\n                input: 1000,\r\n                output: 500\r\n            }\r\n        };\r\n    }\r\n\r\n    private async saveArtifacts(artifacts: any, context: WorkflowExecutionContext): Promise<void> {\r\n        // This would save artifacts to the specified location (repo, wiki, or both)\r\n        console.log('Saving artifacts:', artifacts);\r\n    }\r\n\r\n    private async createChildTasks(parentWorkItemId: number, tasks: any[], projectId: string): Promise<void> {\r\n        // This would create child work items in Azure DevOps\r\n        console.log(`Creating ${tasks.length} child tasks for work item ${parentWorkItemId}`);\r\n    }\r\n\r\n    private generateRunId(): string {\r\n        return `run_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\r\n    }\r\n\r\n    public getActiveRuns(): string[] {\r\n        return Array.from(this.activeRuns.keys());\r\n    }\r\n\r\n    public getRunStatus(runId: string): WorkflowExecutionContext | null {\r\n        return this.activeRuns.get(runId) || null;\r\n    }\r\n}","define(['exports', 'tslib', './XDM'], (function (exports, tslib, XDM) { 'use strict';\n\n    /**\n     * Web SDK version number. Can be specified in an extension's set of demands like: vss-sdk-version/4.1\n     */\n    var sdkVersion = 4.1;\n    var global = window;\n    if (global._AzureDevOpsSDKVersion) {\n        console.error(\"The AzureDevOps SDK is already loaded. Only one version of this module can be loaded in a given document.\");\n    }\n    global._AzureDevOpsSDKVersion = sdkVersion;\n    /**\n     * DevOps host level\n     */\n    exports.HostType = void 0;\n    (function (HostType) {\n        HostType[HostType[\"Unknown\"] = 0] = \"Unknown\";\n        /**\n         * The Deployment host\n         */\n        HostType[HostType[\"Deployment\"] = 1] = \"Deployment\";\n        /**\n         * The Enterprise host\n         */\n        HostType[HostType[\"Enterprise\"] = 2] = \"Enterprise\";\n        /**\n         * The organization host\n         */\n        HostType[HostType[\"Organization\"] = 4] = \"Organization\";\n    })(exports.HostType || (exports.HostType = {}));\n    var hostControlId = \"DevOps.HostControl\";\n    var serviceManagerId = \"DevOps.ServiceManager\";\n    var parentChannel = XDM.channelManager.addChannel(window.parent);\n    var teamContext;\n    var webContext;\n    var hostPageContext;\n    var extensionContext;\n    var initialConfiguration;\n    var initialContributionId;\n    var userContext;\n    var hostContext;\n    var themeElement;\n    var resolveReady;\n    var readyPromise = new Promise(function (resolve) {\n        resolveReady = resolve;\n    });\n    /**\n     * Register a method so that the host frame can invoke events\n     */\n    function dispatchEvent(eventName, params) {\n        var global = window;\n        var evt;\n        if (typeof global.CustomEvent === \"function\") {\n            evt = new global.CustomEvent(eventName, params);\n        }\n        else {\n            params = params || { bubbles: false, cancelable: false };\n            evt = document.createEvent('CustomEvent');\n            evt.initCustomEvent(eventName, params.bubbles, params.cancelable, params.detail);\n        }\n        window.dispatchEvent(evt);\n    }\n    parentChannel.getObjectRegistry().register(\"DevOps.SdkClient\", {\n        dispatchEvent: dispatchEvent\n    });\n    /**\n     * Initiates the handshake with the host window.\n     *\n     * @param options - Initialization options for the extension.\n     */\n    function init(options) {\n        return new Promise(function (resolve) {\n            var initOptions = tslib.__assign(tslib.__assign({}, options), { sdkVersion: sdkVersion });\n            parentChannel.invokeRemoteMethod(\"initialHandshake\", hostControlId, [initOptions]).then(function (handshakeData) {\n                if ('context' in handshakeData) {\n                    var data = handshakeData;\n                    var context = data.context;\n                    hostPageContext = context.pageContext;\n                    webContext = hostPageContext ? hostPageContext.webContext : undefined;\n                    teamContext = webContext ? webContext.team : undefined;\n                    initialConfiguration = data.initialConfig || {};\n                    initialContributionId = data.contributionId;\n                    extensionContext = context.extension;\n                    userContext = context.user;\n                    hostContext = context.host;\n                }\n                else {\n                    // handle legacy platform\n                    var data = handshakeData;\n                    hostPageContext = data.pageContext;\n                    webContext = hostPageContext ? hostPageContext.webContext : undefined;\n                    teamContext = webContext ? webContext.team : undefined;\n                    initialConfiguration = data.initialConfig || {};\n                    initialContributionId = data.contribution.id;\n                    extensionContext = data.extensionContext;\n                    extensionContext.id = extensionContext.publisherId + '.' + extensionContext.extensionId;\n                }\n                if (handshakeData.themeData) {\n                    applyTheme(handshakeData.themeData);\n                    window.addEventListener(\"themeChanged\", function (ev) {\n                        applyTheme(ev.detail.data);\n                    });\n                }\n                resolveReady();\n                resolve();\n            });\n        });\n    }\n    /**\n    * Register a callback that gets called once the initial setup/handshake has completed.\n    * If the initial setup is already completed, the callback is invoked at the end of the current call stack.\n    */\n    function ready() {\n        return tslib.__awaiter(this, void 0, void 0, function () {\n            return tslib.__generator(this, function (_a) {\n                return [2 /*return*/, readyPromise];\n            });\n        });\n    }\n    /**\n    * Notifies the host that the extension successfully loaded (stop showing the loading indicator)\n    */\n    function notifyLoadSucceeded() {\n        return parentChannel.invokeRemoteMethod(\"notifyLoadSucceeded\", hostControlId);\n    }\n    /**\n    * Notifies the host that the extension failed to load\n    */\n    function notifyLoadFailed(e) {\n        return parentChannel.invokeRemoteMethod(\"notifyLoadFailed\", hostControlId, [e]);\n    }\n    function getWaitForReadyError(method) {\n        return \"Attempted to call \".concat(method, \"() before init() was complete. Wait for init to complete or place within a ready() callback.\");\n    }\n    /**\n    * Get the configuration data passed in the initial handshake from the parent frame\n    */\n    function getConfiguration() {\n        if (!initialConfiguration) {\n            throw new Error(getWaitForReadyError(\"getConfiguration\"));\n        }\n        return initialConfiguration;\n    }\n    /**\n    * Gets the information about the contribution that first caused this extension to load.\n    */\n    function getContributionId() {\n        if (!initialContributionId) {\n            throw new Error(getWaitForReadyError(\"getContributionId\"));\n        }\n        return initialContributionId;\n    }\n    /**\n    * Gets information about the current user\n    */\n    function getUser() {\n        if (!userContext) {\n            throw new Error(getWaitForReadyError(\"getUser\"));\n        }\n        return userContext;\n    }\n    /**\n    * Gets information about the host (i.e. an Azure DevOps organization) that the page is targeting\n    */\n    function getHost() {\n        if (!hostContext) {\n            throw new Error(getWaitForReadyError(\"getHost\"));\n        }\n        return hostContext;\n    }\n    /**\n    * Get the context about the extension that owns the content that is being hosted\n    */\n    function getExtensionContext() {\n        if (!extensionContext) {\n            throw new Error(getWaitForReadyError(\"getExtensionContext\"));\n        }\n        return extensionContext;\n    }\n    /**\n    * Gets information about the team that the page is targeting\n    */\n    function getTeamContext() {\n        if (!teamContext) {\n            throw new Error(getWaitForReadyError(\"getTeamContext\"));\n        }\n        return teamContext;\n    }\n    /**\n    * Get the context about the host page\n    */\n    function getPageContext() {\n        if (!hostPageContext) {\n            throw new Error(getWaitForReadyError(\"getPageContext\"));\n        }\n        return hostPageContext;\n    }\n    /**\n    * Get the context about the web\n    */\n    function getWebContext() {\n        if (!webContext) {\n            throw new Error(getWaitForReadyError(\"getWebContext\"));\n        }\n        return webContext;\n    }\n    /**\n    * Get the contribution with the given contribution id. The returned contribution has a method to get a registered object within that contribution.\n    *\n    * @param contributionId - Id of the contribution to get\n    */\n    function getService(contributionId) {\n        return tslib.__awaiter(this, void 0, void 0, function () {\n            return tslib.__generator(this, function (_a) {\n                return [2 /*return*/, ready().then(function () {\n                        return parentChannel.invokeRemoteMethod(\"getService\", serviceManagerId, [contributionId]);\n                    })];\n            });\n        });\n    }\n    /**\n    * Register an object (instance or factory method) that this extension exposes to the host frame.\n    *\n    * @param instanceId - unique id of the registered object\n    * @param instance - Either: (1) an object instance, or (2) a function that takes optional context data and returns an object instance.\n    */\n    function register(instanceId, instance) {\n        parentChannel.getObjectRegistry().register(instanceId, instance);\n    }\n    /**\n    * Removes an object that this extension exposed to the host frame.\n    *\n    * @param instanceId - unique id of the registered object\n    */\n    function unregister(instanceId) {\n        parentChannel.getObjectRegistry().unregister(instanceId);\n    }\n    /**\n    * Fetch an access token which will allow calls to be made to other DevOps services\n    */\n    function getAccessToken() {\n        return tslib.__awaiter(this, void 0, void 0, function () {\n            return tslib.__generator(this, function (_a) {\n                return [2 /*return*/, parentChannel.invokeRemoteMethod(\"getAccessToken\", hostControlId).then(function (tokenObj) { return tokenObj.token; })];\n            });\n        });\n    }\n    /**\n    * Fetch an token which can be used to identify the current user\n    */\n    function getAppToken() {\n        return tslib.__awaiter(this, void 0, void 0, function () {\n            return tslib.__generator(this, function (_a) {\n                return [2 /*return*/, parentChannel.invokeRemoteMethod(\"getAppToken\", hostControlId).then(function (tokenObj) { return tokenObj.token; })];\n            });\n        });\n    }\n    /**\n    * Requests the parent window to resize the container for this extension based on the current extension size.\n    *\n    * @param width - Optional width, defaults to scrollWidth\n    * @param height - Optional height, defaults to scrollHeight\n    */\n    function resize(width, height) {\n        var body = document.body;\n        if (body) {\n            var newWidth = typeof width === \"number\" ? width : (body ? body.scrollWidth : undefined);\n            var newHeight = typeof height === \"number\" ? height : (body ? body.scrollHeight : undefined);\n            parentChannel.invokeRemoteMethod(\"resize\", hostControlId, [newWidth, newHeight]);\n        }\n    }\n    /**\n     * Applies theme variables to the current document\n     */\n    function applyTheme(themeData) {\n        if (!themeElement) {\n            themeElement = document.createElement(\"style\");\n            themeElement.type = \"text/css\";\n            document.head.appendChild(themeElement);\n        }\n        var cssVariables = [];\n        if (themeData) {\n            for (var varName in themeData) {\n                cssVariables.push(\"--\" + varName + \": \" + themeData[varName]);\n            }\n        }\n        themeElement.innerText = \":root { \" + cssVariables.join(\"; \") + \" } body { color: var(--text-primary-color) }\";\n        dispatchEvent(\"themeApplied\", { detail: themeData });\n    }\n\n    exports.applyTheme = applyTheme;\n    exports.getAccessToken = getAccessToken;\n    exports.getAppToken = getAppToken;\n    exports.getConfiguration = getConfiguration;\n    exports.getContributionId = getContributionId;\n    exports.getExtensionContext = getExtensionContext;\n    exports.getHost = getHost;\n    exports.getPageContext = getPageContext;\n    exports.getService = getService;\n    exports.getTeamContext = getTeamContext;\n    exports.getUser = getUser;\n    exports.getWebContext = getWebContext;\n    exports.init = init;\n    exports.notifyLoadFailed = notifyLoadFailed;\n    exports.notifyLoadSucceeded = notifyLoadSucceeded;\n    exports.ready = ready;\n    exports.register = register;\n    exports.resize = resize;\n    exports.sdkVersion = sdkVersion;\n    exports.unregister = unregister;\n\n}));\n//# sourceMappingURL=SDK.js.map\n"],"names":["seedAssets","prompts","config","isRepositorySeeded","projectId","this","getRepositoryStatus","isSeeded","error","console","specKitVersion","undefined","lastSeededDate","configFiles","seedRepository","targetRepo","repoId","getDefaultRepository","branchName","Date","now","createBranch","filesAdded","promptFile","content","getPromptTemplate","addFile","push","configFile","getConfigTemplate","success","prUrl","createPullRequest","Error","message","String","log","filePath","sourceBranch","targetBranch","title","description","Math","floor","random","saveArtifact","commitMessage","getArtifacts","artifactType","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","__","constructor","create","__assign","assign","t","s","i","n","arguments","length","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__decorate","decorators","target","key","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__esDecorate","ctor","descriptorIn","contextIn","initializers","extraInitializers","accept","f","_","kind","descriptor","name","done","context","access","addInitializer","result","get","set","init","unshift","__runInitializers","thisArg","value","useValue","__propKey","x","concat","__setFunctionName","prefix","configurable","__metadata","metadataKey","metadataValue","metadata","__awaiter","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","then","__generator","body","y","g","label","sent","trys","ops","verb","Symbol","iterator","v","op","pop","__createBinding","o","m","k","k2","__esModule","writable","enumerable","__exportStar","__values","__read","ar","__spread","__spreadArrays","il","a","j","jl","__spreadArray","to","from","pack","l","slice","__await","__asyncGenerator","asyncIterator","q","resume","fulfill","settle","shift","__asyncDelegator","__asyncValues","__makeTemplateObject","cooked","raw","__setModuleDefault","__importStar","mod","__importDefault","default","__classPrivateFieldGet","receiver","state","has","__classPrivateFieldSet","__classPrivateFieldIn","__addDisposableResource","env","async","dispose","inner","asyncDispose","stack","_SuppressedError","SuppressedError","suppressed","__disposeResources","fail","hasError","rec","connectionCache","Map","getProjectConnections","connections","fetchServiceConnections","id","baseUrl","model","temperatureCap","isDefault","isActive","createdDate","lastTestDate","region","testConnection","connectionId","startTime","connection","getConnectionById","makeTestCall","latency","response","setDefaultConnection","forEach","conn","executePrompt","prompt","options","inputTokens","ceil","outputTokens","substring","cost","calculateCost","tokens","input","output","pricing","modelPricing","clearCache","clear","metricsCache","runsCache","recordWorkflowStart","workflowRun","runId","generateRunId","run","timestamp","status","projectRuns","recordAuditEntry","action","details","workflow","workItemId","userId","getCurrentUserId","recordWorkflowCompletion","runIndex","findIndex","duration","errorMessage","artifacts","delete","getProjectMetrics","runs","getRecentRuns","metrics","calculateMetrics","successfulRuns","filter","totalRuns","successRate","totalCost","reduce","sum","avgCost","avgDuration","workflowBreakdown","specify","plan","tasks","costBreakdown","total","byWorkflow","byMonth","calculateMonthlyCosts","leadTimeMetrics","avgSpecifyToMerge","avgPlanToImplementation","avgTasksToCompletion","monthlyData","month","toISOString","entries","map","sort","localeCompare","limit","cached","mockRuns","workItemTitle","llmModel","getRunDetails","values","find","entry","auditEntry","generateAuditId","toString","substr","exportMetrics","format","JSON","stringify","csv","exports","tslib","smallestRandom","parseInt","maxSafeInteger","Number","MAX_SAFE_INTEGER","XDMObjectRegistry","objects","register","instanceId","instance","unregister","getInstance","contextData","nextChannelId","XDMChannel","postToWindow","targetOrigin","promises","nextMessageId","nextProxyId","proxyFunctions","registry","channelId","handshakeToken","getObjectRegistry","invokeRemoteMethod","methodName","params","instanceContextData","serializationSettings","promise","_this","_a","instanceContext","_customSerializeObject","_sendRpcMessage","getRemoteObjectProxy","invokeMethod","registeredInstance","rpcMessage","method","methodArgs","_customDeserializeObject","asyncResult","_success","exception","getRegisteredObject","registeredObject","globalObjectRegistry","onMessage","resolvedInstance","owns","source","origin","toLowerCase","messageObj","errorObj","postMessage","obj","settings","prevParentObjects","nextCircularRefId","depth","Node","Window","Event","returnValue","parentObjects","newObjects","originalObjects","serializeMember","parentObject","newObject","item","ex","itemType","parentItemIndex","parentItem","__circularReferenceId","__circularReference","__proxyFunctionId","_registerProxyFunction","_channelId","__proxyDate","getTime","keys","properties","_i","ownPropertyNames_1","getOwnPropertyNames","name_1","getPrototypeOf","getAllPropertyNames","includeUnderscoreProperties","func","proxyFunctionId","circularRefs","that","deserializeMember","XDMChannelManager","_channels","_handleMessageReceived","event","data","parse","handled","channelOwner","channel","window","addEventListener","addChannel","removeChannel","channelManager","activeRuns","startWorkflow","executeWorkflow","catch","workItemContext","getWorkItemContext","constitution","buildConstitution","includeWikiPages","executeSpecifyWorkflow","executePlanWorkflow","executeTasksWorkflow","saveArtifacts","createChildTasks","workflowResult","acceptanceCriteria","type","wikiPages","page","getWikiPageContent","pagePath","specifications","plans","effort","parentWorkItemId","getActiveRuns","getRunStatus","XDM","HostType","global","_AzureDevOpsSDKVersion","teamContext","webContext","hostPageContext","extensionContext","initialConfiguration","initialContributionId","userContext","hostContext","themeElement","resolveReady","hostControlId","parentChannel","parent","readyPromise","dispatchEvent","eventName","evt","CustomEvent","bubbles","cancelable","document","createEvent","initCustomEvent","detail","ready","getWaitForReadyError","applyTheme","themeData","createElement","head","appendChild","cssVariables","varName","innerText","join","getAccessToken","tokenObj","token","getAppToken","getConfiguration","getContributionId","getExtensionContext","getHost","getPageContext","getService","contributionId","getTeamContext","getUser","getWebContext","initOptions","sdkVersion","handshakeData","pageContext","team","initialConfig","extension","user","host","contribution","publisherId","extensionId","ev","notifyLoadFailed","notifyLoadSucceeded","resize","width","height","newWidth","scrollWidth","newHeight","scrollHeight"],"sourceRoot":""}